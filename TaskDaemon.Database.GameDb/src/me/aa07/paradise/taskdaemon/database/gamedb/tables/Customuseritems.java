/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.gamedb.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.gamedb.Indexes;
import me.aa07.paradise.taskdaemon.database.gamedb.Keys;
import me.aa07.paradise.taskdaemon.database.gamedb.ParadbUnmodified;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.records.CustomuseritemsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Customuseritems extends TableImpl<CustomuseritemsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradb_unmodified.customuseritems</code>
     */
    public static final Customuseritems CUSTOMUSERITEMS = new Customuseritems();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomuseritemsRecord> getRecordType() {
        return CustomuseritemsRecord.class;
    }

    /**
     * The column <code>paradb_unmodified.customuseritems.id</code>.
     */
    public final TableField<CustomuseritemsRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradb_unmodified.customuseritems.cuiCKey</code>.
     */
    public final TableField<CustomuseritemsRecord, String> CUICKEY = createField(DSL.name("cuiCKey"), SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>paradb_unmodified.customuseritems.cuiRealName</code>.
     */
    public final TableField<CustomuseritemsRecord, String> CUIREALNAME = createField(DSL.name("cuiRealName"), SQLDataType.VARCHAR(60).nullable(false), this, "");

    /**
     * The column <code>paradb_unmodified.customuseritems.cuiPath</code>.
     */
    public final TableField<CustomuseritemsRecord, String> CUIPATH = createField(DSL.name("cuiPath"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>paradb_unmodified.customuseritems.cuiItemName</code>.
     */
    public final TableField<CustomuseritemsRecord, String> CUIITEMNAME = createField(DSL.name("cuiItemName"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradb_unmodified.customuseritems.cuiDescription</code>.
     */
    public final TableField<CustomuseritemsRecord, String> CUIDESCRIPTION = createField(DSL.name("cuiDescription"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradb_unmodified.customuseritems.cuiReason</code>.
     */
    public final TableField<CustomuseritemsRecord, String> CUIREASON = createField(DSL.name("cuiReason"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradb_unmodified.customuseritems.cuiPropAdjust</code>.
     */
    public final TableField<CustomuseritemsRecord, String> CUIPROPADJUST = createField(DSL.name("cuiPropAdjust"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradb_unmodified.customuseritems.cuiJobMask</code>.
     */
    public final TableField<CustomuseritemsRecord, String> CUIJOBMASK = createField(DSL.name("cuiJobMask"), SQLDataType.CLOB.nullable(false), this, "");

    private Customuseritems(Name alias, Table<CustomuseritemsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Customuseritems(Name alias, Table<CustomuseritemsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradb_unmodified.customuseritems</code> table
     * reference
     */
    public Customuseritems(String alias) {
        this(DSL.name(alias), CUSTOMUSERITEMS);
    }

    /**
     * Create an aliased <code>paradb_unmodified.customuseritems</code> table
     * reference
     */
    public Customuseritems(Name alias) {
        this(alias, CUSTOMUSERITEMS);
    }

    /**
     * Create a <code>paradb_unmodified.customuseritems</code> table reference
     */
    public Customuseritems() {
        this(DSL.name("customuseritems"), null);
    }

    public <O extends Record> Customuseritems(Table<O> child, ForeignKey<O, CustomuseritemsRecord> key) {
        super(child, key, CUSTOMUSERITEMS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadbUnmodified.PARADB_UNMODIFIED;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CUSTOMUSERITEMS_CUICKEY);
    }

    @Override
    public Identity<CustomuseritemsRecord, Integer> getIdentity() {
        return (Identity<CustomuseritemsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CustomuseritemsRecord> getPrimaryKey() {
        return Keys.KEY_CUSTOMUSERITEMS_PRIMARY;
    }

    @Override
    public Customuseritems as(String alias) {
        return new Customuseritems(DSL.name(alias), this);
    }

    @Override
    public Customuseritems as(Name alias) {
        return new Customuseritems(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Customuseritems rename(String name) {
        return new Customuseritems(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Customuseritems rename(Name name) {
        return new Customuseritems(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
