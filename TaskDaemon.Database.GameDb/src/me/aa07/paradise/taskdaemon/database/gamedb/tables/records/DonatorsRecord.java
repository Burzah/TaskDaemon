/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.gamedb.tables.records;


import java.time.LocalDateTime;

import me.aa07.paradise.taskdaemon.database.gamedb.tables.Donators;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DonatorsRecord extends UpdatableRecordImpl<DonatorsRecord> implements Record6<String, Integer, String, LocalDateTime, LocalDateTime, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradb_unmodified.donators.patreon_name</code>.
     */
    public void setPatreonName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradb_unmodified.donators.patreon_name</code>.
     */
    public String getPatreonName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>paradb_unmodified.donators.tier</code>.
     */
    public void setTier(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradb_unmodified.donators.tier</code>.
     */
    public Integer getTier() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>paradb_unmodified.donators.ckey</code>. Manual Field
     */
    public void setCkey(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradb_unmodified.donators.ckey</code>. Manual Field
     */
    public String getCkey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>paradb_unmodified.donators.start_date</code>.
     */
    public void setStartDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradb_unmodified.donators.start_date</code>.
     */
    public LocalDateTime getStartDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>paradb_unmodified.donators.end_date</code>.
     */
    public void setEndDate(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradb_unmodified.donators.end_date</code>.
     */
    public LocalDateTime getEndDate() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>paradb_unmodified.donators.active</code>.
     */
    public void setActive(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradb_unmodified.donators.active</code>.
     */
    public Byte getActive() {
        return (Byte) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, Integer, String, LocalDateTime, LocalDateTime, Byte> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, Integer, String, LocalDateTime, LocalDateTime, Byte> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Donators.DONATORS.PATREON_NAME;
    }

    @Override
    public Field<Integer> field2() {
        return Donators.DONATORS.TIER;
    }

    @Override
    public Field<String> field3() {
        return Donators.DONATORS.CKEY;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Donators.DONATORS.START_DATE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Donators.DONATORS.END_DATE;
    }

    @Override
    public Field<Byte> field6() {
        return Donators.DONATORS.ACTIVE;
    }

    @Override
    public String component1() {
        return getPatreonName();
    }

    @Override
    public Integer component2() {
        return getTier();
    }

    @Override
    public String component3() {
        return getCkey();
    }

    @Override
    public LocalDateTime component4() {
        return getStartDate();
    }

    @Override
    public LocalDateTime component5() {
        return getEndDate();
    }

    @Override
    public Byte component6() {
        return getActive();
    }

    @Override
    public String value1() {
        return getPatreonName();
    }

    @Override
    public Integer value2() {
        return getTier();
    }

    @Override
    public String value3() {
        return getCkey();
    }

    @Override
    public LocalDateTime value4() {
        return getStartDate();
    }

    @Override
    public LocalDateTime value5() {
        return getEndDate();
    }

    @Override
    public Byte value6() {
        return getActive();
    }

    @Override
    public DonatorsRecord value1(String value) {
        setPatreonName(value);
        return this;
    }

    @Override
    public DonatorsRecord value2(Integer value) {
        setTier(value);
        return this;
    }

    @Override
    public DonatorsRecord value3(String value) {
        setCkey(value);
        return this;
    }

    @Override
    public DonatorsRecord value4(LocalDateTime value) {
        setStartDate(value);
        return this;
    }

    @Override
    public DonatorsRecord value5(LocalDateTime value) {
        setEndDate(value);
        return this;
    }

    @Override
    public DonatorsRecord value6(Byte value) {
        setActive(value);
        return this;
    }

    @Override
    public DonatorsRecord values(String value1, Integer value2, String value3, LocalDateTime value4, LocalDateTime value5, Byte value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DonatorsRecord
     */
    public DonatorsRecord() {
        super(Donators.DONATORS);
    }

    /**
     * Create a detached, initialised DonatorsRecord
     */
    public DonatorsRecord(String patreonName, Integer tier, String ckey, LocalDateTime startDate, LocalDateTime endDate, Byte active) {
        super(Donators.DONATORS);

        setPatreonName(patreonName);
        setTier(tier);
        setCkey(ckey);
        setStartDate(startDate);
        setEndDate(endDate);
        setActive(active);
    }
}
