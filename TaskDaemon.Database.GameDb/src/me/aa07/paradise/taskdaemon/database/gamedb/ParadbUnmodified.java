/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.gamedb;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.gamedb.tables.Admin;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.AdminLog;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Ban;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Changelog;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Characters;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.ConnectionLog;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Customuseritems;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Death;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Donators;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Feedback;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.InstanceDataCache;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Ip2group;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Ipintel;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.JsonDatumSaves;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.LegacyPopulation;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Library;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Memo;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Notes;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.OauthTokens;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.PaiSaves;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Player;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.PlaytimeHistory;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Privacy;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Round;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Tickets;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.VpnWhitelist;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Watch;
import me.aa07.paradise.taskdaemon.database.gamedb.tables._2faSecrets;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParadbUnmodified extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradb_unmodified</code>
     */
    public static final ParadbUnmodified PARADB_UNMODIFIED = new ParadbUnmodified();

    /**
     * The table <code>paradb_unmodified.2fa_secrets</code>.
     */
    public final _2faSecrets _2FA_SECRETS = _2faSecrets._2FA_SECRETS;

    /**
     * The table <code>paradb_unmodified.admin</code>.
     */
    public final Admin ADMIN = Admin.ADMIN;

    /**
     * The table <code>paradb_unmodified.admin_log</code>.
     */
    public final AdminLog ADMIN_LOG = AdminLog.ADMIN_LOG;

    /**
     * The table <code>paradb_unmodified.ban</code>.
     */
    public final Ban BAN = Ban.BAN;

    /**
     * The table <code>paradb_unmodified.changelog</code>.
     */
    public final Changelog CHANGELOG = Changelog.CHANGELOG;

    /**
     * The table <code>paradb_unmodified.characters</code>.
     */
    public final Characters CHARACTERS = Characters.CHARACTERS;

    /**
     * The table <code>paradb_unmodified.connection_log</code>.
     */
    public final ConnectionLog CONNECTION_LOG = ConnectionLog.CONNECTION_LOG;

    /**
     * The table <code>paradb_unmodified.customuseritems</code>.
     */
    public final Customuseritems CUSTOMUSERITEMS = Customuseritems.CUSTOMUSERITEMS;

    /**
     * The table <code>paradb_unmodified.death</code>.
     */
    public final Death DEATH = Death.DEATH;

    /**
     * The table <code>paradb_unmodified.donators</code>.
     */
    public final Donators DONATORS = Donators.DONATORS;

    /**
     * The table <code>paradb_unmodified.feedback</code>.
     */
    public final Feedback FEEDBACK = Feedback.FEEDBACK;

    /**
     * The table <code>paradb_unmodified.instance_data_cache</code>.
     */
    public final InstanceDataCache INSTANCE_DATA_CACHE = InstanceDataCache.INSTANCE_DATA_CACHE;

    /**
     * The table <code>paradb_unmodified.ip2group</code>.
     */
    public final Ip2group IP2GROUP = Ip2group.IP2GROUP;

    /**
     * The table <code>paradb_unmodified.ipintel</code>.
     */
    public final Ipintel IPINTEL = Ipintel.IPINTEL;

    /**
     * The table <code>paradb_unmodified.json_datum_saves</code>.
     */
    public final JsonDatumSaves JSON_DATUM_SAVES = JsonDatumSaves.JSON_DATUM_SAVES;

    /**
     * The table <code>paradb_unmodified.legacy_population</code>.
     */
    public final LegacyPopulation LEGACY_POPULATION = LegacyPopulation.LEGACY_POPULATION;

    /**
     * The table <code>paradb_unmodified.library</code>.
     */
    public final Library LIBRARY = Library.LIBRARY;

    /**
     * The table <code>paradb_unmodified.memo</code>.
     */
    public final Memo MEMO = Memo.MEMO;

    /**
     * The table <code>paradb_unmodified.notes</code>.
     */
    public final Notes NOTES = Notes.NOTES;

    /**
     * The table <code>paradb_unmodified.oauth_tokens</code>.
     */
    public final OauthTokens OAUTH_TOKENS = OauthTokens.OAUTH_TOKENS;

    /**
     * The table <code>paradb_unmodified.pai_saves</code>.
     */
    public final PaiSaves PAI_SAVES = PaiSaves.PAI_SAVES;

    /**
     * The table <code>paradb_unmodified.player</code>.
     */
    public final Player PLAYER = Player.PLAYER;

    /**
     * The table <code>paradb_unmodified.playtime_history</code>.
     */
    public final PlaytimeHistory PLAYTIME_HISTORY = PlaytimeHistory.PLAYTIME_HISTORY;

    /**
     * The table <code>paradb_unmodified.privacy</code>.
     */
    public final Privacy PRIVACY = Privacy.PRIVACY;

    /**
     * The table <code>paradb_unmodified.round</code>.
     */
    public final Round ROUND = Round.ROUND;

    /**
     * The table <code>paradb_unmodified.tickets</code>.
     */
    public final Tickets TICKETS = Tickets.TICKETS;

    /**
     * The table <code>paradb_unmodified.vpn_whitelist</code>.
     */
    public final VpnWhitelist VPN_WHITELIST = VpnWhitelist.VPN_WHITELIST;

    /**
     * The table <code>paradb_unmodified.watch</code>.
     */
    public final Watch WATCH = Watch.WATCH;

    /**
     * No further instances allowed
     */
    private ParadbUnmodified() {
        super("paradb_unmodified", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            _2faSecrets._2FA_SECRETS,
            Admin.ADMIN,
            AdminLog.ADMIN_LOG,
            Ban.BAN,
            Changelog.CHANGELOG,
            Characters.CHARACTERS,
            ConnectionLog.CONNECTION_LOG,
            Customuseritems.CUSTOMUSERITEMS,
            Death.DEATH,
            Donators.DONATORS,
            Feedback.FEEDBACK,
            InstanceDataCache.INSTANCE_DATA_CACHE,
            Ip2group.IP2GROUP,
            Ipintel.IPINTEL,
            JsonDatumSaves.JSON_DATUM_SAVES,
            LegacyPopulation.LEGACY_POPULATION,
            Library.LIBRARY,
            Memo.MEMO,
            Notes.NOTES,
            OauthTokens.OAUTH_TOKENS,
            PaiSaves.PAI_SAVES,
            Player.PLAYER,
            PlaytimeHistory.PLAYTIME_HISTORY,
            Privacy.PRIVACY,
            Round.ROUND,
            Tickets.TICKETS,
            VpnWhitelist.VPN_WHITELIST,
            Watch.WATCH
        );
    }
}
