/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.gamedb.tables.records;


import me.aa07.paradise.taskdaemon.database.gamedb.tables.VpnWhitelist;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VpnWhitelistRecord extends UpdatableRecordImpl<VpnWhitelistRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_gamedb.vpn_whitelist.ckey</code>.
     */
    public void setCkey(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_gamedb.vpn_whitelist.ckey</code>.
     */
    public String getCkey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>paradise_gamedb.vpn_whitelist.reason</code>.
     */
    public void setReason(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_gamedb.vpn_whitelist.reason</code>.
     */
    public String getReason() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return VpnWhitelist.VPN_WHITELIST.CKEY;
    }

    @Override
    public Field<String> field2() {
        return VpnWhitelist.VPN_WHITELIST.REASON;
    }

    @Override
    public String component1() {
        return getCkey();
    }

    @Override
    public String component2() {
        return getReason();
    }

    @Override
    public String value1() {
        return getCkey();
    }

    @Override
    public String value2() {
        return getReason();
    }

    @Override
    public VpnWhitelistRecord value1(String value) {
        setCkey(value);
        return this;
    }

    @Override
    public VpnWhitelistRecord value2(String value) {
        setReason(value);
        return this;
    }

    @Override
    public VpnWhitelistRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VpnWhitelistRecord
     */
    public VpnWhitelistRecord() {
        super(VpnWhitelist.VPN_WHITELIST);
    }

    /**
     * Create a detached, initialised VpnWhitelistRecord
     */
    public VpnWhitelistRecord(String ckey, String reason) {
        super(VpnWhitelist.VPN_WHITELIST);

        setCkey(ckey);
        setReason(reason);
    }
}
