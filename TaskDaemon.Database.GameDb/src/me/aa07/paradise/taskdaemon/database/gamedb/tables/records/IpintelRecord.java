/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.gamedb.tables.records;


import java.time.LocalDateTime;

import me.aa07.paradise.taskdaemon.database.gamedb.tables.Ipintel;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IpintelRecord extends UpdatableRecordImpl<IpintelRecord> implements Record3<UInteger, LocalDateTime, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradb_unmodified.ipintel.ip</code>.
     */
    public void setIp(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradb_unmodified.ipintel.ip</code>.
     */
    public UInteger getIp() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>paradb_unmodified.ipintel.date</code>.
     */
    public void setDate(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradb_unmodified.ipintel.date</code>.
     */
    public LocalDateTime getDate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>paradb_unmodified.ipintel.intel</code>.
     */
    public void setIntel(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradb_unmodified.ipintel.intel</code>.
     */
    public Double getIntel() {
        return (Double) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UInteger, LocalDateTime, Double> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UInteger, LocalDateTime, Double> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return Ipintel.IPINTEL.IP;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Ipintel.IPINTEL.DATE;
    }

    @Override
    public Field<Double> field3() {
        return Ipintel.IPINTEL.INTEL;
    }

    @Override
    public UInteger component1() {
        return getIp();
    }

    @Override
    public LocalDateTime component2() {
        return getDate();
    }

    @Override
    public Double component3() {
        return getIntel();
    }

    @Override
    public UInteger value1() {
        return getIp();
    }

    @Override
    public LocalDateTime value2() {
        return getDate();
    }

    @Override
    public Double value3() {
        return getIntel();
    }

    @Override
    public IpintelRecord value1(UInteger value) {
        setIp(value);
        return this;
    }

    @Override
    public IpintelRecord value2(LocalDateTime value) {
        setDate(value);
        return this;
    }

    @Override
    public IpintelRecord value3(Double value) {
        setIntel(value);
        return this;
    }

    @Override
    public IpintelRecord values(UInteger value1, LocalDateTime value2, Double value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IpintelRecord
     */
    public IpintelRecord() {
        super(Ipintel.IPINTEL);
    }

    /**
     * Create a detached, initialised IpintelRecord
     */
    public IpintelRecord(UInteger ip, LocalDateTime date, Double intel) {
        super(Ipintel.IPINTEL);

        setIp(ip);
        setDate(date);
        setIntel(intel);
    }
}
