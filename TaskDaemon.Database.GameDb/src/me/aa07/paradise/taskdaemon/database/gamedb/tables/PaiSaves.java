/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.gamedb.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.gamedb.Keys;
import me.aa07.paradise.taskdaemon.database.gamedb.ParadiseGamedb;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.records.PaiSavesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaiSaves extends TableImpl<PaiSavesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_gamedb.pai_saves</code>
     */
    public static final PaiSaves PAI_SAVES = new PaiSaves();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PaiSavesRecord> getRecordType() {
        return PaiSavesRecord.class;
    }

    /**
     * The column <code>paradise_gamedb.pai_saves.id</code>.
     */
    public final TableField<PaiSavesRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_gamedb.pai_saves.ckey</code>.
     */
    public final TableField<PaiSavesRecord, String> CKEY = createField(DSL.name("ckey"), SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>paradise_gamedb.pai_saves.pai_name</code>.
     */
    public final TableField<PaiSavesRecord, String> PAI_NAME = createField(DSL.name("pai_name"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_gamedb.pai_saves.description</code>.
     */
    public final TableField<PaiSavesRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_gamedb.pai_saves.preferred_role</code>.
     */
    public final TableField<PaiSavesRecord, String> PREFERRED_ROLE = createField(DSL.name("preferred_role"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_gamedb.pai_saves.ooc_comments</code>.
     */
    public final TableField<PaiSavesRecord, String> OOC_COMMENTS = createField(DSL.name("ooc_comments"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    private PaiSaves(Name alias, Table<PaiSavesRecord> aliased) {
        this(alias, aliased, null);
    }

    private PaiSaves(Name alias, Table<PaiSavesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_gamedb.pai_saves</code> table reference
     */
    public PaiSaves(String alias) {
        this(DSL.name(alias), PAI_SAVES);
    }

    /**
     * Create an aliased <code>paradise_gamedb.pai_saves</code> table reference
     */
    public PaiSaves(Name alias) {
        this(alias, PAI_SAVES);
    }

    /**
     * Create a <code>paradise_gamedb.pai_saves</code> table reference
     */
    public PaiSaves() {
        this(DSL.name("pai_saves"), null);
    }

    public <O extends Record> PaiSaves(Table<O> child, ForeignKey<O, PaiSavesRecord> key) {
        super(child, key, PAI_SAVES);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseGamedb.PARADISE_GAMEDB;
    }

    @Override
    public Identity<PaiSavesRecord, Integer> getIdentity() {
        return (Identity<PaiSavesRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<PaiSavesRecord> getPrimaryKey() {
        return Keys.KEY_PAI_SAVES_PRIMARY;
    }

    @Override
    public List<UniqueKey<PaiSavesRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_PAI_SAVES_CKEY);
    }

    @Override
    public PaiSaves as(String alias) {
        return new PaiSaves(DSL.name(alias), this);
    }

    @Override
    public PaiSaves as(Name alias) {
        return new PaiSaves(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PaiSaves rename(String name) {
        return new PaiSaves(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PaiSaves rename(Name name) {
        return new PaiSaves(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
