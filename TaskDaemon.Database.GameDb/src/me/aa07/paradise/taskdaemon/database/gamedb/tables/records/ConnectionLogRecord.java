/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.gamedb.tables.records;


import java.time.LocalDateTime;

import me.aa07.paradise.taskdaemon.database.gamedb.enums.ConnectionLogResult;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.ConnectionLog;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConnectionLogRecord extends UpdatableRecordImpl<ConnectionLogRecord> implements Record7<Integer, LocalDateTime, String, String, String, String, ConnectionLogResult> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_gamedb.connection_log.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_gamedb.connection_log.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>paradise_gamedb.connection_log.datetime</code>.
     */
    public void setDatetime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_gamedb.connection_log.datetime</code>.
     */
    public LocalDateTime getDatetime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>paradise_gamedb.connection_log.ckey</code>.
     */
    public void setCkey(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_gamedb.connection_log.ckey</code>.
     */
    public String getCkey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>paradise_gamedb.connection_log.ip</code>.
     */
    public void setIp(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_gamedb.connection_log.ip</code>.
     */
    public String getIp() {
        return (String) get(3);
    }

    /**
     * Setter for <code>paradise_gamedb.connection_log.computerid</code>.
     */
    public void setComputerid(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_gamedb.connection_log.computerid</code>.
     */
    public String getComputerid() {
        return (String) get(4);
    }

    /**
     * Setter for <code>paradise_gamedb.connection_log.server_id</code>.
     */
    public void setServerId(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_gamedb.connection_log.server_id</code>.
     */
    public String getServerId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>paradise_gamedb.connection_log.result</code>.
     */
    public void setResult(ConnectionLogResult value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_gamedb.connection_log.result</code>.
     */
    public ConnectionLogResult getResult() {
        return (ConnectionLogResult) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, LocalDateTime, String, String, String, String, ConnectionLogResult> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, LocalDateTime, String, String, String, String, ConnectionLogResult> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ConnectionLog.CONNECTION_LOG.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return ConnectionLog.CONNECTION_LOG.DATETIME;
    }

    @Override
    public Field<String> field3() {
        return ConnectionLog.CONNECTION_LOG.CKEY;
    }

    @Override
    public Field<String> field4() {
        return ConnectionLog.CONNECTION_LOG.IP;
    }

    @Override
    public Field<String> field5() {
        return ConnectionLog.CONNECTION_LOG.COMPUTERID;
    }

    @Override
    public Field<String> field6() {
        return ConnectionLog.CONNECTION_LOG.SERVER_ID;
    }

    @Override
    public Field<ConnectionLogResult> field7() {
        return ConnectionLog.CONNECTION_LOG.RESULT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getDatetime();
    }

    @Override
    public String component3() {
        return getCkey();
    }

    @Override
    public String component4() {
        return getIp();
    }

    @Override
    public String component5() {
        return getComputerid();
    }

    @Override
    public String component6() {
        return getServerId();
    }

    @Override
    public ConnectionLogResult component7() {
        return getResult();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getDatetime();
    }

    @Override
    public String value3() {
        return getCkey();
    }

    @Override
    public String value4() {
        return getIp();
    }

    @Override
    public String value5() {
        return getComputerid();
    }

    @Override
    public String value6() {
        return getServerId();
    }

    @Override
    public ConnectionLogResult value7() {
        return getResult();
    }

    @Override
    public ConnectionLogRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ConnectionLogRecord value2(LocalDateTime value) {
        setDatetime(value);
        return this;
    }

    @Override
    public ConnectionLogRecord value3(String value) {
        setCkey(value);
        return this;
    }

    @Override
    public ConnectionLogRecord value4(String value) {
        setIp(value);
        return this;
    }

    @Override
    public ConnectionLogRecord value5(String value) {
        setComputerid(value);
        return this;
    }

    @Override
    public ConnectionLogRecord value6(String value) {
        setServerId(value);
        return this;
    }

    @Override
    public ConnectionLogRecord value7(ConnectionLogResult value) {
        setResult(value);
        return this;
    }

    @Override
    public ConnectionLogRecord values(Integer value1, LocalDateTime value2, String value3, String value4, String value5, String value6, ConnectionLogResult value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConnectionLogRecord
     */
    public ConnectionLogRecord() {
        super(ConnectionLog.CONNECTION_LOG);
    }

    /**
     * Create a detached, initialised ConnectionLogRecord
     */
    public ConnectionLogRecord(Integer id, LocalDateTime datetime, String ckey, String ip, String computerid, String serverId, ConnectionLogResult result) {
        super(ConnectionLog.CONNECTION_LOG);

        setId(id);
        setDatetime(datetime);
        setCkey(ckey);
        setIp(ip);
        setComputerid(computerid);
        setServerId(serverId);
        setResult(result);
    }
}
