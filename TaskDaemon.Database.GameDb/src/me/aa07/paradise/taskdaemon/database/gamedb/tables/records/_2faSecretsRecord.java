/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.gamedb.tables.records;


import java.time.LocalDateTime;

import me.aa07.paradise.taskdaemon.database.gamedb.tables._2faSecrets;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class _2faSecretsRecord extends UpdatableRecordImpl<_2faSecretsRecord> implements Record4<String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_gamedb.2fa_secrets.ckey</code>.
     */
    public void setCkey(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_gamedb.2fa_secrets.ckey</code>.
     */
    public String getCkey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>paradise_gamedb.2fa_secrets.secret</code>.
     */
    public void setSecret(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_gamedb.2fa_secrets.secret</code>.
     */
    public String getSecret() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_gamedb.2fa_secrets.date_setup</code>.
     */
    public void setDateSetup(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_gamedb.2fa_secrets.date_setup</code>.
     */
    public LocalDateTime getDateSetup() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>paradise_gamedb.2fa_secrets.last_time</code>.
     */
    public void setLastTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_gamedb.2fa_secrets.last_time</code>.
     */
    public LocalDateTime getLastTime() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return _2faSecrets._2FA_SECRETS.CKEY;
    }

    @Override
    public Field<String> field2() {
        return _2faSecrets._2FA_SECRETS.SECRET;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return _2faSecrets._2FA_SECRETS.DATE_SETUP;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return _2faSecrets._2FA_SECRETS.LAST_TIME;
    }

    @Override
    public String component1() {
        return getCkey();
    }

    @Override
    public String component2() {
        return getSecret();
    }

    @Override
    public LocalDateTime component3() {
        return getDateSetup();
    }

    @Override
    public LocalDateTime component4() {
        return getLastTime();
    }

    @Override
    public String value1() {
        return getCkey();
    }

    @Override
    public String value2() {
        return getSecret();
    }

    @Override
    public LocalDateTime value3() {
        return getDateSetup();
    }

    @Override
    public LocalDateTime value4() {
        return getLastTime();
    }

    @Override
    public _2faSecretsRecord value1(String value) {
        setCkey(value);
        return this;
    }

    @Override
    public _2faSecretsRecord value2(String value) {
        setSecret(value);
        return this;
    }

    @Override
    public _2faSecretsRecord value3(LocalDateTime value) {
        setDateSetup(value);
        return this;
    }

    @Override
    public _2faSecretsRecord value4(LocalDateTime value) {
        setLastTime(value);
        return this;
    }

    @Override
    public _2faSecretsRecord values(String value1, String value2, LocalDateTime value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached _2faSecretsRecord
     */
    public _2faSecretsRecord() {
        super(_2faSecrets._2FA_SECRETS);
    }

    /**
     * Create a detached, initialised _2faSecretsRecord
     */
    public _2faSecretsRecord(String ckey, String secret, LocalDateTime dateSetup, LocalDateTime lastTime) {
        super(_2faSecrets._2FA_SECRETS);

        setCkey(ckey);
        setSecret(secret);
        setDateSetup(dateSetup);
        setLastTime(lastTime);
    }
}
