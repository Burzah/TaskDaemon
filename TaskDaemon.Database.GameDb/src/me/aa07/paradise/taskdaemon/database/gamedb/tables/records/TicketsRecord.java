/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.gamedb.tables.records;


import java.time.LocalDateTime;
import java.time.LocalTime;

import me.aa07.paradise.taskdaemon.database.gamedb.enums.TicketsEndRoundState;
import me.aa07.paradise.taskdaemon.database.gamedb.enums.TicketsTicketType;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.Tickets;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TicketsRecord extends UpdatableRecordImpl<TicketsRecord> implements Record12<Integer, Integer, TicketsTicketType, LocalDateTime, LocalTime, String, String, String, LocalDateTime, String, String, TicketsEndRoundState> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_gamedb.tickets.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_gamedb.tickets.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>paradise_gamedb.tickets.ticket_num</code>.
     */
    public void setTicketNum(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_gamedb.tickets.ticket_num</code>.
     */
    public Integer getTicketNum() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>paradise_gamedb.tickets.ticket_type</code>.
     */
    public void setTicketType(TicketsTicketType value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_gamedb.tickets.ticket_type</code>.
     */
    public TicketsTicketType getTicketType() {
        return (TicketsTicketType) get(2);
    }

    /**
     * Setter for <code>paradise_gamedb.tickets.real_filetime</code>.
     */
    public void setRealFiletime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_gamedb.tickets.real_filetime</code>.
     */
    public LocalDateTime getRealFiletime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>paradise_gamedb.tickets.relative_filetime</code>.
     */
    public void setRelativeFiletime(LocalTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_gamedb.tickets.relative_filetime</code>.
     */
    public LocalTime getRelativeFiletime() {
        return (LocalTime) get(4);
    }

    /**
     * Setter for <code>paradise_gamedb.tickets.ticket_creator</code>.
     */
    public void setTicketCreator(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_gamedb.tickets.ticket_creator</code>.
     */
    public String getTicketCreator() {
        return (String) get(5);
    }

    /**
     * Setter for <code>paradise_gamedb.tickets.ticket_topic</code>.
     */
    public void setTicketTopic(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_gamedb.tickets.ticket_topic</code>.
     */
    public String getTicketTopic() {
        return (String) get(6);
    }

    /**
     * Setter for <code>paradise_gamedb.tickets.ticket_taker</code>.
     */
    public void setTicketTaker(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>paradise_gamedb.tickets.ticket_taker</code>.
     */
    public String getTicketTaker() {
        return (String) get(7);
    }

    /**
     * Setter for <code>paradise_gamedb.tickets.ticket_take_time</code>.
     */
    public void setTicketTakeTime(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>paradise_gamedb.tickets.ticket_take_time</code>.
     */
    public LocalDateTime getTicketTakeTime() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>paradise_gamedb.tickets.all_responses</code>.
     */
    public void setAllResponses(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>paradise_gamedb.tickets.all_responses</code>.
     */
    public String getAllResponses() {
        return (String) get(9);
    }

    /**
     * Setter for <code>paradise_gamedb.tickets.awho</code>.
     */
    public void setAwho(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>paradise_gamedb.tickets.awho</code>.
     */
    public String getAwho() {
        return (String) get(10);
    }

    /**
     * Setter for <code>paradise_gamedb.tickets.end_round_state</code>.
     */
    public void setEndRoundState(TicketsEndRoundState value) {
        set(11, value);
    }

    /**
     * Getter for <code>paradise_gamedb.tickets.end_round_state</code>.
     */
    public TicketsEndRoundState getEndRoundState() {
        return (TicketsEndRoundState) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, Integer, TicketsTicketType, LocalDateTime, LocalTime, String, String, String, LocalDateTime, String, String, TicketsEndRoundState> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Integer, Integer, TicketsTicketType, LocalDateTime, LocalTime, String, String, String, LocalDateTime, String, String, TicketsEndRoundState> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Tickets.TICKETS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Tickets.TICKETS.TICKET_NUM;
    }

    @Override
    public Field<TicketsTicketType> field3() {
        return Tickets.TICKETS.TICKET_TYPE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Tickets.TICKETS.REAL_FILETIME;
    }

    @Override
    public Field<LocalTime> field5() {
        return Tickets.TICKETS.RELATIVE_FILETIME;
    }

    @Override
    public Field<String> field6() {
        return Tickets.TICKETS.TICKET_CREATOR;
    }

    @Override
    public Field<String> field7() {
        return Tickets.TICKETS.TICKET_TOPIC;
    }

    @Override
    public Field<String> field8() {
        return Tickets.TICKETS.TICKET_TAKER;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return Tickets.TICKETS.TICKET_TAKE_TIME;
    }

    @Override
    public Field<String> field10() {
        return Tickets.TICKETS.ALL_RESPONSES;
    }

    @Override
    public Field<String> field11() {
        return Tickets.TICKETS.AWHO;
    }

    @Override
    public Field<TicketsEndRoundState> field12() {
        return Tickets.TICKETS.END_ROUND_STATE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getTicketNum();
    }

    @Override
    public TicketsTicketType component3() {
        return getTicketType();
    }

    @Override
    public LocalDateTime component4() {
        return getRealFiletime();
    }

    @Override
    public LocalTime component5() {
        return getRelativeFiletime();
    }

    @Override
    public String component6() {
        return getTicketCreator();
    }

    @Override
    public String component7() {
        return getTicketTopic();
    }

    @Override
    public String component8() {
        return getTicketTaker();
    }

    @Override
    public LocalDateTime component9() {
        return getTicketTakeTime();
    }

    @Override
    public String component10() {
        return getAllResponses();
    }

    @Override
    public String component11() {
        return getAwho();
    }

    @Override
    public TicketsEndRoundState component12() {
        return getEndRoundState();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getTicketNum();
    }

    @Override
    public TicketsTicketType value3() {
        return getTicketType();
    }

    @Override
    public LocalDateTime value4() {
        return getRealFiletime();
    }

    @Override
    public LocalTime value5() {
        return getRelativeFiletime();
    }

    @Override
    public String value6() {
        return getTicketCreator();
    }

    @Override
    public String value7() {
        return getTicketTopic();
    }

    @Override
    public String value8() {
        return getTicketTaker();
    }

    @Override
    public LocalDateTime value9() {
        return getTicketTakeTime();
    }

    @Override
    public String value10() {
        return getAllResponses();
    }

    @Override
    public String value11() {
        return getAwho();
    }

    @Override
    public TicketsEndRoundState value12() {
        return getEndRoundState();
    }

    @Override
    public TicketsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TicketsRecord value2(Integer value) {
        setTicketNum(value);
        return this;
    }

    @Override
    public TicketsRecord value3(TicketsTicketType value) {
        setTicketType(value);
        return this;
    }

    @Override
    public TicketsRecord value4(LocalDateTime value) {
        setRealFiletime(value);
        return this;
    }

    @Override
    public TicketsRecord value5(LocalTime value) {
        setRelativeFiletime(value);
        return this;
    }

    @Override
    public TicketsRecord value6(String value) {
        setTicketCreator(value);
        return this;
    }

    @Override
    public TicketsRecord value7(String value) {
        setTicketTopic(value);
        return this;
    }

    @Override
    public TicketsRecord value8(String value) {
        setTicketTaker(value);
        return this;
    }

    @Override
    public TicketsRecord value9(LocalDateTime value) {
        setTicketTakeTime(value);
        return this;
    }

    @Override
    public TicketsRecord value10(String value) {
        setAllResponses(value);
        return this;
    }

    @Override
    public TicketsRecord value11(String value) {
        setAwho(value);
        return this;
    }

    @Override
    public TicketsRecord value12(TicketsEndRoundState value) {
        setEndRoundState(value);
        return this;
    }

    @Override
    public TicketsRecord values(Integer value1, Integer value2, TicketsTicketType value3, LocalDateTime value4, LocalTime value5, String value6, String value7, String value8, LocalDateTime value9, String value10, String value11, TicketsEndRoundState value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TicketsRecord
     */
    public TicketsRecord() {
        super(Tickets.TICKETS);
    }

    /**
     * Create a detached, initialised TicketsRecord
     */
    public TicketsRecord(Integer id, Integer ticketNum, TicketsTicketType ticketType, LocalDateTime realFiletime, LocalTime relativeFiletime, String ticketCreator, String ticketTopic, String ticketTaker, LocalDateTime ticketTakeTime, String allResponses, String awho, TicketsEndRoundState endRoundState) {
        super(Tickets.TICKETS);

        setId(id);
        setTicketNum(ticketNum);
        setTicketType(ticketType);
        setRealFiletime(realFiletime);
        setRelativeFiletime(relativeFiletime);
        setTicketCreator(ticketCreator);
        setTicketTopic(ticketTopic);
        setTicketTaker(ticketTaker);
        setTicketTakeTime(ticketTakeTime);
        setAllResponses(allResponses);
        setAwho(awho);
        setEndRoundState(endRoundState);
    }
}
