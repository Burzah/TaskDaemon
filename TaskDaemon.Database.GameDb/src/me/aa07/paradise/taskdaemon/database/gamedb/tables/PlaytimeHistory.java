/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.gamedb.tables;


import java.time.LocalDate;

import me.aa07.paradise.taskdaemon.database.gamedb.Keys;
import me.aa07.paradise.taskdaemon.database.gamedb.ParadiseGamedb;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.records.PlaytimeHistoryRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlaytimeHistory extends TableImpl<PlaytimeHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_gamedb.playtime_history</code>
     */
    public static final PlaytimeHistory PLAYTIME_HISTORY = new PlaytimeHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PlaytimeHistoryRecord> getRecordType() {
        return PlaytimeHistoryRecord.class;
    }

    /**
     * The column <code>paradise_gamedb.playtime_history.ckey</code>.
     */
    public final TableField<PlaytimeHistoryRecord, String> CKEY = createField(DSL.name("ckey"), SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>paradise_gamedb.playtime_history.date</code>.
     */
    public final TableField<PlaytimeHistoryRecord, LocalDate> DATE = createField(DSL.name("date"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>paradise_gamedb.playtime_history.time_living</code>.
     */
    public final TableField<PlaytimeHistoryRecord, Short> TIME_LIVING = createField(DSL.name("time_living"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>paradise_gamedb.playtime_history.time_crew</code>.
     */
    public final TableField<PlaytimeHistoryRecord, Short> TIME_CREW = createField(DSL.name("time_crew"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>paradise_gamedb.playtime_history.time_special</code>.
     */
    public final TableField<PlaytimeHistoryRecord, Short> TIME_SPECIAL = createField(DSL.name("time_special"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>paradise_gamedb.playtime_history.time_ghost</code>.
     */
    public final TableField<PlaytimeHistoryRecord, Short> TIME_GHOST = createField(DSL.name("time_ghost"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>paradise_gamedb.playtime_history.time_command</code>.
     */
    public final TableField<PlaytimeHistoryRecord, Short> TIME_COMMAND = createField(DSL.name("time_command"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column
     * <code>paradise_gamedb.playtime_history.time_engineering</code>.
     */
    public final TableField<PlaytimeHistoryRecord, Short> TIME_ENGINEERING = createField(DSL.name("time_engineering"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>paradise_gamedb.playtime_history.time_medical</code>.
     */
    public final TableField<PlaytimeHistoryRecord, Short> TIME_MEDICAL = createField(DSL.name("time_medical"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>paradise_gamedb.playtime_history.time_science</code>.
     */
    public final TableField<PlaytimeHistoryRecord, Short> TIME_SCIENCE = createField(DSL.name("time_science"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>paradise_gamedb.playtime_history.time_supply</code>.
     */
    public final TableField<PlaytimeHistoryRecord, Short> TIME_SUPPLY = createField(DSL.name("time_supply"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>paradise_gamedb.playtime_history.time_security</code>.
     */
    public final TableField<PlaytimeHistoryRecord, Short> TIME_SECURITY = createField(DSL.name("time_security"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>paradise_gamedb.playtime_history.time_silicon</code>.
     */
    public final TableField<PlaytimeHistoryRecord, Short> TIME_SILICON = createField(DSL.name("time_silicon"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>paradise_gamedb.playtime_history.time_service</code>.
     */
    public final TableField<PlaytimeHistoryRecord, Short> TIME_SERVICE = createField(DSL.name("time_service"), SQLDataType.SMALLINT.nullable(false), this, "");

    private PlaytimeHistory(Name alias, Table<PlaytimeHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private PlaytimeHistory(Name alias, Table<PlaytimeHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_gamedb.playtime_history</code> table
     * reference
     */
    public PlaytimeHistory(String alias) {
        this(DSL.name(alias), PLAYTIME_HISTORY);
    }

    /**
     * Create an aliased <code>paradise_gamedb.playtime_history</code> table
     * reference
     */
    public PlaytimeHistory(Name alias) {
        this(alias, PLAYTIME_HISTORY);
    }

    /**
     * Create a <code>paradise_gamedb.playtime_history</code> table reference
     */
    public PlaytimeHistory() {
        this(DSL.name("playtime_history"), null);
    }

    public <O extends Record> PlaytimeHistory(Table<O> child, ForeignKey<O, PlaytimeHistoryRecord> key) {
        super(child, key, PLAYTIME_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseGamedb.PARADISE_GAMEDB;
    }

    @Override
    public UniqueKey<PlaytimeHistoryRecord> getPrimaryKey() {
        return Keys.KEY_PLAYTIME_HISTORY_PRIMARY;
    }

    @Override
    public PlaytimeHistory as(String alias) {
        return new PlaytimeHistory(DSL.name(alias), this);
    }

    @Override
    public PlaytimeHistory as(Name alias) {
        return new PlaytimeHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PlaytimeHistory rename(String name) {
        return new PlaytimeHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PlaytimeHistory rename(Name name) {
        return new PlaytimeHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<String, LocalDate, Short, Short, Short, Short, Short, Short, Short, Short, Short, Short, Short, Short> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
