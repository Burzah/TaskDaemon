/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.gamedb.tables.records;


import java.time.LocalDate;

import me.aa07.paradise.taskdaemon.database.gamedb.tables.PlaytimeHistory;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlaytimeHistoryRecord extends UpdatableRecordImpl<PlaytimeHistoryRecord> implements Record4<String, LocalDate, Short, Short> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_gamedb.playtime_history.ckey</code>.
     */
    public void setCkey(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_gamedb.playtime_history.ckey</code>.
     */
    public String getCkey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>paradise_gamedb.playtime_history.date</code>.
     */
    public void setDate(LocalDate value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_gamedb.playtime_history.date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>paradise_gamedb.playtime_history.time_living</code>.
     */
    public void setTimeLiving(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_gamedb.playtime_history.time_living</code>.
     */
    public Short getTimeLiving() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>paradise_gamedb.playtime_history.time_ghost</code>.
     */
    public void setTimeGhost(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_gamedb.playtime_history.time_ghost</code>.
     */
    public Short getTimeGhost() {
        return (Short) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, LocalDate> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, LocalDate, Short, Short> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, LocalDate, Short, Short> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return PlaytimeHistory.PLAYTIME_HISTORY.CKEY;
    }

    @Override
    public Field<LocalDate> field2() {
        return PlaytimeHistory.PLAYTIME_HISTORY.DATE;
    }

    @Override
    public Field<Short> field3() {
        return PlaytimeHistory.PLAYTIME_HISTORY.TIME_LIVING;
    }

    @Override
    public Field<Short> field4() {
        return PlaytimeHistory.PLAYTIME_HISTORY.TIME_GHOST;
    }

    @Override
    public String component1() {
        return getCkey();
    }

    @Override
    public LocalDate component2() {
        return getDate();
    }

    @Override
    public Short component3() {
        return getTimeLiving();
    }

    @Override
    public Short component4() {
        return getTimeGhost();
    }

    @Override
    public String value1() {
        return getCkey();
    }

    @Override
    public LocalDate value2() {
        return getDate();
    }

    @Override
    public Short value3() {
        return getTimeLiving();
    }

    @Override
    public Short value4() {
        return getTimeGhost();
    }

    @Override
    public PlaytimeHistoryRecord value1(String value) {
        setCkey(value);
        return this;
    }

    @Override
    public PlaytimeHistoryRecord value2(LocalDate value) {
        setDate(value);
        return this;
    }

    @Override
    public PlaytimeHistoryRecord value3(Short value) {
        setTimeLiving(value);
        return this;
    }

    @Override
    public PlaytimeHistoryRecord value4(Short value) {
        setTimeGhost(value);
        return this;
    }

    @Override
    public PlaytimeHistoryRecord values(String value1, LocalDate value2, Short value3, Short value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlaytimeHistoryRecord
     */
    public PlaytimeHistoryRecord() {
        super(PlaytimeHistory.PLAYTIME_HISTORY);
    }

    /**
     * Create a detached, initialised PlaytimeHistoryRecord
     */
    public PlaytimeHistoryRecord(String ckey, LocalDate date, Short timeLiving, Short timeGhost) {
        super(PlaytimeHistory.PLAYTIME_HISTORY);

        setCkey(ckey);
        setDate(date);
        setTimeLiving(timeLiving);
        setTimeGhost(timeGhost);
    }
}
