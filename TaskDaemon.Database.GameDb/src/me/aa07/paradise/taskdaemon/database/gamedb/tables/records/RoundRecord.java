/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.gamedb.tables.records;


import java.time.LocalDateTime;

import me.aa07.paradise.taskdaemon.database.gamedb.tables.Round;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoundRecord extends UpdatableRecordImpl<RoundRecord> implements Record15<Integer, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, UInteger, UShort, String, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_gamedb.round.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_gamedb.round.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>paradise_gamedb.round.initialize_datetime</code>.
     */
    public void setInitializeDatetime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_gamedb.round.initialize_datetime</code>.
     */
    public LocalDateTime getInitializeDatetime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>paradise_gamedb.round.start_datetime</code>.
     */
    public void setStartDatetime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_gamedb.round.start_datetime</code>.
     */
    public LocalDateTime getStartDatetime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>paradise_gamedb.round.shutdown_datetime</code>.
     */
    public void setShutdownDatetime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_gamedb.round.shutdown_datetime</code>.
     */
    public LocalDateTime getShutdownDatetime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>paradise_gamedb.round.end_datetime</code>.
     */
    public void setEndDatetime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_gamedb.round.end_datetime</code>.
     */
    public LocalDateTime getEndDatetime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>paradise_gamedb.round.server_ip</code>.
     */
    public void setServerIp(UInteger value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_gamedb.round.server_ip</code>.
     */
    public UInteger getServerIp() {
        return (UInteger) get(5);
    }

    /**
     * Setter for <code>paradise_gamedb.round.server_port</code>.
     */
    public void setServerPort(UShort value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_gamedb.round.server_port</code>.
     */
    public UShort getServerPort() {
        return (UShort) get(6);
    }

    /**
     * Setter for <code>paradise_gamedb.round.commit_hash</code>.
     */
    public void setCommitHash(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>paradise_gamedb.round.commit_hash</code>.
     */
    public String getCommitHash() {
        return (String) get(7);
    }

    /**
     * Setter for <code>paradise_gamedb.round.game_mode</code>.
     */
    public void setGameMode(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>paradise_gamedb.round.game_mode</code>.
     */
    public String getGameMode() {
        return (String) get(8);
    }

    /**
     * Setter for <code>paradise_gamedb.round.game_mode_result</code>.
     */
    public void setGameModeResult(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>paradise_gamedb.round.game_mode_result</code>.
     */
    public String getGameModeResult() {
        return (String) get(9);
    }

    /**
     * Setter for <code>paradise_gamedb.round.end_state</code>.
     */
    public void setEndState(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>paradise_gamedb.round.end_state</code>.
     */
    public String getEndState() {
        return (String) get(10);
    }

    /**
     * Setter for <code>paradise_gamedb.round.shuttle_name</code>.
     */
    public void setShuttleName(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>paradise_gamedb.round.shuttle_name</code>.
     */
    public String getShuttleName() {
        return (String) get(11);
    }

    /**
     * Setter for <code>paradise_gamedb.round.map_name</code>.
     */
    public void setMapName(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>paradise_gamedb.round.map_name</code>.
     */
    public String getMapName() {
        return (String) get(12);
    }

    /**
     * Setter for <code>paradise_gamedb.round.station_name</code>.
     */
    public void setStationName(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>paradise_gamedb.round.station_name</code>.
     */
    public String getStationName() {
        return (String) get(13);
    }

    /**
     * Setter for <code>paradise_gamedb.round.server_id</code>.
     */
    public void setServerId(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>paradise_gamedb.round.server_id</code>.
     */
    public String getServerId() {
        return (String) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row15<Integer, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, UInteger, UShort, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    @Override
    public Row15<Integer, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, UInteger, UShort, String, String, String, String, String, String, String, String> valuesRow() {
        return (Row15) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Round.ROUND.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Round.ROUND.INITIALIZE_DATETIME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Round.ROUND.START_DATETIME;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Round.ROUND.SHUTDOWN_DATETIME;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Round.ROUND.END_DATETIME;
    }

    @Override
    public Field<UInteger> field6() {
        return Round.ROUND.SERVER_IP;
    }

    @Override
    public Field<UShort> field7() {
        return Round.ROUND.SERVER_PORT;
    }

    @Override
    public Field<String> field8() {
        return Round.ROUND.COMMIT_HASH;
    }

    @Override
    public Field<String> field9() {
        return Round.ROUND.GAME_MODE;
    }

    @Override
    public Field<String> field10() {
        return Round.ROUND.GAME_MODE_RESULT;
    }

    @Override
    public Field<String> field11() {
        return Round.ROUND.END_STATE;
    }

    @Override
    public Field<String> field12() {
        return Round.ROUND.SHUTTLE_NAME;
    }

    @Override
    public Field<String> field13() {
        return Round.ROUND.MAP_NAME;
    }

    @Override
    public Field<String> field14() {
        return Round.ROUND.STATION_NAME;
    }

    @Override
    public Field<String> field15() {
        return Round.ROUND.SERVER_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getInitializeDatetime();
    }

    @Override
    public LocalDateTime component3() {
        return getStartDatetime();
    }

    @Override
    public LocalDateTime component4() {
        return getShutdownDatetime();
    }

    @Override
    public LocalDateTime component5() {
        return getEndDatetime();
    }

    @Override
    public UInteger component6() {
        return getServerIp();
    }

    @Override
    public UShort component7() {
        return getServerPort();
    }

    @Override
    public String component8() {
        return getCommitHash();
    }

    @Override
    public String component9() {
        return getGameMode();
    }

    @Override
    public String component10() {
        return getGameModeResult();
    }

    @Override
    public String component11() {
        return getEndState();
    }

    @Override
    public String component12() {
        return getShuttleName();
    }

    @Override
    public String component13() {
        return getMapName();
    }

    @Override
    public String component14() {
        return getStationName();
    }

    @Override
    public String component15() {
        return getServerId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getInitializeDatetime();
    }

    @Override
    public LocalDateTime value3() {
        return getStartDatetime();
    }

    @Override
    public LocalDateTime value4() {
        return getShutdownDatetime();
    }

    @Override
    public LocalDateTime value5() {
        return getEndDatetime();
    }

    @Override
    public UInteger value6() {
        return getServerIp();
    }

    @Override
    public UShort value7() {
        return getServerPort();
    }

    @Override
    public String value8() {
        return getCommitHash();
    }

    @Override
    public String value9() {
        return getGameMode();
    }

    @Override
    public String value10() {
        return getGameModeResult();
    }

    @Override
    public String value11() {
        return getEndState();
    }

    @Override
    public String value12() {
        return getShuttleName();
    }

    @Override
    public String value13() {
        return getMapName();
    }

    @Override
    public String value14() {
        return getStationName();
    }

    @Override
    public String value15() {
        return getServerId();
    }

    @Override
    public RoundRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public RoundRecord value2(LocalDateTime value) {
        setInitializeDatetime(value);
        return this;
    }

    @Override
    public RoundRecord value3(LocalDateTime value) {
        setStartDatetime(value);
        return this;
    }

    @Override
    public RoundRecord value4(LocalDateTime value) {
        setShutdownDatetime(value);
        return this;
    }

    @Override
    public RoundRecord value5(LocalDateTime value) {
        setEndDatetime(value);
        return this;
    }

    @Override
    public RoundRecord value6(UInteger value) {
        setServerIp(value);
        return this;
    }

    @Override
    public RoundRecord value7(UShort value) {
        setServerPort(value);
        return this;
    }

    @Override
    public RoundRecord value8(String value) {
        setCommitHash(value);
        return this;
    }

    @Override
    public RoundRecord value9(String value) {
        setGameMode(value);
        return this;
    }

    @Override
    public RoundRecord value10(String value) {
        setGameModeResult(value);
        return this;
    }

    @Override
    public RoundRecord value11(String value) {
        setEndState(value);
        return this;
    }

    @Override
    public RoundRecord value12(String value) {
        setShuttleName(value);
        return this;
    }

    @Override
    public RoundRecord value13(String value) {
        setMapName(value);
        return this;
    }

    @Override
    public RoundRecord value14(String value) {
        setStationName(value);
        return this;
    }

    @Override
    public RoundRecord value15(String value) {
        setServerId(value);
        return this;
    }

    @Override
    public RoundRecord values(Integer value1, LocalDateTime value2, LocalDateTime value3, LocalDateTime value4, LocalDateTime value5, UInteger value6, UShort value7, String value8, String value9, String value10, String value11, String value12, String value13, String value14, String value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoundRecord
     */
    public RoundRecord() {
        super(Round.ROUND);
    }

    /**
     * Create a detached, initialised RoundRecord
     */
    public RoundRecord(Integer id, LocalDateTime initializeDatetime, LocalDateTime startDatetime, LocalDateTime shutdownDatetime, LocalDateTime endDatetime, UInteger serverIp, UShort serverPort, String commitHash, String gameMode, String gameModeResult, String endState, String shuttleName, String mapName, String stationName, String serverId) {
        super(Round.ROUND);

        setId(id);
        setInitializeDatetime(initializeDatetime);
        setStartDatetime(startDatetime);
        setShutdownDatetime(shutdownDatetime);
        setEndDatetime(endDatetime);
        setServerIp(serverIp);
        setServerPort(serverPort);
        setCommitHash(commitHash);
        setGameMode(gameMode);
        setGameModeResult(gameModeResult);
        setEndState(endState);
        setShuttleName(shuttleName);
        setMapName(mapName);
        setStationName(stationName);
        setServerId(serverId);
    }
}
