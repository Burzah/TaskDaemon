/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.gamedb.tables;


import java.time.LocalDateTime;

import me.aa07.paradise.taskdaemon.database.gamedb.Keys;
import me.aa07.paradise.taskdaemon.database.gamedb.ParadiseGamedb;
import me.aa07.paradise.taskdaemon.database.gamedb.tables.records._2faSecretsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class _2faSecrets extends TableImpl<_2faSecretsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_gamedb.2fa_secrets</code>
     */
    public static final _2faSecrets _2FA_SECRETS = new _2faSecrets();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<_2faSecretsRecord> getRecordType() {
        return _2faSecretsRecord.class;
    }

    /**
     * The column <code>paradise_gamedb.2fa_secrets.ckey</code>.
     */
    public final TableField<_2faSecretsRecord, String> CKEY = createField(DSL.name("ckey"), SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>paradise_gamedb.2fa_secrets.secret</code>.
     */
    public final TableField<_2faSecretsRecord, String> SECRET = createField(DSL.name("secret"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>paradise_gamedb.2fa_secrets.date_setup</code>.
     */
    public final TableField<_2faSecretsRecord, LocalDateTime> DATE_SETUP = createField(DSL.name("date_setup"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("current_timestamp()", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>paradise_gamedb.2fa_secrets.last_time</code>.
     */
    public final TableField<_2faSecretsRecord, LocalDateTime> LAST_TIME = createField(DSL.name("last_time"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.inline("NULL", SQLDataType.LOCALDATETIME)), this, "");

    private _2faSecrets(Name alias, Table<_2faSecretsRecord> aliased) {
        this(alias, aliased, null);
    }

    private _2faSecrets(Name alias, Table<_2faSecretsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_gamedb.2fa_secrets</code> table
     * reference
     */
    public _2faSecrets(String alias) {
        this(DSL.name(alias), _2FA_SECRETS);
    }

    /**
     * Create an aliased <code>paradise_gamedb.2fa_secrets</code> table
     * reference
     */
    public _2faSecrets(Name alias) {
        this(alias, _2FA_SECRETS);
    }

    /**
     * Create a <code>paradise_gamedb.2fa_secrets</code> table reference
     */
    public _2faSecrets() {
        this(DSL.name("2fa_secrets"), null);
    }

    public <O extends Record> _2faSecrets(Table<O> child, ForeignKey<O, _2faSecretsRecord> key) {
        super(child, key, _2FA_SECRETS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseGamedb.PARADISE_GAMEDB;
    }

    @Override
    public UniqueKey<_2faSecretsRecord> getPrimaryKey() {
        return Keys.KEY_2FA_SECRETS_PRIMARY;
    }

    @Override
    public _2faSecrets as(String alias) {
        return new _2faSecrets(DSL.name(alias), this);
    }

    @Override
    public _2faSecrets as(Name alias) {
        return new _2faSecrets(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public _2faSecrets rename(String name) {
        return new _2faSecrets(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public _2faSecrets rename(Name name) {
        return new _2faSecrets(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
