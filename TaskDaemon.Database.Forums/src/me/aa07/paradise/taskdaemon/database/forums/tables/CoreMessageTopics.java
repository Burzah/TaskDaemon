/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMessageTopicsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreMessageTopics extends TableImpl<CoreMessageTopicsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_message_topics</code>
     */
    public static final CoreMessageTopics CORE_MESSAGE_TOPICS = new CoreMessageTopics();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreMessageTopicsRecord> getRecordType() {
        return CoreMessageTopicsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_message_topics.mt_id</code>.
     */
    public final TableField<CoreMessageTopicsRecord, Integer> MT_ID = createField(DSL.name("mt_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_message_topics.mt_date</code>.
     */
    public final TableField<CoreMessageTopicsRecord, Integer> MT_DATE = createField(DSL.name("mt_date"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_message_topics.mt_title</code>.
     */
    public final TableField<CoreMessageTopicsRecord, String> MT_TITLE = createField(DSL.name("mt_title"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_message_topics.mt_hasattach</code>.
     */
    public final TableField<CoreMessageTopicsRecord, Short> MT_HASATTACH = createField(DSL.name("mt_hasattach"), SQLDataType.SMALLINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.SMALLINT)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_message_topics.mt_starter_id</code>.
     */
    public final TableField<CoreMessageTopicsRecord, Integer> MT_STARTER_ID = createField(DSL.name("mt_starter_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_message_topics.mt_start_time</code>.
     */
    public final TableField<CoreMessageTopicsRecord, Integer> MT_START_TIME = createField(DSL.name("mt_start_time"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_message_topics.mt_last_post_time</code>.
     */
    public final TableField<CoreMessageTopicsRecord, Integer> MT_LAST_POST_TIME = createField(DSL.name("mt_last_post_time"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_message_topics.mt_to_count</code>.
     */
    public final TableField<CoreMessageTopicsRecord, Integer> MT_TO_COUNT = createField(DSL.name("mt_to_count"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_message_topics.mt_to_member_id</code>.
     */
    public final TableField<CoreMessageTopicsRecord, ULong> MT_TO_MEMBER_ID = createField(DSL.name("mt_to_member_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_message_topics.mt_replies</code>.
     */
    public final TableField<CoreMessageTopicsRecord, Integer> MT_REPLIES = createField(DSL.name("mt_replies"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_message_topics.mt_first_msg_id</code>.
     */
    public final TableField<CoreMessageTopicsRecord, Integer> MT_FIRST_MSG_ID = createField(DSL.name("mt_first_msg_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_message_topics.mt_is_draft</code>.
     */
    public final TableField<CoreMessageTopicsRecord, Integer> MT_IS_DRAFT = createField(DSL.name("mt_is_draft"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_message_topics.mt_is_deleted</code>.
     */
    public final TableField<CoreMessageTopicsRecord, Integer> MT_IS_DELETED = createField(DSL.name("mt_is_deleted"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_message_topics.mt_is_system</code>.
     */
    public final TableField<CoreMessageTopicsRecord, Integer> MT_IS_SYSTEM = createField(DSL.name("mt_is_system"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_message_topics.mt_alert</code>.
     */
    public final TableField<CoreMessageTopicsRecord, ULong> MT_ALERT = createField(DSL.name("mt_alert"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.BIGINTUNSIGNED)), this, "");

    private CoreMessageTopics(Name alias, Table<CoreMessageTopicsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreMessageTopics(Name alias, Table<CoreMessageTopicsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_message_topics</code> table
     * reference
     */
    public CoreMessageTopics(String alias) {
        this(DSL.name(alias), CORE_MESSAGE_TOPICS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_message_topics</code> table
     * reference
     */
    public CoreMessageTopics(Name alias) {
        this(alias, CORE_MESSAGE_TOPICS);
    }

    /**
     * Create a <code>paradise_forums.core_message_topics</code> table reference
     */
    public CoreMessageTopics() {
        this(DSL.name("core_message_topics"), null);
    }

    public <O extends Record> CoreMessageTopics(Table<O> child, ForeignKey<O, CoreMessageTopicsRecord> key) {
        super(child, key, CORE_MESSAGE_TOPICS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_MESSAGE_TOPICS_MT_ALERT, Indexes.CORE_MESSAGE_TOPICS_MT_DATE, Indexes.CORE_MESSAGE_TOPICS_MT_STARTER_ID, Indexes.CORE_MESSAGE_TOPICS_MT_TITLE);
    }

    @Override
    public Identity<CoreMessageTopicsRecord, Integer> getIdentity() {
        return (Identity<CoreMessageTopicsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreMessageTopicsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_MESSAGE_TOPICS_PRIMARY;
    }

    @Override
    public CoreMessageTopics as(String alias) {
        return new CoreMessageTopics(DSL.name(alias), this);
    }

    @Override
    public CoreMessageTopics as(Name alias) {
        return new CoreMessageTopics(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMessageTopics rename(String name) {
        return new CoreMessageTopics(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMessageTopics rename(Name name) {
        return new CoreMessageTopics(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<Integer, Integer, String, Short, Integer, Integer, Integer, Integer, ULong, Integer, Integer, Integer, Integer, Integer, ULong> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
