/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAdminPermissionRows;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreAdminPermissionRowsRecord extends UpdatableRecordImpl<CoreAdminPermissionRowsRecord> implements Record4<Long, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>paradise_forums.core_admin_permission_rows.row_id</code>.
     */
    public void setRowId(Long value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_admin_permission_rows.row_id</code>.
     */
    public Long getRowId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_admin_permission_rows.row_id_type</code>.
     */
    public void setRowIdType(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_admin_permission_rows.row_id_type</code>.
     */
    public String getRowIdType() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_admin_permission_rows.row_perm_cache</code>.
     */
    public void setRowPermCache(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_admin_permission_rows.row_perm_cache</code>.
     */
    public String getRowPermCache() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_admin_permission_rows.row_updated</code>.
     */
    public void setRowUpdated(Integer value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_admin_permission_rows.row_updated</code>.
     */
    public Integer getRowUpdated() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CoreAdminPermissionRows.CORE_ADMIN_PERMISSION_ROWS.ROW_ID;
    }

    @Override
    public Field<String> field2() {
        return CoreAdminPermissionRows.CORE_ADMIN_PERMISSION_ROWS.ROW_ID_TYPE;
    }

    @Override
    public Field<String> field3() {
        return CoreAdminPermissionRows.CORE_ADMIN_PERMISSION_ROWS.ROW_PERM_CACHE;
    }

    @Override
    public Field<Integer> field4() {
        return CoreAdminPermissionRows.CORE_ADMIN_PERMISSION_ROWS.ROW_UPDATED;
    }

    @Override
    public Long component1() {
        return getRowId();
    }

    @Override
    public String component2() {
        return getRowIdType();
    }

    @Override
    public String component3() {
        return getRowPermCache();
    }

    @Override
    public Integer component4() {
        return getRowUpdated();
    }

    @Override
    public Long value1() {
        return getRowId();
    }

    @Override
    public String value2() {
        return getRowIdType();
    }

    @Override
    public String value3() {
        return getRowPermCache();
    }

    @Override
    public Integer value4() {
        return getRowUpdated();
    }

    @Override
    public CoreAdminPermissionRowsRecord value1(Long value) {
        setRowId(value);
        return this;
    }

    @Override
    public CoreAdminPermissionRowsRecord value2(String value) {
        setRowIdType(value);
        return this;
    }

    @Override
    public CoreAdminPermissionRowsRecord value3(String value) {
        setRowPermCache(value);
        return this;
    }

    @Override
    public CoreAdminPermissionRowsRecord value4(Integer value) {
        setRowUpdated(value);
        return this;
    }

    @Override
    public CoreAdminPermissionRowsRecord values(Long value1, String value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreAdminPermissionRowsRecord
     */
    public CoreAdminPermissionRowsRecord() {
        super(CoreAdminPermissionRows.CORE_ADMIN_PERMISSION_ROWS);
    }

    /**
     * Create a detached, initialised CoreAdminPermissionRowsRecord
     */
    public CoreAdminPermissionRowsRecord(Long rowId, String rowIdType, String rowPermCache, Integer rowUpdated) {
        super(CoreAdminPermissionRows.CORE_ADMIN_PERMISSION_ROWS);

        setRowId(rowId);
        setRowIdType(rowIdType);
        setRowPermCache(rowPermCache);
        setRowUpdated(rowUpdated);
    }
}
