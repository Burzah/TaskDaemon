/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreEmoticons;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreEmoticonsRecord extends UpdatableRecordImpl<CoreEmoticonsRecord> implements Record10<Short, String, String, Short, String, Integer, UInteger, String, Short, Short> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_emoticons.id</code>.
     */
    public void setId(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_emoticons.id</code>.
     */
    public Short getId() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_emoticons.typed</code>.
     */
    public void setTyped(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_emoticons.typed</code>.
     */
    public String getTyped() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_emoticons.image</code>.
     */
    public void setImage(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_emoticons.image</code>.
     */
    public String getImage() {
        return (String) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_emoticons.clickable</code>.
     */
    public void setClickable(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_emoticons.clickable</code>.
     */
    public Short getClickable() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_emoticons.emo_set</code>.
     */
    public void setEmoSet(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_emoticons.emo_set</code>.
     */
    public String getEmoSet() {
        return (String) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_emoticons.emo_position</code>.
     */
    public void setEmoPosition(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_emoticons.emo_position</code>.
     */
    public Integer getEmoPosition() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>paradise_forums.core_emoticons.emo_set_position</code>.
     */
    public void setEmoSetPosition(UInteger value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.core_emoticons.emo_set_position</code>.
     */
    public UInteger getEmoSetPosition() {
        return (UInteger) get(6);
    }

    /**
     * Setter for <code>paradise_forums.core_emoticons.image_2x</code>.
     */
    public void setImage_2x(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>paradise_forums.core_emoticons.image_2x</code>.
     */
    public String getImage_2x() {
        return (String) get(7);
    }

    /**
     * Setter for <code>paradise_forums.core_emoticons.width</code>.
     */
    public void setWidth(Short value) {
        set(8, value);
    }

    /**
     * Getter for <code>paradise_forums.core_emoticons.width</code>.
     */
    public Short getWidth() {
        return (Short) get(8);
    }

    /**
     * Setter for <code>paradise_forums.core_emoticons.height</code>.
     */
    public void setHeight(Short value) {
        set(9, value);
    }

    /**
     * Getter for <code>paradise_forums.core_emoticons.height</code>.
     */
    public Short getHeight() {
        return (Short) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Short> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Short, String, String, Short, String, Integer, UInteger, String, Short, Short> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Short, String, String, Short, String, Integer, UInteger, String, Short, Short> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Short> field1() {
        return CoreEmoticons.CORE_EMOTICONS.ID;
    }

    @Override
    public Field<String> field2() {
        return CoreEmoticons.CORE_EMOTICONS.TYPED;
    }

    @Override
    public Field<String> field3() {
        return CoreEmoticons.CORE_EMOTICONS.IMAGE;
    }

    @Override
    public Field<Short> field4() {
        return CoreEmoticons.CORE_EMOTICONS.CLICKABLE;
    }

    @Override
    public Field<String> field5() {
        return CoreEmoticons.CORE_EMOTICONS.EMO_SET;
    }

    @Override
    public Field<Integer> field6() {
        return CoreEmoticons.CORE_EMOTICONS.EMO_POSITION;
    }

    @Override
    public Field<UInteger> field7() {
        return CoreEmoticons.CORE_EMOTICONS.EMO_SET_POSITION;
    }

    @Override
    public Field<String> field8() {
        return CoreEmoticons.CORE_EMOTICONS.IMAGE_2X;
    }

    @Override
    public Field<Short> field9() {
        return CoreEmoticons.CORE_EMOTICONS.WIDTH;
    }

    @Override
    public Field<Short> field10() {
        return CoreEmoticons.CORE_EMOTICONS.HEIGHT;
    }

    @Override
    public Short component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTyped();
    }

    @Override
    public String component3() {
        return getImage();
    }

    @Override
    public Short component4() {
        return getClickable();
    }

    @Override
    public String component5() {
        return getEmoSet();
    }

    @Override
    public Integer component6() {
        return getEmoPosition();
    }

    @Override
    public UInteger component7() {
        return getEmoSetPosition();
    }

    @Override
    public String component8() {
        return getImage_2x();
    }

    @Override
    public Short component9() {
        return getWidth();
    }

    @Override
    public Short component10() {
        return getHeight();
    }

    @Override
    public Short value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTyped();
    }

    @Override
    public String value3() {
        return getImage();
    }

    @Override
    public Short value4() {
        return getClickable();
    }

    @Override
    public String value5() {
        return getEmoSet();
    }

    @Override
    public Integer value6() {
        return getEmoPosition();
    }

    @Override
    public UInteger value7() {
        return getEmoSetPosition();
    }

    @Override
    public String value8() {
        return getImage_2x();
    }

    @Override
    public Short value9() {
        return getWidth();
    }

    @Override
    public Short value10() {
        return getHeight();
    }

    @Override
    public CoreEmoticonsRecord value1(Short value) {
        setId(value);
        return this;
    }

    @Override
    public CoreEmoticonsRecord value2(String value) {
        setTyped(value);
        return this;
    }

    @Override
    public CoreEmoticonsRecord value3(String value) {
        setImage(value);
        return this;
    }

    @Override
    public CoreEmoticonsRecord value4(Short value) {
        setClickable(value);
        return this;
    }

    @Override
    public CoreEmoticonsRecord value5(String value) {
        setEmoSet(value);
        return this;
    }

    @Override
    public CoreEmoticonsRecord value6(Integer value) {
        setEmoPosition(value);
        return this;
    }

    @Override
    public CoreEmoticonsRecord value7(UInteger value) {
        setEmoSetPosition(value);
        return this;
    }

    @Override
    public CoreEmoticonsRecord value8(String value) {
        setImage_2x(value);
        return this;
    }

    @Override
    public CoreEmoticonsRecord value9(Short value) {
        setWidth(value);
        return this;
    }

    @Override
    public CoreEmoticonsRecord value10(Short value) {
        setHeight(value);
        return this;
    }

    @Override
    public CoreEmoticonsRecord values(Short value1, String value2, String value3, Short value4, String value5, Integer value6, UInteger value7, String value8, Short value9, Short value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreEmoticonsRecord
     */
    public CoreEmoticonsRecord() {
        super(CoreEmoticons.CORE_EMOTICONS);
    }

    /**
     * Create a detached, initialised CoreEmoticonsRecord
     */
    public CoreEmoticonsRecord(Short id, String typed, String image, Short clickable, String emoSet, Integer emoPosition, UInteger emoSetPosition, String image_2x, Short width, Short height) {
        super(CoreEmoticons.CORE_EMOTICONS);

        setId(id);
        setTyped(typed);
        setImage(image);
        setClickable(clickable);
        setEmoSet(emoSet);
        setEmoPosition(emoPosition);
        setEmoSetPosition(emoSetPosition);
        setImage_2x(image_2x);
        setWidth(width);
        setHeight(height);
    }
}
