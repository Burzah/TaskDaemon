/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMemberRecognizeRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreMemberRecognize extends TableImpl<CoreMemberRecognizeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_member_recognize</code>
     */
    public static final CoreMemberRecognize CORE_MEMBER_RECOGNIZE = new CoreMemberRecognize();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreMemberRecognizeRecord> getRecordType() {
        return CoreMemberRecognizeRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_member_recognize.r_id</code>.
     */
    public final TableField<CoreMemberRecognizeRecord, Integer> R_ID = createField(DSL.name("r_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_recognize.r_member_id</code>.
     */
    public final TableField<CoreMemberRecognizeRecord, Integer> R_MEMBER_ID = createField(DSL.name("r_member_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_recognize.r_content_class</code>.
     */
    public final TableField<CoreMemberRecognizeRecord, String> R_CONTENT_CLASS = createField(DSL.name("r_content_class"), SQLDataType.VARCHAR(150).nullable(false), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_recognize.r_content_id</code>.
     */
    public final TableField<CoreMemberRecognizeRecord, Integer> R_CONTENT_ID = createField(DSL.name("r_content_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_member_recognize.r_message</code>.
     */
    public final TableField<CoreMemberRecognizeRecord, String> R_MESSAGE = createField(DSL.name("r_message"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_member_recognize.r_added</code>.
     */
    public final TableField<CoreMemberRecognizeRecord, Integer> R_ADDED = createField(DSL.name("r_added"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_member_recognize.r_badge</code>.
     */
    public final TableField<CoreMemberRecognizeRecord, UInteger> R_BADGE = createField(DSL.name("r_badge"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_member_recognize.r_points</code>.
     */
    public final TableField<CoreMemberRecognizeRecord, UInteger> R_POINTS = createField(DSL.name("r_points"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_member_recognize.r_given_by</code>.
     */
    public final TableField<CoreMemberRecognizeRecord, UInteger> R_GIVEN_BY = createField(DSL.name("r_given_by"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_member_recognize.r_public</code>.
     * Show this message publicly?
     */
    public final TableField<CoreMemberRecognizeRecord, UByte> R_PUBLIC = createField(DSL.name("r_public"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "Show this message publicly?");

    private CoreMemberRecognize(Name alias, Table<CoreMemberRecognizeRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreMemberRecognize(Name alias, Table<CoreMemberRecognizeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_member_recognize</code>
     * table reference
     */
    public CoreMemberRecognize(String alias) {
        this(DSL.name(alias), CORE_MEMBER_RECOGNIZE);
    }

    /**
     * Create an aliased <code>paradise_forums.core_member_recognize</code>
     * table reference
     */
    public CoreMemberRecognize(Name alias) {
        this(alias, CORE_MEMBER_RECOGNIZE);
    }

    /**
     * Create a <code>paradise_forums.core_member_recognize</code> table
     * reference
     */
    public CoreMemberRecognize() {
        this(DSL.name("core_member_recognize"), null);
    }

    public <O extends Record> CoreMemberRecognize(Table<O> child, ForeignKey<O, CoreMemberRecognizeRecord> key) {
        super(child, key, CORE_MEMBER_RECOGNIZE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_MEMBER_RECOGNIZE_R_CONTENT, Indexes.CORE_MEMBER_RECOGNIZE_R_MEMBER_ID);
    }

    @Override
    public Identity<CoreMemberRecognizeRecord, Integer> getIdentity() {
        return (Identity<CoreMemberRecognizeRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreMemberRecognizeRecord> getPrimaryKey() {
        return Keys.KEY_CORE_MEMBER_RECOGNIZE_PRIMARY;
    }

    @Override
    public CoreMemberRecognize as(String alias) {
        return new CoreMemberRecognize(DSL.name(alias), this);
    }

    @Override
    public CoreMemberRecognize as(Name alias) {
        return new CoreMemberRecognize(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMemberRecognize rename(String name) {
        return new CoreMemberRecognize(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMemberRecognize rename(Name name) {
        return new CoreMemberRecognize(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, Integer, String, Integer, String, Integer, UInteger, UInteger, UInteger, UByte> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
