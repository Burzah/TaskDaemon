/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreEditHistory;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreEditHistoryRecord extends UpdatableRecordImpl<CoreEditHistoryRecord> implements Record9<ULong, String, ULong, ULong, UInteger, String, String, Boolean, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_edit_history.id</code>. ID Number
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_edit_history.id</code>. ID Number
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_edit_history.class</code>. The
     * comment class
     */
    public void setClass_(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_edit_history.class</code>. The
     * comment class
     */
    public String getClass_() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_edit_history.comment_id</code>. The
     * comment ID
     */
    public void setCommentId(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_edit_history.comment_id</code>. The
     * comment ID
     */
    public ULong getCommentId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_edit_history.member</code>. The ID
     * number of the member making the edit
     */
    public void setMember(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_edit_history.member</code>. The ID
     * number of the member making the edit
     */
    public ULong getMember() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_edit_history.time</code>. Unix
     * timestamp of the date the edit was made
     */
    public void setTime(UInteger value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_edit_history.time</code>. Unix
     * timestamp of the date the edit was made
     */
    public UInteger getTime() {
        return (UInteger) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_edit_history.old</code>. The
     * previous comment text
     */
    public void setOld(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_edit_history.old</code>. The
     * previous comment text
     */
    public String getOld() {
        return (String) get(5);
    }

    /**
     * Setter for <code>paradise_forums.core_edit_history.new</code>. The new
     * comment text
     */
    public void setNew(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.core_edit_history.new</code>. The new
     * comment text
     */
    public String getNew() {
        return (String) get(6);
    }

    /**
     * Setter for <code>paradise_forums.core_edit_history.public</code>.
     * Indicates if the log should display publicly
     */
    public void setPublic(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>paradise_forums.core_edit_history.public</code>.
     * Indicates if the log should display publicly
     */
    public Boolean getPublic() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>paradise_forums.core_edit_history.reason</code>.
     * User-provided reason for editing
     */
    public void setReason(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>paradise_forums.core_edit_history.reason</code>.
     * User-provided reason for editing
     */
    public String getReason() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<ULong, String, ULong, ULong, UInteger, String, String, Boolean, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<ULong, String, ULong, ULong, UInteger, String, String, Boolean, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CoreEditHistory.CORE_EDIT_HISTORY.ID;
    }

    @Override
    public Field<String> field2() {
        return CoreEditHistory.CORE_EDIT_HISTORY.CLASS;
    }

    @Override
    public Field<ULong> field3() {
        return CoreEditHistory.CORE_EDIT_HISTORY.COMMENT_ID;
    }

    @Override
    public Field<ULong> field4() {
        return CoreEditHistory.CORE_EDIT_HISTORY.MEMBER;
    }

    @Override
    public Field<UInteger> field5() {
        return CoreEditHistory.CORE_EDIT_HISTORY.TIME;
    }

    @Override
    public Field<String> field6() {
        return CoreEditHistory.CORE_EDIT_HISTORY.OLD;
    }

    @Override
    public Field<String> field7() {
        return CoreEditHistory.CORE_EDIT_HISTORY.NEW;
    }

    @Override
    public Field<Boolean> field8() {
        return CoreEditHistory.CORE_EDIT_HISTORY.PUBLIC;
    }

    @Override
    public Field<String> field9() {
        return CoreEditHistory.CORE_EDIT_HISTORY.REASON;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getClass_();
    }

    @Override
    public ULong component3() {
        return getCommentId();
    }

    @Override
    public ULong component4() {
        return getMember();
    }

    @Override
    public UInteger component5() {
        return getTime();
    }

    @Override
    public String component6() {
        return getOld();
    }

    @Override
    public String component7() {
        return getNew();
    }

    @Override
    public Boolean component8() {
        return getPublic();
    }

    @Override
    public String component9() {
        return getReason();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getClass_();
    }

    @Override
    public ULong value3() {
        return getCommentId();
    }

    @Override
    public ULong value4() {
        return getMember();
    }

    @Override
    public UInteger value5() {
        return getTime();
    }

    @Override
    public String value6() {
        return getOld();
    }

    @Override
    public String value7() {
        return getNew();
    }

    @Override
    public Boolean value8() {
        return getPublic();
    }

    @Override
    public String value9() {
        return getReason();
    }

    @Override
    public CoreEditHistoryRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public CoreEditHistoryRecord value2(String value) {
        setClass_(value);
        return this;
    }

    @Override
    public CoreEditHistoryRecord value3(ULong value) {
        setCommentId(value);
        return this;
    }

    @Override
    public CoreEditHistoryRecord value4(ULong value) {
        setMember(value);
        return this;
    }

    @Override
    public CoreEditHistoryRecord value5(UInteger value) {
        setTime(value);
        return this;
    }

    @Override
    public CoreEditHistoryRecord value6(String value) {
        setOld(value);
        return this;
    }

    @Override
    public CoreEditHistoryRecord value7(String value) {
        setNew(value);
        return this;
    }

    @Override
    public CoreEditHistoryRecord value8(Boolean value) {
        setPublic(value);
        return this;
    }

    @Override
    public CoreEditHistoryRecord value9(String value) {
        setReason(value);
        return this;
    }

    @Override
    public CoreEditHistoryRecord values(ULong value1, String value2, ULong value3, ULong value4, UInteger value5, String value6, String value7, Boolean value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreEditHistoryRecord
     */
    public CoreEditHistoryRecord() {
        super(CoreEditHistory.CORE_EDIT_HISTORY);
    }

    /**
     * Create a detached, initialised CoreEditHistoryRecord
     */
    public CoreEditHistoryRecord(ULong id, String class_, ULong commentId, ULong member, UInteger time, String old, String new_, Boolean public_, String reason) {
        super(CoreEditHistory.CORE_EDIT_HISTORY);

        setId(id);
        setClass_(class_);
        setCommentId(commentId);
        setMember(member);
        setTime(time);
        setOld(old);
        setNew(new_);
        setPublic(public_);
        setReason(reason);
    }
}
