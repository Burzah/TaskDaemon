/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreS3DeletionsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreS3Deletions extends TableImpl<CoreS3DeletionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_s3_deletions</code>
     */
    public static final CoreS3Deletions CORE_S3_DELETIONS = new CoreS3Deletions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreS3DeletionsRecord> getRecordType() {
        return CoreS3DeletionsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_s3_deletions.s3_container</code>.
     */
    public final TableField<CoreS3DeletionsRecord, String> S3_CONTAINER = createField(DSL.name("s3_container"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_s3_deletions.s3_added</code>.
     */
    public final TableField<CoreS3DeletionsRecord, Integer> S3_ADDED = createField(DSL.name("s3_added"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_s3_deletions.s3_last_cycle</code>.
     */
    public final TableField<CoreS3DeletionsRecord, Integer> S3_LAST_CYCLE = createField(DSL.name("s3_last_cycle"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_s3_deletions.s3_marker</code>. Last
     * key seen, so it can be used to get the next result set from AWS
     */
    public final TableField<CoreS3DeletionsRecord, String> S3_MARKER = createField(DSL.name("s3_marker"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "Last key seen, so it can be used to get the next result set from AWS");

    private CoreS3Deletions(Name alias, Table<CoreS3DeletionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreS3Deletions(Name alias, Table<CoreS3DeletionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_s3_deletions</code> table
     * reference
     */
    public CoreS3Deletions(String alias) {
        this(DSL.name(alias), CORE_S3_DELETIONS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_s3_deletions</code> table
     * reference
     */
    public CoreS3Deletions(Name alias) {
        this(alias, CORE_S3_DELETIONS);
    }

    /**
     * Create a <code>paradise_forums.core_s3_deletions</code> table reference
     */
    public CoreS3Deletions() {
        this(DSL.name("core_s3_deletions"), null);
    }

    public <O extends Record> CoreS3Deletions(Table<O> child, ForeignKey<O, CoreS3DeletionsRecord> key) {
        super(child, key, CORE_S3_DELETIONS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public UniqueKey<CoreS3DeletionsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_S3_DELETIONS_PRIMARY;
    }

    @Override
    public CoreS3Deletions as(String alias) {
        return new CoreS3Deletions(DSL.name(alias), this);
    }

    @Override
    public CoreS3Deletions as(Name alias) {
        return new CoreS3Deletions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreS3Deletions rename(String name) {
        return new CoreS3Deletions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreS3Deletions rename(Name name) {
        return new CoreS3Deletions(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, Integer, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
