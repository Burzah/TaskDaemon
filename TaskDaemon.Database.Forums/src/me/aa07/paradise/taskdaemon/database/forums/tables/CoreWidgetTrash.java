/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreWidgetTrashRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreWidgetTrash extends TableImpl<CoreWidgetTrashRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_widget_trash</code>
     */
    public static final CoreWidgetTrash CORE_WIDGET_TRASH = new CoreWidgetTrash();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreWidgetTrashRecord> getRecordType() {
        return CoreWidgetTrashRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_widget_trash.id</code>. Widgets
     * unique ID
     */
    public final TableField<CoreWidgetTrashRecord, String> ID = createField(DSL.name("id"), SQLDataType.VARCHAR(100).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "Widgets unique ID");

    /**
     * The column <code>paradise_forums.core_widget_trash.data</code>.
     */
    public final TableField<CoreWidgetTrashRecord, String> DATA = createField(DSL.name("data"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_widget_trash.date</code>. Date
     * trash was added
     */
    public final TableField<CoreWidgetTrashRecord, UInteger> DATE = createField(DSL.name("date"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "Date trash was added");

    private CoreWidgetTrash(Name alias, Table<CoreWidgetTrashRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreWidgetTrash(Name alias, Table<CoreWidgetTrashRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_widget_trash</code> table
     * reference
     */
    public CoreWidgetTrash(String alias) {
        this(DSL.name(alias), CORE_WIDGET_TRASH);
    }

    /**
     * Create an aliased <code>paradise_forums.core_widget_trash</code> table
     * reference
     */
    public CoreWidgetTrash(Name alias) {
        this(alias, CORE_WIDGET_TRASH);
    }

    /**
     * Create a <code>paradise_forums.core_widget_trash</code> table reference
     */
    public CoreWidgetTrash() {
        this(DSL.name("core_widget_trash"), null);
    }

    public <O extends Record> CoreWidgetTrash(Table<O> child, ForeignKey<O, CoreWidgetTrashRecord> key) {
        super(child, key, CORE_WIDGET_TRASH);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_WIDGET_TRASH_DATE);
    }

    @Override
    public UniqueKey<CoreWidgetTrashRecord> getPrimaryKey() {
        return Keys.KEY_CORE_WIDGET_TRASH_PRIMARY;
    }

    @Override
    public CoreWidgetTrash as(String alias) {
        return new CoreWidgetTrash(DSL.name(alias), this);
    }

    @Override
    public CoreWidgetTrash as(Name alias) {
        return new CoreWidgetTrash(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreWidgetTrash rename(String name) {
        return new CoreWidgetTrash(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreWidgetTrash rename(Name name) {
        return new CoreWidgetTrash(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, UInteger> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
