/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.BrilliantdiscordNotifications;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BrilliantdiscordNotificationsRecord extends UpdatableRecordImpl<BrilliantdiscordNotificationsRecord> implements Record9<ULong, String, Integer, String, String, Boolean, String, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>paradise_forums.brilliantdiscord_notifications.id</code>. ID Number
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.brilliantdiscord_notifications.id</code>. ID Number
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>paradise_forums.brilliantdiscord_notifications.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.brilliantdiscord_notifications.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>paradise_forums.brilliantdiscord_notifications.position</code>.
     */
    public void setPosition(Integer value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.brilliantdiscord_notifications.position</code>.
     */
    public Integer getPosition() {
        return (Integer) get(2);
    }

    /**
     * Setter for
     * <code>paradise_forums.brilliantdiscord_notifications.item_class</code>.
     */
    public void setItemClass(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.brilliantdiscord_notifications.item_class</code>.
     */
    public String getItemClass() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>paradise_forums.brilliantdiscord_notifications.conditions</code>.
     */
    public void setConditions(String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.brilliantdiscord_notifications.conditions</code>.
     */
    public String getConditions() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>paradise_forums.brilliantdiscord_notifications.enabled</code>.
     */
    public void setEnabled(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.brilliantdiscord_notifications.enabled</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(5);
    }

    /**
     * Setter for
     * <code>paradise_forums.brilliantdiscord_notifications.notification_settings</code>.
     */
    public void setNotificationSettings(String value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.brilliantdiscord_notifications.notification_settings</code>.
     */
    public String getNotificationSettings() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>paradise_forums.brilliantdiscord_notifications.webhook</code>.
     */
    public void setWebhook(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.brilliantdiscord_notifications.webhook</code>.
     */
    public String getWebhook() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>paradise_forums.brilliantdiscord_notifications.instant_post</code>.
     */
    public void setInstantPost(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.brilliantdiscord_notifications.instant_post</code>.
     */
    public Boolean getInstantPost() {
        return (Boolean) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<ULong, String, Integer, String, String, Boolean, String, String, Boolean> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<ULong, String, Integer, String, String, Boolean, String, String, Boolean> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return BrilliantdiscordNotifications.BRILLIANTDISCORD_NOTIFICATIONS.ID;
    }

    @Override
    public Field<String> field2() {
        return BrilliantdiscordNotifications.BRILLIANTDISCORD_NOTIFICATIONS.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return BrilliantdiscordNotifications.BRILLIANTDISCORD_NOTIFICATIONS.POSITION;
    }

    @Override
    public Field<String> field4() {
        return BrilliantdiscordNotifications.BRILLIANTDISCORD_NOTIFICATIONS.ITEM_CLASS;
    }

    @Override
    public Field<String> field5() {
        return BrilliantdiscordNotifications.BRILLIANTDISCORD_NOTIFICATIONS.CONDITIONS;
    }

    @Override
    public Field<Boolean> field6() {
        return BrilliantdiscordNotifications.BRILLIANTDISCORD_NOTIFICATIONS.ENABLED;
    }

    @Override
    public Field<String> field7() {
        return BrilliantdiscordNotifications.BRILLIANTDISCORD_NOTIFICATIONS.NOTIFICATION_SETTINGS;
    }

    @Override
    public Field<String> field8() {
        return BrilliantdiscordNotifications.BRILLIANTDISCORD_NOTIFICATIONS.WEBHOOK;
    }

    @Override
    public Field<Boolean> field9() {
        return BrilliantdiscordNotifications.BRILLIANTDISCORD_NOTIFICATIONS.INSTANT_POST;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getPosition();
    }

    @Override
    public String component4() {
        return getItemClass();
    }

    @Override
    public String component5() {
        return getConditions();
    }

    @Override
    public Boolean component6() {
        return getEnabled();
    }

    @Override
    public String component7() {
        return getNotificationSettings();
    }

    @Override
    public String component8() {
        return getWebhook();
    }

    @Override
    public Boolean component9() {
        return getInstantPost();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getPosition();
    }

    @Override
    public String value4() {
        return getItemClass();
    }

    @Override
    public String value5() {
        return getConditions();
    }

    @Override
    public Boolean value6() {
        return getEnabled();
    }

    @Override
    public String value7() {
        return getNotificationSettings();
    }

    @Override
    public String value8() {
        return getWebhook();
    }

    @Override
    public Boolean value9() {
        return getInstantPost();
    }

    @Override
    public BrilliantdiscordNotificationsRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public BrilliantdiscordNotificationsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public BrilliantdiscordNotificationsRecord value3(Integer value) {
        setPosition(value);
        return this;
    }

    @Override
    public BrilliantdiscordNotificationsRecord value4(String value) {
        setItemClass(value);
        return this;
    }

    @Override
    public BrilliantdiscordNotificationsRecord value5(String value) {
        setConditions(value);
        return this;
    }

    @Override
    public BrilliantdiscordNotificationsRecord value6(Boolean value) {
        setEnabled(value);
        return this;
    }

    @Override
    public BrilliantdiscordNotificationsRecord value7(String value) {
        setNotificationSettings(value);
        return this;
    }

    @Override
    public BrilliantdiscordNotificationsRecord value8(String value) {
        setWebhook(value);
        return this;
    }

    @Override
    public BrilliantdiscordNotificationsRecord value9(Boolean value) {
        setInstantPost(value);
        return this;
    }

    @Override
    public BrilliantdiscordNotificationsRecord values(ULong value1, String value2, Integer value3, String value4, String value5, Boolean value6, String value7, String value8, Boolean value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BrilliantdiscordNotificationsRecord
     */
    public BrilliantdiscordNotificationsRecord() {
        super(BrilliantdiscordNotifications.BRILLIANTDISCORD_NOTIFICATIONS);
    }

    /**
     * Create a detached, initialised BrilliantdiscordNotificationsRecord
     */
    public BrilliantdiscordNotificationsRecord(ULong id, String name, Integer position, String itemClass, String conditions, Boolean enabled, String notificationSettings, String webhook, Boolean instantPost) {
        super(BrilliantdiscordNotifications.BRILLIANTDISCORD_NOTIFICATIONS);

        setId(id);
        setName(name);
        setPosition(position);
        setItemClass(itemClass);
        setConditions(conditions);
        setEnabled(enabled);
        setNotificationSettings(notificationSettings);
        setWebhook(webhook);
        setInstantPost(instantPost);
    }
}
