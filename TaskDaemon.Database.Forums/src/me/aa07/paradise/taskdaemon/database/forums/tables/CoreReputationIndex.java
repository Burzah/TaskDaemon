/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreReputationIndexRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreReputationIndex extends TableImpl<CoreReputationIndexRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_reputation_index</code>
     */
    public static final CoreReputationIndex CORE_REPUTATION_INDEX = new CoreReputationIndex();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreReputationIndexRecord> getRecordType() {
        return CoreReputationIndexRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_reputation_index.id</code>.
     */
    public final TableField<CoreReputationIndexRecord, ULong> ID = createField(DSL.name("id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_reputation_index.member_id</code>.
     */
    public final TableField<CoreReputationIndexRecord, ULong> MEMBER_ID = createField(DSL.name("member_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_reputation_index.app</code>.
     */
    public final TableField<CoreReputationIndexRecord, String> APP = createField(DSL.name("app"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_reputation_index.type</code>.
     */
    public final TableField<CoreReputationIndexRecord, String> TYPE = createField(DSL.name("type"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_reputation_index.type_id</code>.
     */
    public final TableField<CoreReputationIndexRecord, UInteger> TYPE_ID = createField(DSL.name("type_id"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_reputation_index.rep_date</code>.
     */
    public final TableField<CoreReputationIndexRecord, UInteger> REP_DATE = createField(DSL.name("rep_date"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_reputation_index.rep_rating</code>.
     */
    public final TableField<CoreReputationIndexRecord, Byte> REP_RATING = createField(DSL.name("rep_rating"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_reputation_index.member_received</code>.
     */
    public final TableField<CoreReputationIndexRecord, ULong> MEMBER_RECEIVED = createField(DSL.name("member_received"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_reputation_index.rep_class</code>.
     */
    public final TableField<CoreReputationIndexRecord, String> REP_CLASS = createField(DSL.name("rep_class"), SQLDataType.VARCHAR(100).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_reputation_index.item_id</code>.
     */
    public final TableField<CoreReputationIndexRecord, UInteger> ITEM_ID = createField(DSL.name("item_id"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_reputation_index.class_type_id_hash</code>.
     * MD5 of rep_class:type_id
     */
    public final TableField<CoreReputationIndexRecord, String> CLASS_TYPE_ID_HASH = createField(DSL.name("class_type_id_hash"), SQLDataType.CHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.CHAR)), this, "MD5 of rep_class:type_id");

    /**
     * The column <code>paradise_forums.core_reputation_index.reaction</code>.
     */
    public final TableField<CoreReputationIndexRecord, Long> REACTION = createField(DSL.name("reaction"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    private CoreReputationIndex(Name alias, Table<CoreReputationIndexRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreReputationIndex(Name alias, Table<CoreReputationIndexRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_reputation_index</code>
     * table reference
     */
    public CoreReputationIndex(String alias) {
        this(DSL.name(alias), CORE_REPUTATION_INDEX);
    }

    /**
     * Create an aliased <code>paradise_forums.core_reputation_index</code>
     * table reference
     */
    public CoreReputationIndex(Name alias) {
        this(alias, CORE_REPUTATION_INDEX);
    }

    /**
     * Create a <code>paradise_forums.core_reputation_index</code> table
     * reference
     */
    public CoreReputationIndex() {
        this(DSL.name("core_reputation_index"), null);
    }

    public <O extends Record> CoreReputationIndex(Table<O> child, ForeignKey<O, CoreReputationIndexRecord> key) {
        super(child, key, CORE_REPUTATION_INDEX);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_REPUTATION_INDEX_APP, Indexes.CORE_REPUTATION_INDEX_CLASS_TYPE_ID_HASH, Indexes.CORE_REPUTATION_INDEX_ITEM_LOOKUP, Indexes.CORE_REPUTATION_INDEX_LEADERBOARD, Indexes.CORE_REPUTATION_INDEX_MEMBER_RECEIVED, Indexes.CORE_REPUTATION_INDEX_MEMBER_REP, Indexes.CORE_REPUTATION_INDEX_REP_CLASS, Indexes.CORE_REPUTATION_INDEX_REP_DATE, Indexes.CORE_REPUTATION_INDEX_SIDEBAR_LOOKUP);
    }

    @Override
    public Identity<CoreReputationIndexRecord, ULong> getIdentity() {
        return (Identity<CoreReputationIndexRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreReputationIndexRecord> getPrimaryKey() {
        return Keys.KEY_CORE_REPUTATION_INDEX_PRIMARY;
    }

    @Override
    public CoreReputationIndex as(String alias) {
        return new CoreReputationIndex(DSL.name(alias), this);
    }

    @Override
    public CoreReputationIndex as(Name alias) {
        return new CoreReputationIndex(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreReputationIndex rename(String name) {
        return new CoreReputationIndex(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreReputationIndex rename(Name name) {
        return new CoreReputationIndex(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<ULong, ULong, String, String, UInteger, UInteger, Byte, ULong, String, UInteger, String, Long> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
