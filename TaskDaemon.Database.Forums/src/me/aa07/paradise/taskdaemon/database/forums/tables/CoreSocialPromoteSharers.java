/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSocialPromoteSharersRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreSocialPromoteSharers extends TableImpl<CoreSocialPromoteSharersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_social_promote_sharers</code>
     */
    public static final CoreSocialPromoteSharers CORE_SOCIAL_PROMOTE_SHARERS = new CoreSocialPromoteSharers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreSocialPromoteSharersRecord> getRecordType() {
        return CoreSocialPromoteSharersRecord.class;
    }

    /**
     * The column
     * <code>paradise_forums.core_social_promote_sharers.sharer_id</code>.
     */
    public final TableField<CoreSocialPromoteSharersRecord, Integer> SHARER_ID = createField(DSL.name("sharer_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.core_social_promote_sharers.sharer_key</code>.
     */
    public final TableField<CoreSocialPromoteSharersRecord, String> SHARER_KEY = createField(DSL.name("sharer_key"), SQLDataType.VARCHAR(100).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_social_promote_sharers.sharer_settings</code>.
     * JSON array of promotion settings
     */
    public final TableField<CoreSocialPromoteSharersRecord, String> SHARER_SETTINGS = createField(DSL.name("sharer_settings"), SQLDataType.CLOB.nullable(false), this, "JSON array of promotion settings");

    /**
     * The column
     * <code>paradise_forums.core_social_promote_sharers.sharer_enabled</code>.
     */
    public final TableField<CoreSocialPromoteSharersRecord, Boolean> SHARER_ENABLED = createField(DSL.name("sharer_enabled"), SQLDataType.BIT.nullable(false).defaultValue(DSL.inline("b'0'", SQLDataType.BIT)), this, "");

    private CoreSocialPromoteSharers(Name alias, Table<CoreSocialPromoteSharersRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreSocialPromoteSharers(Name alias, Table<CoreSocialPromoteSharersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>paradise_forums.core_social_promote_sharers</code> table reference
     */
    public CoreSocialPromoteSharers(String alias) {
        this(DSL.name(alias), CORE_SOCIAL_PROMOTE_SHARERS);
    }

    /**
     * Create an aliased
     * <code>paradise_forums.core_social_promote_sharers</code> table reference
     */
    public CoreSocialPromoteSharers(Name alias) {
        this(alias, CORE_SOCIAL_PROMOTE_SHARERS);
    }

    /**
     * Create a <code>paradise_forums.core_social_promote_sharers</code> table
     * reference
     */
    public CoreSocialPromoteSharers() {
        this(DSL.name("core_social_promote_sharers"), null);
    }

    public <O extends Record> CoreSocialPromoteSharers(Table<O> child, ForeignKey<O, CoreSocialPromoteSharersRecord> key) {
        super(child, key, CORE_SOCIAL_PROMOTE_SHARERS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_SOCIAL_PROMOTE_SHARERS_ENABLED);
    }

    @Override
    public Identity<CoreSocialPromoteSharersRecord, Integer> getIdentity() {
        return (Identity<CoreSocialPromoteSharersRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreSocialPromoteSharersRecord> getPrimaryKey() {
        return Keys.KEY_CORE_SOCIAL_PROMOTE_SHARERS_PRIMARY;
    }

    @Override
    public CoreSocialPromoteSharers as(String alias) {
        return new CoreSocialPromoteSharers(DSL.name(alias), this);
    }

    @Override
    public CoreSocialPromoteSharers as(Name alias) {
        return new CoreSocialPromoteSharers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreSocialPromoteSharers rename(String name) {
        return new CoreSocialPromoteSharers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreSocialPromoteSharers rename(Name name) {
        return new CoreSocialPromoteSharers(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
