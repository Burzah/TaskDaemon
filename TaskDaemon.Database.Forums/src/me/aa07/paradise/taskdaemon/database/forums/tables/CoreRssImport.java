/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreRssImportRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreRssImport extends TableImpl<CoreRssImportRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_rss_import</code>
     */
    public static final CoreRssImport CORE_RSS_IMPORT = new CoreRssImport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreRssImportRecord> getRecordType() {
        return CoreRssImportRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_rss_import.rss_import_id</code>.
     */
    public final TableField<CoreRssImportRecord, Integer> RSS_IMPORT_ID = createField(DSL.name("rss_import_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.core_rss_import.rss_import_enabled</code>.
     */
    public final TableField<CoreRssImportRecord, Byte> RSS_IMPORT_ENABLED = createField(DSL.name("rss_import_enabled"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.core_rss_import.rss_import_title</code>.
     */
    public final TableField<CoreRssImportRecord, String> RSS_IMPORT_TITLE = createField(DSL.name("rss_import_title"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_rss_import.rss_import_url</code>.
     */
    public final TableField<CoreRssImportRecord, String> RSS_IMPORT_URL = createField(DSL.name("rss_import_url"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_rss_import.rss_import_auth_user</code>.
     */
    public final TableField<CoreRssImportRecord, String> RSS_IMPORT_AUTH_USER = createField(DSL.name("rss_import_auth_user"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_rss_import.rss_import_auth_pass</code>.
     */
    public final TableField<CoreRssImportRecord, String> RSS_IMPORT_AUTH_PASS = createField(DSL.name("rss_import_auth_pass"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_rss_import.rss_import_class</code>.
     */
    public final TableField<CoreRssImportRecord, String> RSS_IMPORT_CLASS = createField(DSL.name("rss_import_class"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_rss_import.rss_import_node_id</code>.
     */
    public final TableField<CoreRssImportRecord, Integer> RSS_IMPORT_NODE_ID = createField(DSL.name("rss_import_node_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_rss_import.rss_import_member</code>.
     */
    public final TableField<CoreRssImportRecord, ULong> RSS_IMPORT_MEMBER = createField(DSL.name("rss_import_member"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_rss_import.rss_import_time</code>.
     */
    public final TableField<CoreRssImportRecord, Short> RSS_IMPORT_TIME = createField(DSL.name("rss_import_time"), SQLDataType.SMALLINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.SMALLINT)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_rss_import.rss_import_last_import</code>.
     */
    public final TableField<CoreRssImportRecord, Integer> RSS_IMPORT_LAST_IMPORT = createField(DSL.name("rss_import_last_import"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_rss_import.rss_import_showlink</code>.
     */
    public final TableField<CoreRssImportRecord, String> RSS_IMPORT_SHOWLINK = createField(DSL.name("rss_import_showlink"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_rss_import.rss_import_topic_pre</code>.
     */
    public final TableField<CoreRssImportRecord, String> RSS_IMPORT_TOPIC_PRE = createField(DSL.name("rss_import_topic_pre"), SQLDataType.VARCHAR(50).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_rss_import.rss_import_auto_follow</code>.
     */
    public final TableField<CoreRssImportRecord, Byte> RSS_IMPORT_AUTO_FOLLOW = createField(DSL.name("rss_import_auto_follow"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_rss_import.rss_import_settings</code>. Json
     * array of the extensions settings
     */
    public final TableField<CoreRssImportRecord, String> RSS_IMPORT_SETTINGS = createField(DSL.name("rss_import_settings"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "Json array of the extensions settings");

    /**
     * The column
     * <code>paradise_forums.core_rss_import.rss_import_has_enclosures</code>.
     */
    public final TableField<CoreRssImportRecord, UByte> RSS_IMPORT_HAS_ENCLOSURES = createField(DSL.name("rss_import_has_enclosures"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_rss_import.rss_import_enclosures</code>.
     * Enclosure handling: import, ignore or hotlink
     */
    public final TableField<CoreRssImportRecord, String> RSS_IMPORT_ENCLOSURES = createField(DSL.name("rss_import_enclosures"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("'import'", SQLDataType.VARCHAR)), this, "Enclosure handling: import, ignore or hotlink");

    private CoreRssImport(Name alias, Table<CoreRssImportRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreRssImport(Name alias, Table<CoreRssImportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_rss_import</code> table
     * reference
     */
    public CoreRssImport(String alias) {
        this(DSL.name(alias), CORE_RSS_IMPORT);
    }

    /**
     * Create an aliased <code>paradise_forums.core_rss_import</code> table
     * reference
     */
    public CoreRssImport(Name alias) {
        this(alias, CORE_RSS_IMPORT);
    }

    /**
     * Create a <code>paradise_forums.core_rss_import</code> table reference
     */
    public CoreRssImport() {
        this(DSL.name("core_rss_import"), null);
    }

    public <O extends Record> CoreRssImport(Table<O> child, ForeignKey<O, CoreRssImportRecord> key) {
        super(child, key, CORE_RSS_IMPORT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_RSS_IMPORT_MEMBER, Indexes.CORE_RSS_IMPORT_RSS_GRAB);
    }

    @Override
    public Identity<CoreRssImportRecord, Integer> getIdentity() {
        return (Identity<CoreRssImportRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreRssImportRecord> getPrimaryKey() {
        return Keys.KEY_CORE_RSS_IMPORT_PRIMARY;
    }

    @Override
    public CoreRssImport as(String alias) {
        return new CoreRssImport(DSL.name(alias), this);
    }

    @Override
    public CoreRssImport as(Name alias) {
        return new CoreRssImport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreRssImport rename(String name) {
        return new CoreRssImport(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreRssImport rename(Name name) {
        return new CoreRssImport(name, null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<Integer, Byte, String, String, String, String, String, Integer, ULong, Short, Integer, String, String, Byte, String, UByte, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }
}
