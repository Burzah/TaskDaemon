/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.ConvertApps;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConvertAppsRecord extends UpdatableRecordImpl<ConvertAppsRecord> implements Record16<Integer, String, String, Byte, Integer, String, String, String, String, String, String, String, Byte, Integer, Integer, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.convert_apps.app_id</code>.
     */
    public void setAppId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.convert_apps.app_id</code>.
     */
    public Integer getAppId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>paradise_forums.convert_apps.sw</code>.
     */
    public void setSw(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.convert_apps.sw</code>.
     */
    public String getSw() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_forums.convert_apps.app_key</code>.
     */
    public void setAppKey(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.convert_apps.app_key</code>.
     */
    public String getAppKey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>paradise_forums.convert_apps.login</code>.
     */
    public void setLogin(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.convert_apps.login</code>.
     */
    public Byte getLogin() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>paradise_forums.convert_apps.parent</code>.
     */
    public void setParent(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.convert_apps.parent</code>.
     */
    public Integer getParent() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>paradise_forums.convert_apps.db_driver</code>.
     */
    public void setDbDriver(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.convert_apps.db_driver</code>.
     */
    public String getDbDriver() {
        return (String) get(5);
    }

    /**
     * Setter for <code>paradise_forums.convert_apps.db_host</code>.
     */
    public void setDbHost(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.convert_apps.db_host</code>.
     */
    public String getDbHost() {
        return (String) get(6);
    }

    /**
     * Setter for <code>paradise_forums.convert_apps.db_user</code>.
     */
    public void setDbUser(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>paradise_forums.convert_apps.db_user</code>.
     */
    public String getDbUser() {
        return (String) get(7);
    }

    /**
     * Setter for <code>paradise_forums.convert_apps.db_pass</code>.
     */
    public void setDbPass(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>paradise_forums.convert_apps.db_pass</code>.
     */
    public String getDbPass() {
        return (String) get(8);
    }

    /**
     * Setter for <code>paradise_forums.convert_apps.db_db</code>.
     */
    public void setDbDb(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>paradise_forums.convert_apps.db_db</code>.
     */
    public String getDbDb() {
        return (String) get(9);
    }

    /**
     * Setter for <code>paradise_forums.convert_apps.db_prefix</code>.
     */
    public void setDbPrefix(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>paradise_forums.convert_apps.db_prefix</code>.
     */
    public String getDbPrefix() {
        return (String) get(10);
    }

    /**
     * Setter for <code>paradise_forums.convert_apps.db_charset</code>.
     */
    public void setDbCharset(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>paradise_forums.convert_apps.db_charset</code>.
     */
    public String getDbCharset() {
        return (String) get(11);
    }

    /**
     * Setter for <code>paradise_forums.convert_apps.app_merge</code>.
     */
    public void setAppMerge(Byte value) {
        set(12, value);
    }

    /**
     * Getter for <code>paradise_forums.convert_apps.app_merge</code>.
     */
    public Byte getAppMerge() {
        return (Byte) get(12);
    }

    /**
     * Setter for <code>paradise_forums.convert_apps.start_date</code>.
     */
    public void setStartDate(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>paradise_forums.convert_apps.start_date</code>.
     */
    public Integer getStartDate() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>paradise_forums.convert_apps.db_port</code>.
     */
    public void setDbPort(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>paradise_forums.convert_apps.db_port</code>.
     */
    public Integer getDbPort() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>paradise_forums.convert_apps.finished</code>. Has app
     * been finished?
     */
    public void setFinished(Boolean value) {
        set(15, value);
    }

    /**
     * Getter for <code>paradise_forums.convert_apps.finished</code>. Has app
     * been finished?
     */
    public Boolean getFinished() {
        return (Boolean) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row16<Integer, String, String, Byte, Integer, String, String, String, String, String, String, String, Byte, Integer, Integer, Boolean> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    @Override
    public Row16<Integer, String, String, Byte, Integer, String, String, String, String, String, String, String, Byte, Integer, Integer, Boolean> valuesRow() {
        return (Row16) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ConvertApps.CONVERT_APPS.APP_ID;
    }

    @Override
    public Field<String> field2() {
        return ConvertApps.CONVERT_APPS.SW;
    }

    @Override
    public Field<String> field3() {
        return ConvertApps.CONVERT_APPS.APP_KEY;
    }

    @Override
    public Field<Byte> field4() {
        return ConvertApps.CONVERT_APPS.LOGIN;
    }

    @Override
    public Field<Integer> field5() {
        return ConvertApps.CONVERT_APPS.PARENT;
    }

    @Override
    public Field<String> field6() {
        return ConvertApps.CONVERT_APPS.DB_DRIVER;
    }

    @Override
    public Field<String> field7() {
        return ConvertApps.CONVERT_APPS.DB_HOST;
    }

    @Override
    public Field<String> field8() {
        return ConvertApps.CONVERT_APPS.DB_USER;
    }

    @Override
    public Field<String> field9() {
        return ConvertApps.CONVERT_APPS.DB_PASS;
    }

    @Override
    public Field<String> field10() {
        return ConvertApps.CONVERT_APPS.DB_DB;
    }

    @Override
    public Field<String> field11() {
        return ConvertApps.CONVERT_APPS.DB_PREFIX;
    }

    @Override
    public Field<String> field12() {
        return ConvertApps.CONVERT_APPS.DB_CHARSET;
    }

    @Override
    public Field<Byte> field13() {
        return ConvertApps.CONVERT_APPS.APP_MERGE;
    }

    @Override
    public Field<Integer> field14() {
        return ConvertApps.CONVERT_APPS.START_DATE;
    }

    @Override
    public Field<Integer> field15() {
        return ConvertApps.CONVERT_APPS.DB_PORT;
    }

    @Override
    public Field<Boolean> field16() {
        return ConvertApps.CONVERT_APPS.FINISHED;
    }

    @Override
    public Integer component1() {
        return getAppId();
    }

    @Override
    public String component2() {
        return getSw();
    }

    @Override
    public String component3() {
        return getAppKey();
    }

    @Override
    public Byte component4() {
        return getLogin();
    }

    @Override
    public Integer component5() {
        return getParent();
    }

    @Override
    public String component6() {
        return getDbDriver();
    }

    @Override
    public String component7() {
        return getDbHost();
    }

    @Override
    public String component8() {
        return getDbUser();
    }

    @Override
    public String component9() {
        return getDbPass();
    }

    @Override
    public String component10() {
        return getDbDb();
    }

    @Override
    public String component11() {
        return getDbPrefix();
    }

    @Override
    public String component12() {
        return getDbCharset();
    }

    @Override
    public Byte component13() {
        return getAppMerge();
    }

    @Override
    public Integer component14() {
        return getStartDate();
    }

    @Override
    public Integer component15() {
        return getDbPort();
    }

    @Override
    public Boolean component16() {
        return getFinished();
    }

    @Override
    public Integer value1() {
        return getAppId();
    }

    @Override
    public String value2() {
        return getSw();
    }

    @Override
    public String value3() {
        return getAppKey();
    }

    @Override
    public Byte value4() {
        return getLogin();
    }

    @Override
    public Integer value5() {
        return getParent();
    }

    @Override
    public String value6() {
        return getDbDriver();
    }

    @Override
    public String value7() {
        return getDbHost();
    }

    @Override
    public String value8() {
        return getDbUser();
    }

    @Override
    public String value9() {
        return getDbPass();
    }

    @Override
    public String value10() {
        return getDbDb();
    }

    @Override
    public String value11() {
        return getDbPrefix();
    }

    @Override
    public String value12() {
        return getDbCharset();
    }

    @Override
    public Byte value13() {
        return getAppMerge();
    }

    @Override
    public Integer value14() {
        return getStartDate();
    }

    @Override
    public Integer value15() {
        return getDbPort();
    }

    @Override
    public Boolean value16() {
        return getFinished();
    }

    @Override
    public ConvertAppsRecord value1(Integer value) {
        setAppId(value);
        return this;
    }

    @Override
    public ConvertAppsRecord value2(String value) {
        setSw(value);
        return this;
    }

    @Override
    public ConvertAppsRecord value3(String value) {
        setAppKey(value);
        return this;
    }

    @Override
    public ConvertAppsRecord value4(Byte value) {
        setLogin(value);
        return this;
    }

    @Override
    public ConvertAppsRecord value5(Integer value) {
        setParent(value);
        return this;
    }

    @Override
    public ConvertAppsRecord value6(String value) {
        setDbDriver(value);
        return this;
    }

    @Override
    public ConvertAppsRecord value7(String value) {
        setDbHost(value);
        return this;
    }

    @Override
    public ConvertAppsRecord value8(String value) {
        setDbUser(value);
        return this;
    }

    @Override
    public ConvertAppsRecord value9(String value) {
        setDbPass(value);
        return this;
    }

    @Override
    public ConvertAppsRecord value10(String value) {
        setDbDb(value);
        return this;
    }

    @Override
    public ConvertAppsRecord value11(String value) {
        setDbPrefix(value);
        return this;
    }

    @Override
    public ConvertAppsRecord value12(String value) {
        setDbCharset(value);
        return this;
    }

    @Override
    public ConvertAppsRecord value13(Byte value) {
        setAppMerge(value);
        return this;
    }

    @Override
    public ConvertAppsRecord value14(Integer value) {
        setStartDate(value);
        return this;
    }

    @Override
    public ConvertAppsRecord value15(Integer value) {
        setDbPort(value);
        return this;
    }

    @Override
    public ConvertAppsRecord value16(Boolean value) {
        setFinished(value);
        return this;
    }

    @Override
    public ConvertAppsRecord values(Integer value1, String value2, String value3, Byte value4, Integer value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12, Byte value13, Integer value14, Integer value15, Boolean value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConvertAppsRecord
     */
    public ConvertAppsRecord() {
        super(ConvertApps.CONVERT_APPS);
    }

    /**
     * Create a detached, initialised ConvertAppsRecord
     */
    public ConvertAppsRecord(Integer appId, String sw, String appKey, Byte login, Integer parent, String dbDriver, String dbHost, String dbUser, String dbPass, String dbDb, String dbPrefix, String dbCharset, Byte appMerge, Integer startDate, Integer dbPort, Boolean finished) {
        super(ConvertApps.CONVERT_APPS);

        setAppId(appId);
        setSw(sw);
        setAppKey(appKey);
        setLogin(login);
        setParent(parent);
        setDbDriver(dbDriver);
        setDbHost(dbHost);
        setDbUser(dbUser);
        setDbPass(dbPass);
        setDbDb(dbDb);
        setDbPrefix(dbPrefix);
        setDbCharset(dbCharset);
        setAppMerge(appMerge);
        setStartDate(startDate);
        setDbPort(dbPort);
        setFinished(finished);
    }
}
