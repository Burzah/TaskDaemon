/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreTagsPermsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreTagsPerms extends TableImpl<CoreTagsPermsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_tags_perms</code>
     */
    public static final CoreTagsPerms CORE_TAGS_PERMS = new CoreTagsPerms();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreTagsPermsRecord> getRecordType() {
        return CoreTagsPermsRecord.class;
    }

    /**
     * The column
     * <code>paradise_forums.core_tags_perms.tag_perm_aai_lookup</code>.
     */
    public final TableField<CoreTagsPermsRecord, String> TAG_PERM_AAI_LOOKUP = createField(DSL.name("tag_perm_aai_lookup"), SQLDataType.CHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.CHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_tags_perms.tag_perm_aap_lookup</code>.
     */
    public final TableField<CoreTagsPermsRecord, String> TAG_PERM_AAP_LOOKUP = createField(DSL.name("tag_perm_aap_lookup"), SQLDataType.CHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.CHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_tags_perms.tag_perm_text</code>.
     */
    public final TableField<CoreTagsPermsRecord, String> TAG_PERM_TEXT = createField(DSL.name("tag_perm_text"), SQLDataType.VARCHAR(2000).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_tags_perms.tag_perm_visible</code>.
     */
    public final TableField<CoreTagsPermsRecord, Integer> TAG_PERM_VISIBLE = createField(DSL.name("tag_perm_visible"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("1", SQLDataType.INTEGER)), this, "");

    private CoreTagsPerms(Name alias, Table<CoreTagsPermsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreTagsPerms(Name alias, Table<CoreTagsPermsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_tags_perms</code> table
     * reference
     */
    public CoreTagsPerms(String alias) {
        this(DSL.name(alias), CORE_TAGS_PERMS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_tags_perms</code> table
     * reference
     */
    public CoreTagsPerms(Name alias) {
        this(alias, CORE_TAGS_PERMS);
    }

    /**
     * Create a <code>paradise_forums.core_tags_perms</code> table reference
     */
    public CoreTagsPerms() {
        this(DSL.name("core_tags_perms"), null);
    }

    public <O extends Record> CoreTagsPerms(Table<O> child, ForeignKey<O, CoreTagsPermsRecord> key) {
        super(child, key, CORE_TAGS_PERMS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_TAGS_PERMS_TAG_LOOKUP, Indexes.CORE_TAGS_PERMS_TAG_PERM_AAP_LOOKUP);
    }

    @Override
    public List<UniqueKey<CoreTagsPermsRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_CORE_TAGS_PERMS_TAG_PERM_AAI_LOOKUP);
    }

    @Override
    public CoreTagsPerms as(String alias) {
        return new CoreTagsPerms(DSL.name(alias), this);
    }

    @Override
    public CoreTagsPerms as(Name alias) {
        return new CoreTagsPerms(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreTagsPerms rename(String name) {
        return new CoreTagsPerms(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreTagsPerms rename(Name name) {
        return new CoreTagsPerms(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
