/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CalendarCalendarsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalendarCalendars extends TableImpl<CalendarCalendarsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.calendar_calendars</code>
     */
    public static final CalendarCalendars CALENDAR_CALENDARS = new CalendarCalendars();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalendarCalendarsRecord> getRecordType() {
        return CalendarCalendarsRecord.class;
    }

    /**
     * The column <code>paradise_forums.calendar_calendars.cal_id</code>.
     */
    public final TableField<CalendarCalendarsRecord, UInteger> CAL_ID = createField(DSL.name("cal_id"), SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.calendar_calendars.cal_moderate</code>.
     */
    public final TableField<CalendarCalendarsRecord, Byte> CAL_MODERATE = createField(DSL.name("cal_moderate"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.calendar_calendars.cal_position</code>.
     */
    public final TableField<CalendarCalendarsRecord, Integer> CAL_POSITION = createField(DSL.name("cal_position"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.calendar_calendars.cal_title_seo</code>.
     */
    public final TableField<CalendarCalendarsRecord, String> CAL_TITLE_SEO = createField(DSL.name("cal_title_seo"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_calendars.cal_comment_moderate</code>.
     */
    public final TableField<CalendarCalendarsRecord, Byte> CAL_COMMENT_MODERATE = createField(DSL.name("cal_comment_moderate"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.calendar_calendars.cal_color</code>. Hex
     * color code to represent this calendar
     */
    public final TableField<CalendarCalendarsRecord, String> CAL_COLOR = createField(DSL.name("cal_color"), SQLDataType.VARCHAR(7).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "Hex color code to represent this calendar");

    /**
     * The column
     * <code>paradise_forums.calendar_calendars.cal_allow_comments</code>.
     */
    public final TableField<CalendarCalendarsRecord, UByte> CAL_ALLOW_COMMENTS = createField(DSL.name("cal_allow_comments"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("1", SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_calendars.cal_allow_reviews</code>.
     */
    public final TableField<CalendarCalendarsRecord, UByte> CAL_ALLOW_REVIEWS = createField(DSL.name("cal_allow_reviews"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_calendars.cal_review_moderate</code>.
     */
    public final TableField<CalendarCalendarsRecord, UByte> CAL_REVIEW_MODERATE = createField(DSL.name("cal_review_moderate"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.calendar_calendars.cal_club_id</code>.
     * The club ID if this calendar belongs to a club, or NULL
     */
    public final TableField<CalendarCalendarsRecord, ULong> CAL_CLUB_ID = createField(DSL.name("cal_club_id"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.BIGINTUNSIGNED)), this, "The club ID if this calendar belongs to a club, or NULL");

    /**
     * The column
     * <code>paradise_forums.calendar_calendars.cal_bitoptions</code>.
     */
    public final TableField<CalendarCalendarsRecord, UInteger> CAL_BITOPTIONS = createField(DSL.name("cal_bitoptions"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_calendars.cal_calendar_bitoptions</code>.
     */
    public final TableField<CalendarCalendarsRecord, UInteger> CAL_CALENDAR_BITOPTIONS = createField(DSL.name("cal_calendar_bitoptions"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_calendars.cal_allow_anonymous</code>.
     */
    public final TableField<CalendarCalendarsRecord, UByte> CAL_ALLOW_ANONYMOUS = createField(DSL.name("cal_allow_anonymous"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "");

    private CalendarCalendars(Name alias, Table<CalendarCalendarsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CalendarCalendars(Name alias, Table<CalendarCalendarsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.calendar_calendars</code> table
     * reference
     */
    public CalendarCalendars(String alias) {
        this(DSL.name(alias), CALENDAR_CALENDARS);
    }

    /**
     * Create an aliased <code>paradise_forums.calendar_calendars</code> table
     * reference
     */
    public CalendarCalendars(Name alias) {
        this(alias, CALENDAR_CALENDARS);
    }

    /**
     * Create a <code>paradise_forums.calendar_calendars</code> table reference
     */
    public CalendarCalendars() {
        this(DSL.name("calendar_calendars"), null);
    }

    public <O extends Record> CalendarCalendars(Table<O> child, ForeignKey<O, CalendarCalendarsRecord> key) {
        super(child, key, CALENDAR_CALENDARS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public Identity<CalendarCalendarsRecord, UInteger> getIdentity() {
        return (Identity<CalendarCalendarsRecord, UInteger>) super.getIdentity();
    }

    @Override
    public UniqueKey<CalendarCalendarsRecord> getPrimaryKey() {
        return Keys.KEY_CALENDAR_CALENDARS_PRIMARY;
    }

    @Override
    public CalendarCalendars as(String alias) {
        return new CalendarCalendars(DSL.name(alias), this);
    }

    @Override
    public CalendarCalendars as(Name alias) {
        return new CalendarCalendars(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CalendarCalendars rename(String name) {
        return new CalendarCalendars(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CalendarCalendars rename(Name name) {
        return new CalendarCalendars(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<UInteger, Byte, Integer, String, Byte, String, UByte, UByte, UByte, ULong, UInteger, UInteger, UByte> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
