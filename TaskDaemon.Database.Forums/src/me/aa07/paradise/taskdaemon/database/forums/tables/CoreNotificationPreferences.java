/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreNotificationPreferencesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreNotificationPreferences extends TableImpl<CoreNotificationPreferencesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_notification_preferences</code>
     */
    public static final CoreNotificationPreferences CORE_NOTIFICATION_PREFERENCES = new CoreNotificationPreferences();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreNotificationPreferencesRecord> getRecordType() {
        return CoreNotificationPreferencesRecord.class;
    }

    /**
     * The column
     * <code>paradise_forums.core_notification_preferences.member_id</code>.
     * Member ID Number
     */
    public final TableField<CoreNotificationPreferencesRecord, ULong> MEMBER_ID = createField(DSL.name("member_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "Member ID Number");

    /**
     * The column
     * <code>paradise_forums.core_notification_preferences.notification_key</code>.
     * Key
     */
    public final TableField<CoreNotificationPreferencesRecord, String> NOTIFICATION_KEY = createField(DSL.name("notification_key"), SQLDataType.VARCHAR(100).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "Key");

    /**
     * The column
     * <code>paradise_forums.core_notification_preferences.preference</code>.
     * The chosen notification method(s)
     */
    public final TableField<CoreNotificationPreferencesRecord, String> PREFERENCE = createField(DSL.name("preference"), SQLDataType.VARCHAR(17).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "The chosen notification method(s)");

    private CoreNotificationPreferences(Name alias, Table<CoreNotificationPreferencesRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreNotificationPreferences(Name alias, Table<CoreNotificationPreferencesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>paradise_forums.core_notification_preferences</code> table
     * reference
     */
    public CoreNotificationPreferences(String alias) {
        this(DSL.name(alias), CORE_NOTIFICATION_PREFERENCES);
    }

    /**
     * Create an aliased
     * <code>paradise_forums.core_notification_preferences</code> table
     * reference
     */
    public CoreNotificationPreferences(Name alias) {
        this(alias, CORE_NOTIFICATION_PREFERENCES);
    }

    /**
     * Create a <code>paradise_forums.core_notification_preferences</code> table
     * reference
     */
    public CoreNotificationPreferences() {
        this(DSL.name("core_notification_preferences"), null);
    }

    public <O extends Record> CoreNotificationPreferences(Table<O> child, ForeignKey<O, CoreNotificationPreferencesRecord> key) {
        super(child, key, CORE_NOTIFICATION_PREFERENCES);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public UniqueKey<CoreNotificationPreferencesRecord> getPrimaryKey() {
        return Keys.KEY_CORE_NOTIFICATION_PREFERENCES_PRIMARY;
    }

    @Override
    public CoreNotificationPreferences as(String alias) {
        return new CoreNotificationPreferences(DSL.name(alias), this);
    }

    @Override
    public CoreNotificationPreferences as(Name alias) {
        return new CoreNotificationPreferences(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreNotificationPreferences rename(String name) {
        return new CoreNotificationPreferences(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreNotificationPreferences rename(Name name) {
        return new CoreNotificationPreferences(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<ULong, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
