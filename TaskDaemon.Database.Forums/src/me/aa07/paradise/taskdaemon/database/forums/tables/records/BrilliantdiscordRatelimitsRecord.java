/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.BrilliantdiscordRatelimits;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BrilliantdiscordRatelimitsRecord extends UpdatableRecordImpl<BrilliantdiscordRatelimitsRecord> implements Record7<ULong, String, String, Long, Long, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.brilliantdiscord_ratelimits.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.brilliantdiscord_ratelimits.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>paradise_forums.brilliantdiscord_ratelimits.endpoint</code>.
     */
    public void setEndpoint(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.brilliantdiscord_ratelimits.endpoint</code>.
     */
    public String getEndpoint() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>paradise_forums.brilliantdiscord_ratelimits.major_param</code>.
     */
    public void setMajorParam(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.brilliantdiscord_ratelimits.major_param</code>.
     */
    public String getMajorParam() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>paradise_forums.brilliantdiscord_ratelimits.limit</code>.
     */
    public void setLimit(Long value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.brilliantdiscord_ratelimits.limit</code>.
     */
    public Long getLimit() {
        return (Long) get(3);
    }

    /**
     * Setter for
     * <code>paradise_forums.brilliantdiscord_ratelimits.reset_time</code>.
     */
    public void setResetTime(Long value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.brilliantdiscord_ratelimits.reset_time</code>.
     */
    public Long getResetTime() {
        return (Long) get(4);
    }

    /**
     * Setter for
     * <code>paradise_forums.brilliantdiscord_ratelimits.remaining</code>.
     */
    public void setRemaining(Long value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.brilliantdiscord_ratelimits.remaining</code>.
     */
    public Long getRemaining() {
        return (Long) get(5);
    }

    /**
     * Setter for
     * <code>paradise_forums.brilliantdiscord_ratelimits.identifier</code>.
     */
    public void setIdentifier(String value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.brilliantdiscord_ratelimits.identifier</code>.
     */
    public String getIdentifier() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<ULong, String, String, Long, Long, Long, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<ULong, String, String, Long, Long, Long, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return BrilliantdiscordRatelimits.BRILLIANTDISCORD_RATELIMITS.ID;
    }

    @Override
    public Field<String> field2() {
        return BrilliantdiscordRatelimits.BRILLIANTDISCORD_RATELIMITS.ENDPOINT;
    }

    @Override
    public Field<String> field3() {
        return BrilliantdiscordRatelimits.BRILLIANTDISCORD_RATELIMITS.MAJOR_PARAM;
    }

    @Override
    public Field<Long> field4() {
        return BrilliantdiscordRatelimits.BRILLIANTDISCORD_RATELIMITS.LIMIT;
    }

    @Override
    public Field<Long> field5() {
        return BrilliantdiscordRatelimits.BRILLIANTDISCORD_RATELIMITS.RESET_TIME;
    }

    @Override
    public Field<Long> field6() {
        return BrilliantdiscordRatelimits.BRILLIANTDISCORD_RATELIMITS.REMAINING;
    }

    @Override
    public Field<String> field7() {
        return BrilliantdiscordRatelimits.BRILLIANTDISCORD_RATELIMITS.IDENTIFIER;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEndpoint();
    }

    @Override
    public String component3() {
        return getMajorParam();
    }

    @Override
    public Long component4() {
        return getLimit();
    }

    @Override
    public Long component5() {
        return getResetTime();
    }

    @Override
    public Long component6() {
        return getRemaining();
    }

    @Override
    public String component7() {
        return getIdentifier();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEndpoint();
    }

    @Override
    public String value3() {
        return getMajorParam();
    }

    @Override
    public Long value4() {
        return getLimit();
    }

    @Override
    public Long value5() {
        return getResetTime();
    }

    @Override
    public Long value6() {
        return getRemaining();
    }

    @Override
    public String value7() {
        return getIdentifier();
    }

    @Override
    public BrilliantdiscordRatelimitsRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public BrilliantdiscordRatelimitsRecord value2(String value) {
        setEndpoint(value);
        return this;
    }

    @Override
    public BrilliantdiscordRatelimitsRecord value3(String value) {
        setMajorParam(value);
        return this;
    }

    @Override
    public BrilliantdiscordRatelimitsRecord value4(Long value) {
        setLimit(value);
        return this;
    }

    @Override
    public BrilliantdiscordRatelimitsRecord value5(Long value) {
        setResetTime(value);
        return this;
    }

    @Override
    public BrilliantdiscordRatelimitsRecord value6(Long value) {
        setRemaining(value);
        return this;
    }

    @Override
    public BrilliantdiscordRatelimitsRecord value7(String value) {
        setIdentifier(value);
        return this;
    }

    @Override
    public BrilliantdiscordRatelimitsRecord values(ULong value1, String value2, String value3, Long value4, Long value5, Long value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BrilliantdiscordRatelimitsRecord
     */
    public BrilliantdiscordRatelimitsRecord() {
        super(BrilliantdiscordRatelimits.BRILLIANTDISCORD_RATELIMITS);
    }

    /**
     * Create a detached, initialised BrilliantdiscordRatelimitsRecord
     */
    public BrilliantdiscordRatelimitsRecord(ULong id, String endpoint, String majorParam, Long limit, Long resetTime, Long remaining, String identifier) {
        super(BrilliantdiscordRatelimits.BRILLIANTDISCORD_RATELIMITS);

        setId(id);
        setEndpoint(endpoint);
        setMajorParam(majorParam);
        setLimit(limit);
        setResetTime(resetTime);
        setRemaining(remaining);
        setIdentifier(identifier);
    }
}
