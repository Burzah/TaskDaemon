/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMenuRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreMenu extends TableImpl<CoreMenuRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_menu</code>
     */
    public static final CoreMenu CORE_MENU = new CoreMenu();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreMenuRecord> getRecordType() {
        return CoreMenuRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_menu.id</code>. ID Number
     */
    public final TableField<CoreMenuRecord, ULong> ID = createField(DSL.name("id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "ID Number");

    /**
     * The column <code>paradise_forums.core_menu.app</code>. The application
     * key for the item
     */
    public final TableField<CoreMenuRecord, String> APP = createField(DSL.name("app"), SQLDataType.VARCHAR(250).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "The application key for the item");

    /**
     * The column <code>paradise_forums.core_menu.extension</code>. The
     * FrontNavigation extension key
     */
    public final TableField<CoreMenuRecord, String> EXTENSION = createField(DSL.name("extension"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "The FrontNavigation extension key");

    /**
     * The column <code>paradise_forums.core_menu.config</code>. Any additional
     * configuration
     */
    public final TableField<CoreMenuRecord, String> CONFIG = createField(DSL.name("config"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "Any additional configuration");

    /**
     * The column <code>paradise_forums.core_menu.position</code>. This item's
     * position within the bar
     */
    public final TableField<CoreMenuRecord, UInteger> POSITION = createField(DSL.name("position"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("1", SQLDataType.INTEGERUNSIGNED)), this, "This item's position within the bar");

    /**
     * The column <code>paradise_forums.core_menu.parent</code>. The ID of the
     * parent item if this is on the second bar, or NULL if the first bar
     */
    public final TableField<CoreMenuRecord, UInteger> PARENT = createField(DSL.name("parent"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.INTEGERUNSIGNED)), this, "The ID of the parent item if this is on the second bar, or NULL if the first bar");

    /**
     * The column <code>paradise_forums.core_menu.permissions</code>.
     * Comma-delimited list of group IDs, or * for all, NULL to inherit
     */
    public final TableField<CoreMenuRecord, String> PERMISSIONS = createField(DSL.name("permissions"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "Comma-delimited list of group IDs, or * for all, NULL to inherit");

    /**
     * The column <code>paradise_forums.core_menu.is_menu_child</code>. If this
     * item is a child of a dropdown menu
     */
    public final TableField<CoreMenuRecord, UByte> IS_MENU_CHILD = createField(DSL.name("is_menu_child"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "If this item is a child of a dropdown menu");

    private CoreMenu(Name alias, Table<CoreMenuRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreMenu(Name alias, Table<CoreMenuRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_menu</code> table reference
     */
    public CoreMenu(String alias) {
        this(DSL.name(alias), CORE_MENU);
    }

    /**
     * Create an aliased <code>paradise_forums.core_menu</code> table reference
     */
    public CoreMenu(Name alias) {
        this(alias, CORE_MENU);
    }

    /**
     * Create a <code>paradise_forums.core_menu</code> table reference
     */
    public CoreMenu() {
        this(DSL.name("core_menu"), null);
    }

    public <O extends Record> CoreMenu(Table<O> child, ForeignKey<O, CoreMenuRecord> key) {
        super(child, key, CORE_MENU);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public Identity<CoreMenuRecord, ULong> getIdentity() {
        return (Identity<CoreMenuRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreMenuRecord> getPrimaryKey() {
        return Keys.KEY_CORE_MENU_PRIMARY;
    }

    @Override
    public CoreMenu as(String alias) {
        return new CoreMenu(DSL.name(alias), this);
    }

    @Override
    public CoreMenu as(Name alias) {
        return new CoreMenu(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMenu rename(String name) {
        return new CoreMenu(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMenu rename(Name name) {
        return new CoreMenu(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<ULong, String, String, String, UInteger, UInteger, String, UByte> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
