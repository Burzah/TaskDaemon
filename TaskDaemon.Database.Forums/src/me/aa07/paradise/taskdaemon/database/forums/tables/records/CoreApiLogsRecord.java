/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreApiLogs;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreApiLogsRecord extends UpdatableRecordImpl<CoreApiLogsRecord> implements Record13<ULong, String, String, String, String, String, String, String, Integer, UByte, String, ULong, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_api_logs.id</code>. ID Number
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_api_logs.id</code>. ID Number
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_api_logs.endpoint</code>. The
     * endpoint that was requested
     */
    public void setEndpoint(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_api_logs.endpoint</code>. The
     * endpoint that was requested
     */
    public String getEndpoint() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_api_logs.method</code>. The HTTP
     * request method which was used
     */
    public void setMethod(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_api_logs.method</code>. The HTTP
     * request method which was used
     */
    public String getMethod() {
        return (String) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_api_logs.api_key</code>. The API
     * key that was used
     */
    public void setApiKey(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_api_logs.api_key</code>. The API
     * key that was used
     */
    public String getApiKey() {
        return (String) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_api_logs.ip_address</code>. The IP
     * address that the request came from
     */
    public void setIpAddress(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_api_logs.ip_address</code>. The IP
     * address that the request came from
     */
    public String getIpAddress() {
        return (String) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_api_logs.request_data</code>. The
     * request body
     */
    public void setRequestData(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_api_logs.request_data</code>. The
     * request body
     */
    public String getRequestData() {
        return (String) get(5);
    }

    /**
     * Setter for <code>paradise_forums.core_api_logs.response_code</code>. The
     * HTTP response code
     */
    public void setResponseCode(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.core_api_logs.response_code</code>. The
     * HTTP response code
     */
    public String getResponseCode() {
        return (String) get(6);
    }

    /**
     * Setter for <code>paradise_forums.core_api_logs.response_output</code>.
     * The response output
     */
    public void setResponseOutput(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>paradise_forums.core_api_logs.response_output</code>.
     * The response output
     */
    public String getResponseOutput() {
        return (String) get(7);
    }

    /**
     * Setter for <code>paradise_forums.core_api_logs.date</code>. Timestamp of
     * when request was made
     */
    public void setDate(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>paradise_forums.core_api_logs.date</code>. Timestamp of
     * when request was made
     */
    public Integer getDate() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>paradise_forums.core_api_logs.is_bad_key</code>. If this
     * log is for a request with a bad key - used to prevent brute force 
     */
    public void setIsBadKey(UByte value) {
        set(9, value);
    }

    /**
     * Getter for <code>paradise_forums.core_api_logs.is_bad_key</code>. If this
     * log is for a request with a bad key - used to prevent brute force 
     */
    public UByte getIsBadKey() {
        return (UByte) get(9);
    }

    /**
     * Setter for <code>paradise_forums.core_api_logs.client_id</code>. The
     * OAuth client ID, if applicable
     */
    public void setClientId(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>paradise_forums.core_api_logs.client_id</code>. The
     * OAuth client ID, if applicable
     */
    public String getClientId() {
        return (String) get(10);
    }

    /**
     * Setter for <code>paradise_forums.core_api_logs.member_id</code>. The
     * authorized use's member ID, if applicable
     */
    public void setMemberId(ULong value) {
        set(11, value);
    }

    /**
     * Getter for <code>paradise_forums.core_api_logs.member_id</code>. The
     * authorized use's member ID, if applicable
     */
    public ULong getMemberId() {
        return (ULong) get(11);
    }

    /**
     * Setter for <code>paradise_forums.core_api_logs.access_token</code>. The
     * raw access token that was used
     */
    public void setAccessToken(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>paradise_forums.core_api_logs.access_token</code>. The
     * raw access token that was used
     */
    public String getAccessToken() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<ULong, String, String, String, String, String, String, String, Integer, UByte, String, ULong, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<ULong, String, String, String, String, String, String, String, Integer, UByte, String, ULong, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CoreApiLogs.CORE_API_LOGS.ID;
    }

    @Override
    public Field<String> field2() {
        return CoreApiLogs.CORE_API_LOGS.ENDPOINT;
    }

    @Override
    public Field<String> field3() {
        return CoreApiLogs.CORE_API_LOGS.METHOD;
    }

    @Override
    public Field<String> field4() {
        return CoreApiLogs.CORE_API_LOGS.API_KEY;
    }

    @Override
    public Field<String> field5() {
        return CoreApiLogs.CORE_API_LOGS.IP_ADDRESS;
    }

    @Override
    public Field<String> field6() {
        return CoreApiLogs.CORE_API_LOGS.REQUEST_DATA;
    }

    @Override
    public Field<String> field7() {
        return CoreApiLogs.CORE_API_LOGS.RESPONSE_CODE;
    }

    @Override
    public Field<String> field8() {
        return CoreApiLogs.CORE_API_LOGS.RESPONSE_OUTPUT;
    }

    @Override
    public Field<Integer> field9() {
        return CoreApiLogs.CORE_API_LOGS.DATE;
    }

    @Override
    public Field<UByte> field10() {
        return CoreApiLogs.CORE_API_LOGS.IS_BAD_KEY;
    }

    @Override
    public Field<String> field11() {
        return CoreApiLogs.CORE_API_LOGS.CLIENT_ID;
    }

    @Override
    public Field<ULong> field12() {
        return CoreApiLogs.CORE_API_LOGS.MEMBER_ID;
    }

    @Override
    public Field<String> field13() {
        return CoreApiLogs.CORE_API_LOGS.ACCESS_TOKEN;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEndpoint();
    }

    @Override
    public String component3() {
        return getMethod();
    }

    @Override
    public String component4() {
        return getApiKey();
    }

    @Override
    public String component5() {
        return getIpAddress();
    }

    @Override
    public String component6() {
        return getRequestData();
    }

    @Override
    public String component7() {
        return getResponseCode();
    }

    @Override
    public String component8() {
        return getResponseOutput();
    }

    @Override
    public Integer component9() {
        return getDate();
    }

    @Override
    public UByte component10() {
        return getIsBadKey();
    }

    @Override
    public String component11() {
        return getClientId();
    }

    @Override
    public ULong component12() {
        return getMemberId();
    }

    @Override
    public String component13() {
        return getAccessToken();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEndpoint();
    }

    @Override
    public String value3() {
        return getMethod();
    }

    @Override
    public String value4() {
        return getApiKey();
    }

    @Override
    public String value5() {
        return getIpAddress();
    }

    @Override
    public String value6() {
        return getRequestData();
    }

    @Override
    public String value7() {
        return getResponseCode();
    }

    @Override
    public String value8() {
        return getResponseOutput();
    }

    @Override
    public Integer value9() {
        return getDate();
    }

    @Override
    public UByte value10() {
        return getIsBadKey();
    }

    @Override
    public String value11() {
        return getClientId();
    }

    @Override
    public ULong value12() {
        return getMemberId();
    }

    @Override
    public String value13() {
        return getAccessToken();
    }

    @Override
    public CoreApiLogsRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public CoreApiLogsRecord value2(String value) {
        setEndpoint(value);
        return this;
    }

    @Override
    public CoreApiLogsRecord value3(String value) {
        setMethod(value);
        return this;
    }

    @Override
    public CoreApiLogsRecord value4(String value) {
        setApiKey(value);
        return this;
    }

    @Override
    public CoreApiLogsRecord value5(String value) {
        setIpAddress(value);
        return this;
    }

    @Override
    public CoreApiLogsRecord value6(String value) {
        setRequestData(value);
        return this;
    }

    @Override
    public CoreApiLogsRecord value7(String value) {
        setResponseCode(value);
        return this;
    }

    @Override
    public CoreApiLogsRecord value8(String value) {
        setResponseOutput(value);
        return this;
    }

    @Override
    public CoreApiLogsRecord value9(Integer value) {
        setDate(value);
        return this;
    }

    @Override
    public CoreApiLogsRecord value10(UByte value) {
        setIsBadKey(value);
        return this;
    }

    @Override
    public CoreApiLogsRecord value11(String value) {
        setClientId(value);
        return this;
    }

    @Override
    public CoreApiLogsRecord value12(ULong value) {
        setMemberId(value);
        return this;
    }

    @Override
    public CoreApiLogsRecord value13(String value) {
        setAccessToken(value);
        return this;
    }

    @Override
    public CoreApiLogsRecord values(ULong value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, Integer value9, UByte value10, String value11, ULong value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreApiLogsRecord
     */
    public CoreApiLogsRecord() {
        super(CoreApiLogs.CORE_API_LOGS);
    }

    /**
     * Create a detached, initialised CoreApiLogsRecord
     */
    public CoreApiLogsRecord(ULong id, String endpoint, String method, String apiKey, String ipAddress, String requestData, String responseCode, String responseOutput, Integer date, UByte isBadKey, String clientId, ULong memberId, String accessToken) {
        super(CoreApiLogs.CORE_API_LOGS);

        setId(id);
        setEndpoint(endpoint);
        setMethod(method);
        setApiKey(apiKey);
        setIpAddress(ipAddress);
        setRequestData(requestData);
        setResponseCode(responseCode);
        setResponseOutput(responseOutput);
        setDate(date);
        setIsBadKey(isBadKey);
        setClientId(clientId);
        setMemberId(memberId);
        setAccessToken(accessToken);
    }
}
