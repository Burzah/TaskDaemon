/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreProfileCompletionRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreProfileCompletion extends TableImpl<CoreProfileCompletionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_profile_completion</code>
     */
    public static final CoreProfileCompletion CORE_PROFILE_COMPLETION = new CoreProfileCompletion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreProfileCompletionRecord> getRecordType() {
        return CoreProfileCompletionRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_profile_completion.id</code>. ID
     * Number
     */
    public final TableField<CoreProfileCompletionRecord, ULong> ID = createField(DSL.name("id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "ID Number");

    /**
     * The column
     * <code>paradise_forums.core_profile_completion.member_id</code>.
     */
    public final TableField<CoreProfileCompletionRecord, Long> MEMBER_ID = createField(DSL.name("member_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>paradise_forums.core_profile_completion.step_id</code>.
     */
    public final TableField<CoreProfileCompletionRecord, Integer> STEP_ID = createField(DSL.name("step_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_profile_completion.completed</code>.
     */
    public final TableField<CoreProfileCompletionRecord, Integer> COMPLETED = createField(DSL.name("completed"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "");

    private CoreProfileCompletion(Name alias, Table<CoreProfileCompletionRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreProfileCompletion(Name alias, Table<CoreProfileCompletionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_profile_completion</code>
     * table reference
     */
    public CoreProfileCompletion(String alias) {
        this(DSL.name(alias), CORE_PROFILE_COMPLETION);
    }

    /**
     * Create an aliased <code>paradise_forums.core_profile_completion</code>
     * table reference
     */
    public CoreProfileCompletion(Name alias) {
        this(alias, CORE_PROFILE_COMPLETION);
    }

    /**
     * Create a <code>paradise_forums.core_profile_completion</code> table
     * reference
     */
    public CoreProfileCompletion() {
        this(DSL.name("core_profile_completion"), null);
    }

    public <O extends Record> CoreProfileCompletion(Table<O> child, ForeignKey<O, CoreProfileCompletionRecord> key) {
        super(child, key, CORE_PROFILE_COMPLETION);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_PROFILE_COMPLETION_MEMBER_ID, Indexes.CORE_PROFILE_COMPLETION_STEP_ID);
    }

    @Override
    public Identity<CoreProfileCompletionRecord, ULong> getIdentity() {
        return (Identity<CoreProfileCompletionRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreProfileCompletionRecord> getPrimaryKey() {
        return Keys.KEY_CORE_PROFILE_COMPLETION_PRIMARY;
    }

    @Override
    public CoreProfileCompletion as(String alias) {
        return new CoreProfileCompletion(DSL.name(alias), this);
    }

    @Override
    public CoreProfileCompletion as(Name alias) {
        return new CoreProfileCompletion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreProfileCompletion rename(String name) {
        return new CoreProfileCompletion(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreProfileCompletion rename(Name name) {
        return new CoreProfileCompletion(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<ULong, Long, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
