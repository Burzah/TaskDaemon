/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSysLangRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreSysLang extends TableImpl<CoreSysLangRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_sys_lang</code>
     */
    public static final CoreSysLang CORE_SYS_LANG = new CoreSysLang();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreSysLangRecord> getRecordType() {
        return CoreSysLangRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_sys_lang.lang_id</code>.
     */
    public final TableField<CoreSysLangRecord, UInteger> LANG_ID = createField(DSL.name("lang_id"), SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_sys_lang.lang_short</code>.
     */
    public final TableField<CoreSysLangRecord, String> LANG_SHORT = createField(DSL.name("lang_short"), SQLDataType.VARCHAR(100).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_sys_lang.lang_title</code>.
     */
    public final TableField<CoreSysLangRecord, String> LANG_TITLE = createField(DSL.name("lang_title"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_sys_lang.lang_default</code>.
     */
    public final TableField<CoreSysLangRecord, UByte> LANG_DEFAULT = createField(DSL.name("lang_default"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_sys_lang.lang_isrtl</code>.
     */
    public final TableField<CoreSysLangRecord, UByte> LANG_ISRTL = createField(DSL.name("lang_isrtl"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_sys_lang.lang_protected</code>.
     */
    public final TableField<CoreSysLangRecord, Byte> LANG_PROTECTED = createField(DSL.name("lang_protected"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.core_sys_lang.lang_order</code>.
     */
    public final TableField<CoreSysLangRecord, UInteger> LANG_ORDER = createField(DSL.name("lang_order"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_sys_lang.lang_enabled</code>.
     * Indicates if the language is enabled
     */
    public final TableField<CoreSysLangRecord, Boolean> LANG_ENABLED = createField(DSL.name("lang_enabled"), SQLDataType.BIT.nullable(false).defaultValue(DSL.inline("b'1'", SQLDataType.BIT)), this, "Indicates if the language is enabled");

    /**
     * The column <code>paradise_forums.core_sys_lang.lang_update_url</code>.
     */
    public final TableField<CoreSysLangRecord, String> LANG_UPDATE_URL = createField(DSL.name("lang_update_url"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_sys_lang.lang_update_check</code>.
     */
    public final TableField<CoreSysLangRecord, Long> LANG_UPDATE_CHECK = createField(DSL.name("lang_update_check"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>paradise_forums.core_sys_lang.lang_version</code>.
     */
    public final TableField<CoreSysLangRecord, String> LANG_VERSION = createField(DSL.name("lang_version"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_sys_lang.lang_version_long</code>.
     */
    public final TableField<CoreSysLangRecord, Integer> LANG_VERSION_LONG = createField(DSL.name("lang_version_long"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_sys_lang.lang_update_data</code>.
     */
    public final TableField<CoreSysLangRecord, String> LANG_UPDATE_DATA = createField(DSL.name("lang_update_data"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_sys_lang.lang_author_name</code>.
     */
    public final TableField<CoreSysLangRecord, String> LANG_AUTHOR_NAME = createField(DSL.name("lang_author_name"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_sys_lang.lang_author_url</code>.
     */
    public final TableField<CoreSysLangRecord, String> LANG_AUTHOR_URL = createField(DSL.name("lang_author_url"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    private CoreSysLang(Name alias, Table<CoreSysLangRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreSysLang(Name alias, Table<CoreSysLangRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_sys_lang</code> table
     * reference
     */
    public CoreSysLang(String alias) {
        this(DSL.name(alias), CORE_SYS_LANG);
    }

    /**
     * Create an aliased <code>paradise_forums.core_sys_lang</code> table
     * reference
     */
    public CoreSysLang(Name alias) {
        this(alias, CORE_SYS_LANG);
    }

    /**
     * Create a <code>paradise_forums.core_sys_lang</code> table reference
     */
    public CoreSysLang() {
        this(DSL.name("core_sys_lang"), null);
    }

    public <O extends Record> CoreSysLang(Table<O> child, ForeignKey<O, CoreSysLangRecord> key) {
        super(child, key, CORE_SYS_LANG);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_SYS_LANG_LANG_DEFAULT, Indexes.CORE_SYS_LANG_LANG_ORDER, Indexes.CORE_SYS_LANG_LANG_SHORT);
    }

    @Override
    public Identity<CoreSysLangRecord, UInteger> getIdentity() {
        return (Identity<CoreSysLangRecord, UInteger>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreSysLangRecord> getPrimaryKey() {
        return Keys.KEY_CORE_SYS_LANG_PRIMARY;
    }

    @Override
    public CoreSysLang as(String alias) {
        return new CoreSysLang(DSL.name(alias), this);
    }

    @Override
    public CoreSysLang as(Name alias) {
        return new CoreSysLang(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreSysLang rename(String name) {
        return new CoreSysLang(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreSysLang rename(Name name) {
        return new CoreSysLang(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<UInteger, String, String, UByte, UByte, Byte, UInteger, Boolean, String, Long, String, Integer, String, String, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
