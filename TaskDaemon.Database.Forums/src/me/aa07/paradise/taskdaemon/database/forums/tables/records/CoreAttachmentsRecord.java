/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.enums.CoreAttachmentsAttachModerationStatus;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAttachments;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreAttachmentsRecord extends UpdatableRecordImpl<CoreAttachmentsRecord> implements Record20<Integer, String, String, String, String, Short, Short, Byte, Integer, Integer, String, ULong, Integer, Integer, Integer, Integer, String, String, CoreAttachmentsAttachModerationStatus, Short> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_attachments.attach_id</code>.
     */
    public void setAttachId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_attachments.attach_id</code>.
     */
    public Integer getAttachId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_attachments.attach_ext</code>.
     */
    public void setAttachExt(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_attachments.attach_ext</code>.
     */
    public String getAttachExt() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_attachments.attach_file</code>.
     */
    public void setAttachFile(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_attachments.attach_file</code>.
     */
    public String getAttachFile() {
        return (String) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_attachments.attach_location</code>.
     */
    public void setAttachLocation(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_attachments.attach_location</code>.
     */
    public String getAttachLocation() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_attachments.attach_thumb_location</code>.
     */
    public void setAttachThumbLocation(String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_attachments.attach_thumb_location</code>.
     */
    public String getAttachThumbLocation() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_attachments.attach_thumb_width</code>.
     */
    public void setAttachThumbWidth(Short value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_attachments.attach_thumb_width</code>.
     */
    public Short getAttachThumbWidth() {
        return (Short) get(5);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_attachments.attach_thumb_height</code>.
     */
    public void setAttachThumbHeight(Short value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_attachments.attach_thumb_height</code>.
     */
    public Short getAttachThumbHeight() {
        return (Short) get(6);
    }

    /**
     * Setter for <code>paradise_forums.core_attachments.attach_is_image</code>.
     */
    public void setAttachIsImage(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>paradise_forums.core_attachments.attach_is_image</code>.
     */
    public Byte getAttachIsImage() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>paradise_forums.core_attachments.attach_hits</code>.
     */
    public void setAttachHits(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>paradise_forums.core_attachments.attach_hits</code>.
     */
    public Integer getAttachHits() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>paradise_forums.core_attachments.attach_date</code>.
     */
    public void setAttachDate(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>paradise_forums.core_attachments.attach_date</code>.
     */
    public Integer getAttachDate() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>paradise_forums.core_attachments.attach_post_key</code>.
     */
    public void setAttachPostKey(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>paradise_forums.core_attachments.attach_post_key</code>.
     */
    public String getAttachPostKey() {
        return (String) get(10);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_attachments.attach_member_id</code>.
     */
    public void setAttachMemberId(ULong value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_attachments.attach_member_id</code>.
     */
    public ULong getAttachMemberId() {
        return (ULong) get(11);
    }

    /**
     * Setter for <code>paradise_forums.core_attachments.attach_filesize</code>.
     */
    public void setAttachFilesize(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>paradise_forums.core_attachments.attach_filesize</code>.
     */
    public Integer getAttachFilesize() {
        return (Integer) get(12);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_attachments.attach_img_width</code>.
     */
    public void setAttachImgWidth(Integer value) {
        set(13, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_attachments.attach_img_width</code>.
     */
    public Integer getAttachImgWidth() {
        return (Integer) get(13);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_attachments.attach_img_height</code>.
     */
    public void setAttachImgHeight(Integer value) {
        set(14, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_attachments.attach_img_height</code>.
     */
    public Integer getAttachImgHeight() {
        return (Integer) get(14);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_attachments.attach_is_archived</code>.
     */
    public void setAttachIsArchived(Integer value) {
        set(15, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_attachments.attach_is_archived</code>.
     */
    public Integer getAttachIsArchived() {
        return (Integer) get(15);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_attachments.attach_security_key</code>.
     * Security key for this attachment that will be checked when viewing.
     */
    public void setAttachSecurityKey(String value) {
        set(16, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_attachments.attach_security_key</code>.
     * Security key for this attachment that will be checked when viewing.
     */
    public String getAttachSecurityKey() {
        return (String) get(16);
    }

    /**
     * Setter for <code>paradise_forums.core_attachments.attach_labels</code>.
     * Labels from image scanner
     */
    public void setAttachLabels(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>paradise_forums.core_attachments.attach_labels</code>.
     * Labels from image scanner
     */
    public String getAttachLabels() {
        return (String) get(17);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_attachments.attach_moderation_status</code>.
     * If this attachment has been flagged for moderation by the image scanner,
     * the status of that
     */
    public void setAttachModerationStatus(CoreAttachmentsAttachModerationStatus value) {
        set(18, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_attachments.attach_moderation_status</code>.
     * If this attachment has been flagged for moderation by the image scanner,
     * the status of that
     */
    public CoreAttachmentsAttachModerationStatus getAttachModerationStatus() {
        return (CoreAttachmentsAttachModerationStatus) get(18);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_attachments.attach_img_rotate</code>.
     */
    public void setAttachImgRotate(Short value) {
        set(19, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_attachments.attach_img_rotate</code>.
     */
    public Short getAttachImgRotate() {
        return (Short) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row20<Integer, String, String, String, String, Short, Short, Byte, Integer, Integer, String, ULong, Integer, Integer, Integer, Integer, String, String, CoreAttachmentsAttachModerationStatus, Short> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    @Override
    public Row20<Integer, String, String, String, String, Short, Short, Byte, Integer, Integer, String, ULong, Integer, Integer, Integer, Integer, String, String, CoreAttachmentsAttachModerationStatus, Short> valuesRow() {
        return (Row20) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_ID;
    }

    @Override
    public Field<String> field2() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_EXT;
    }

    @Override
    public Field<String> field3() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_FILE;
    }

    @Override
    public Field<String> field4() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_LOCATION;
    }

    @Override
    public Field<String> field5() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_THUMB_LOCATION;
    }

    @Override
    public Field<Short> field6() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_THUMB_WIDTH;
    }

    @Override
    public Field<Short> field7() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_THUMB_HEIGHT;
    }

    @Override
    public Field<Byte> field8() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_IS_IMAGE;
    }

    @Override
    public Field<Integer> field9() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_HITS;
    }

    @Override
    public Field<Integer> field10() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_DATE;
    }

    @Override
    public Field<String> field11() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_POST_KEY;
    }

    @Override
    public Field<ULong> field12() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_MEMBER_ID;
    }

    @Override
    public Field<Integer> field13() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_FILESIZE;
    }

    @Override
    public Field<Integer> field14() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_IMG_WIDTH;
    }

    @Override
    public Field<Integer> field15() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_IMG_HEIGHT;
    }

    @Override
    public Field<Integer> field16() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_IS_ARCHIVED;
    }

    @Override
    public Field<String> field17() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_SECURITY_KEY;
    }

    @Override
    public Field<String> field18() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_LABELS;
    }

    @Override
    public Field<CoreAttachmentsAttachModerationStatus> field19() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_MODERATION_STATUS;
    }

    @Override
    public Field<Short> field20() {
        return CoreAttachments.CORE_ATTACHMENTS.ATTACH_IMG_ROTATE;
    }

    @Override
    public Integer component1() {
        return getAttachId();
    }

    @Override
    public String component2() {
        return getAttachExt();
    }

    @Override
    public String component3() {
        return getAttachFile();
    }

    @Override
    public String component4() {
        return getAttachLocation();
    }

    @Override
    public String component5() {
        return getAttachThumbLocation();
    }

    @Override
    public Short component6() {
        return getAttachThumbWidth();
    }

    @Override
    public Short component7() {
        return getAttachThumbHeight();
    }

    @Override
    public Byte component8() {
        return getAttachIsImage();
    }

    @Override
    public Integer component9() {
        return getAttachHits();
    }

    @Override
    public Integer component10() {
        return getAttachDate();
    }

    @Override
    public String component11() {
        return getAttachPostKey();
    }

    @Override
    public ULong component12() {
        return getAttachMemberId();
    }

    @Override
    public Integer component13() {
        return getAttachFilesize();
    }

    @Override
    public Integer component14() {
        return getAttachImgWidth();
    }

    @Override
    public Integer component15() {
        return getAttachImgHeight();
    }

    @Override
    public Integer component16() {
        return getAttachIsArchived();
    }

    @Override
    public String component17() {
        return getAttachSecurityKey();
    }

    @Override
    public String component18() {
        return getAttachLabels();
    }

    @Override
    public CoreAttachmentsAttachModerationStatus component19() {
        return getAttachModerationStatus();
    }

    @Override
    public Short component20() {
        return getAttachImgRotate();
    }

    @Override
    public Integer value1() {
        return getAttachId();
    }

    @Override
    public String value2() {
        return getAttachExt();
    }

    @Override
    public String value3() {
        return getAttachFile();
    }

    @Override
    public String value4() {
        return getAttachLocation();
    }

    @Override
    public String value5() {
        return getAttachThumbLocation();
    }

    @Override
    public Short value6() {
        return getAttachThumbWidth();
    }

    @Override
    public Short value7() {
        return getAttachThumbHeight();
    }

    @Override
    public Byte value8() {
        return getAttachIsImage();
    }

    @Override
    public Integer value9() {
        return getAttachHits();
    }

    @Override
    public Integer value10() {
        return getAttachDate();
    }

    @Override
    public String value11() {
        return getAttachPostKey();
    }

    @Override
    public ULong value12() {
        return getAttachMemberId();
    }

    @Override
    public Integer value13() {
        return getAttachFilesize();
    }

    @Override
    public Integer value14() {
        return getAttachImgWidth();
    }

    @Override
    public Integer value15() {
        return getAttachImgHeight();
    }

    @Override
    public Integer value16() {
        return getAttachIsArchived();
    }

    @Override
    public String value17() {
        return getAttachSecurityKey();
    }

    @Override
    public String value18() {
        return getAttachLabels();
    }

    @Override
    public CoreAttachmentsAttachModerationStatus value19() {
        return getAttachModerationStatus();
    }

    @Override
    public Short value20() {
        return getAttachImgRotate();
    }

    @Override
    public CoreAttachmentsRecord value1(Integer value) {
        setAttachId(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value2(String value) {
        setAttachExt(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value3(String value) {
        setAttachFile(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value4(String value) {
        setAttachLocation(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value5(String value) {
        setAttachThumbLocation(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value6(Short value) {
        setAttachThumbWidth(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value7(Short value) {
        setAttachThumbHeight(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value8(Byte value) {
        setAttachIsImage(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value9(Integer value) {
        setAttachHits(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value10(Integer value) {
        setAttachDate(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value11(String value) {
        setAttachPostKey(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value12(ULong value) {
        setAttachMemberId(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value13(Integer value) {
        setAttachFilesize(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value14(Integer value) {
        setAttachImgWidth(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value15(Integer value) {
        setAttachImgHeight(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value16(Integer value) {
        setAttachIsArchived(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value17(String value) {
        setAttachSecurityKey(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value18(String value) {
        setAttachLabels(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value19(CoreAttachmentsAttachModerationStatus value) {
        setAttachModerationStatus(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord value20(Short value) {
        setAttachImgRotate(value);
        return this;
    }

    @Override
    public CoreAttachmentsRecord values(Integer value1, String value2, String value3, String value4, String value5, Short value6, Short value7, Byte value8, Integer value9, Integer value10, String value11, ULong value12, Integer value13, Integer value14, Integer value15, Integer value16, String value17, String value18, CoreAttachmentsAttachModerationStatus value19, Short value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreAttachmentsRecord
     */
    public CoreAttachmentsRecord() {
        super(CoreAttachments.CORE_ATTACHMENTS);
    }

    /**
     * Create a detached, initialised CoreAttachmentsRecord
     */
    public CoreAttachmentsRecord(Integer attachId, String attachExt, String attachFile, String attachLocation, String attachThumbLocation, Short attachThumbWidth, Short attachThumbHeight, Byte attachIsImage, Integer attachHits, Integer attachDate, String attachPostKey, ULong attachMemberId, Integer attachFilesize, Integer attachImgWidth, Integer attachImgHeight, Integer attachIsArchived, String attachSecurityKey, String attachLabels, CoreAttachmentsAttachModerationStatus attachModerationStatus, Short attachImgRotate) {
        super(CoreAttachments.CORE_ATTACHMENTS);

        setAttachId(attachId);
        setAttachExt(attachExt);
        setAttachFile(attachFile);
        setAttachLocation(attachLocation);
        setAttachThumbLocation(attachThumbLocation);
        setAttachThumbWidth(attachThumbWidth);
        setAttachThumbHeight(attachThumbHeight);
        setAttachIsImage(attachIsImage);
        setAttachHits(attachHits);
        setAttachDate(attachDate);
        setAttachPostKey(attachPostKey);
        setAttachMemberId(attachMemberId);
        setAttachFilesize(attachFilesize);
        setAttachImgWidth(attachImgWidth);
        setAttachImgHeight(attachImgHeight);
        setAttachIsArchived(attachIsArchived);
        setAttachSecurityKey(attachSecurityKey);
        setAttachLabels(attachLabels);
        setAttachModerationStatus(attachModerationStatus);
        setAttachImgRotate(attachImgRotate);
    }
}
