/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreUpgradeHistoryRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreUpgradeHistory extends TableImpl<CoreUpgradeHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_upgrade_history</code>
     */
    public static final CoreUpgradeHistory CORE_UPGRADE_HISTORY = new CoreUpgradeHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreUpgradeHistoryRecord> getRecordType() {
        return CoreUpgradeHistoryRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_upgrade_history.upgrade_id</code>.
     */
    public final TableField<CoreUpgradeHistoryRecord, Integer> UPGRADE_ID = createField(DSL.name("upgrade_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.core_upgrade_history.upgrade_version_id</code>.
     */
    public final TableField<CoreUpgradeHistoryRecord, Integer> UPGRADE_VERSION_ID = createField(DSL.name("upgrade_version_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_upgrade_history.upgrade_version_human</code>.
     */
    public final TableField<CoreUpgradeHistoryRecord, String> UPGRADE_VERSION_HUMAN = createField(DSL.name("upgrade_version_human"), SQLDataType.VARCHAR(200).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_upgrade_history.upgrade_date</code>.
     */
    public final TableField<CoreUpgradeHistoryRecord, Integer> UPGRADE_DATE = createField(DSL.name("upgrade_date"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_upgrade_history.upgrade_mid</code>.
     */
    public final TableField<CoreUpgradeHistoryRecord, Integer> UPGRADE_MID = createField(DSL.name("upgrade_mid"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_upgrade_history.upgrade_app</code>.
     */
    public final TableField<CoreUpgradeHistoryRecord, String> UPGRADE_APP = createField(DSL.name("upgrade_app"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("'core'", SQLDataType.VARCHAR)), this, "");

    private CoreUpgradeHistory(Name alias, Table<CoreUpgradeHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreUpgradeHistory(Name alias, Table<CoreUpgradeHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_upgrade_history</code> table
     * reference
     */
    public CoreUpgradeHistory(String alias) {
        this(DSL.name(alias), CORE_UPGRADE_HISTORY);
    }

    /**
     * Create an aliased <code>paradise_forums.core_upgrade_history</code> table
     * reference
     */
    public CoreUpgradeHistory(Name alias) {
        this(alias, CORE_UPGRADE_HISTORY);
    }

    /**
     * Create a <code>paradise_forums.core_upgrade_history</code> table
     * reference
     */
    public CoreUpgradeHistory() {
        this(DSL.name("core_upgrade_history"), null);
    }

    public <O extends Record> CoreUpgradeHistory(Table<O> child, ForeignKey<O, CoreUpgradeHistoryRecord> key) {
        super(child, key, CORE_UPGRADE_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_UPGRADE_HISTORY_UPGRADES);
    }

    @Override
    public Identity<CoreUpgradeHistoryRecord, Integer> getIdentity() {
        return (Identity<CoreUpgradeHistoryRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreUpgradeHistoryRecord> getPrimaryKey() {
        return Keys.KEY_CORE_UPGRADE_HISTORY_PRIMARY;
    }

    @Override
    public CoreUpgradeHistory as(String alias) {
        return new CoreUpgradeHistory(DSL.name(alias), this);
    }

    @Override
    public CoreUpgradeHistory as(Name alias) {
        return new CoreUpgradeHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreUpgradeHistory rename(String name) {
        return new CoreUpgradeHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreUpgradeHistory rename(Name name) {
        return new CoreUpgradeHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, String, Integer, Integer, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
