/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreRcAuthorNotificationText;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreRcAuthorNotificationTextRecord extends UpdatableRecordImpl<CoreRcAuthorNotificationTextRecord> implements Record3<ULong, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>paradise_forums.core_rc_author_notification_text.id</code>. ID
     * Number
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_rc_author_notification_text.id</code>. ID
     * Number
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_rc_author_notification_text.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_rc_author_notification_text.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_rc_author_notification_text.text</code>.
     */
    public void setText(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_rc_author_notification_text.text</code>.
     */
    public String getText() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<ULong, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<ULong, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CoreRcAuthorNotificationText.CORE_RC_AUTHOR_NOTIFICATION_TEXT.ID;
    }

    @Override
    public Field<String> field2() {
        return CoreRcAuthorNotificationText.CORE_RC_AUTHOR_NOTIFICATION_TEXT.TITLE;
    }

    @Override
    public Field<String> field3() {
        return CoreRcAuthorNotificationText.CORE_RC_AUTHOR_NOTIFICATION_TEXT.TEXT;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getText();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getText();
    }

    @Override
    public CoreRcAuthorNotificationTextRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public CoreRcAuthorNotificationTextRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public CoreRcAuthorNotificationTextRecord value3(String value) {
        setText(value);
        return this;
    }

    @Override
    public CoreRcAuthorNotificationTextRecord values(ULong value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreRcAuthorNotificationTextRecord
     */
    public CoreRcAuthorNotificationTextRecord() {
        super(CoreRcAuthorNotificationText.CORE_RC_AUTHOR_NOTIFICATION_TEXT);
    }

    /**
     * Create a detached, initialised CoreRcAuthorNotificationTextRecord
     */
    public CoreRcAuthorNotificationTextRecord(ULong id, String title, String text) {
        super(CoreRcAuthorNotificationText.CORE_RC_AUTHOR_NOTIFICATION_TEXT);

        setId(id);
        setTitle(title);
        setText(text);
    }
}
