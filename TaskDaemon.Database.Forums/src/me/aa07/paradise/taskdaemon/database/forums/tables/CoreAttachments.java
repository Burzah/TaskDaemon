/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.enums.CoreAttachmentsAttachModerationStatus;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAttachmentsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row20;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreAttachments extends TableImpl<CoreAttachmentsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_attachments</code>
     */
    public static final CoreAttachments CORE_ATTACHMENTS = new CoreAttachments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreAttachmentsRecord> getRecordType() {
        return CoreAttachmentsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_attachments.attach_id</code>.
     */
    public final TableField<CoreAttachmentsRecord, Integer> ATTACH_ID = createField(DSL.name("attach_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_attachments.attach_ext</code>.
     */
    public final TableField<CoreAttachmentsRecord, String> ATTACH_EXT = createField(DSL.name("attach_ext"), SQLDataType.VARCHAR(250).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_attachments.attach_file</code>.
     */
    public final TableField<CoreAttachmentsRecord, String> ATTACH_FILE = createField(DSL.name("attach_file"), SQLDataType.VARCHAR(250).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_attachments.attach_location</code>.
     */
    public final TableField<CoreAttachmentsRecord, String> ATTACH_LOCATION = createField(DSL.name("attach_location"), SQLDataType.VARCHAR(250).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_attachments.attach_thumb_location</code>.
     */
    public final TableField<CoreAttachmentsRecord, String> ATTACH_THUMB_LOCATION = createField(DSL.name("attach_thumb_location"), SQLDataType.VARCHAR(250).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_attachments.attach_thumb_width</code>.
     */
    public final TableField<CoreAttachmentsRecord, Short> ATTACH_THUMB_WIDTH = createField(DSL.name("attach_thumb_width"), SQLDataType.SMALLINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.SMALLINT)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_attachments.attach_thumb_height</code>.
     */
    public final TableField<CoreAttachmentsRecord, Short> ATTACH_THUMB_HEIGHT = createField(DSL.name("attach_thumb_height"), SQLDataType.SMALLINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>paradise_forums.core_attachments.attach_is_image</code>.
     */
    public final TableField<CoreAttachmentsRecord, Byte> ATTACH_IS_IMAGE = createField(DSL.name("attach_is_image"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.core_attachments.attach_hits</code>.
     */
    public final TableField<CoreAttachmentsRecord, Integer> ATTACH_HITS = createField(DSL.name("attach_hits"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_attachments.attach_date</code>.
     */
    public final TableField<CoreAttachmentsRecord, Integer> ATTACH_DATE = createField(DSL.name("attach_date"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_attachments.attach_post_key</code>.
     */
    public final TableField<CoreAttachmentsRecord, String> ATTACH_POST_KEY = createField(DSL.name("attach_post_key"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("'0'", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_attachments.attach_member_id</code>.
     */
    public final TableField<CoreAttachmentsRecord, ULong> ATTACH_MEMBER_ID = createField(DSL.name("attach_member_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_attachments.attach_filesize</code>.
     */
    public final TableField<CoreAttachmentsRecord, Integer> ATTACH_FILESIZE = createField(DSL.name("attach_filesize"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_attachments.attach_img_width</code>.
     */
    public final TableField<CoreAttachmentsRecord, Integer> ATTACH_IMG_WIDTH = createField(DSL.name("attach_img_width"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_attachments.attach_img_height</code>.
     */
    public final TableField<CoreAttachmentsRecord, Integer> ATTACH_IMG_HEIGHT = createField(DSL.name("attach_img_height"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_attachments.attach_is_archived</code>.
     */
    public final TableField<CoreAttachmentsRecord, Integer> ATTACH_IS_ARCHIVED = createField(DSL.name("attach_is_archived"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_attachments.attach_security_key</code>.
     * Security key for this attachment that will be checked when viewing.
     */
    public final TableField<CoreAttachmentsRecord, String> ATTACH_SECURITY_KEY = createField(DSL.name("attach_security_key"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "Security key for this attachment that will be checked when viewing.");

    /**
     * The column <code>paradise_forums.core_attachments.attach_labels</code>.
     * Labels from image scanner
     */
    public final TableField<CoreAttachmentsRecord, String> ATTACH_LABELS = createField(DSL.name("attach_labels"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "Labels from image scanner");

    /**
     * The column
     * <code>paradise_forums.core_attachments.attach_moderation_status</code>.
     * If this attachment has been flagged for moderation by the image scanner,
     * the status of that
     */
    public final TableField<CoreAttachmentsRecord, CoreAttachmentsAttachModerationStatus> ATTACH_MODERATION_STATUS = createField(DSL.name("attach_moderation_status"), SQLDataType.VARCHAR(8).nullable(false).defaultValue(DSL.inline("'skipped'", SQLDataType.VARCHAR)).asEnumDataType(me.aa07.paradise.taskdaemon.database.forums.enums.CoreAttachmentsAttachModerationStatus.class), this, "If this attachment has been flagged for moderation by the image scanner, the status of that");

    /**
     * The column
     * <code>paradise_forums.core_attachments.attach_img_rotate</code>.
     */
    public final TableField<CoreAttachmentsRecord, Short> ATTACH_IMG_ROTATE = createField(DSL.name("attach_img_rotate"), SQLDataType.SMALLINT.defaultValue(DSL.inline("0", SQLDataType.SMALLINT)), this, "");

    private CoreAttachments(Name alias, Table<CoreAttachmentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreAttachments(Name alias, Table<CoreAttachmentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_attachments</code> table
     * reference
     */
    public CoreAttachments(String alias) {
        this(DSL.name(alias), CORE_ATTACHMENTS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_attachments</code> table
     * reference
     */
    public CoreAttachments(Name alias) {
        this(alias, CORE_ATTACHMENTS);
    }

    /**
     * Create a <code>paradise_forums.core_attachments</code> table reference
     */
    public CoreAttachments() {
        this(DSL.name("core_attachments"), null);
    }

    public <O extends Record> CoreAttachments(Table<O> child, ForeignKey<O, CoreAttachmentsRecord> key) {
        super(child, key, CORE_ATTACHMENTS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_ATTACHMENTS_ATTACH_LOCATION, Indexes.CORE_ATTACHMENTS_ATTACH_MID_SIZE, Indexes.CORE_ATTACHMENTS_ATTACH_POST_KEY, Indexes.CORE_ATTACHMENTS_ATTACH_THUMB_LOCATION, Indexes.CORE_ATTACHMENTS_ATTACHMENT_POSTING);
    }

    @Override
    public Identity<CoreAttachmentsRecord, Integer> getIdentity() {
        return (Identity<CoreAttachmentsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreAttachmentsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_ATTACHMENTS_PRIMARY;
    }

    @Override
    public CoreAttachments as(String alias) {
        return new CoreAttachments(DSL.name(alias), this);
    }

    @Override
    public CoreAttachments as(Name alias) {
        return new CoreAttachments(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreAttachments rename(String name) {
        return new CoreAttachments(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreAttachments rename(Name name) {
        return new CoreAttachments(name, null);
    }

    // -------------------------------------------------------------------------
    // Row20 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row20<Integer, String, String, String, String, Short, Short, Byte, Integer, Integer, String, ULong, Integer, Integer, Integer, Integer, String, String, CoreAttachmentsAttachModerationStatus, Short> fieldsRow() {
        return (Row20) super.fieldsRow();
    }
}
