/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMemberBadges;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreMemberBadgesRecord extends UpdatableRecordImpl<CoreMemberBadgesRecord> implements Record8<ULong, UInteger, UInteger, UInteger, ULong, ULong, String, UInteger> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_member_badges.id</code>. ID Number
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_member_badges.id</code>. ID Number
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_member_badges.member</code>. The
     * member ID
     */
    public void setMember(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_member_badges.member</code>. The
     * member ID
     */
    public UInteger getMember() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_member_badges.badge</code>. The
     * badge ID
     */
    public void setBadge(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_member_badges.badge</code>. The
     * badge ID
     */
    public UInteger getBadge() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_member_badges.datetime</code>. Unix
     * timestamp of when the member earned this badge
     */
    public void setDatetime(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_member_badges.datetime</code>. Unix
     * timestamp of when the member earned this badge
     */
    public UInteger getDatetime() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_member_badges.rule</code>. A ID
     * number of the rule which triggered earning the badge
     */
    public void setRule(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_member_badges.rule</code>. A ID
     * number of the rule which triggered earning the badge
     */
    public ULong getRule() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_member_badges.action_log</code>.
     * The ID number of the log in core_achievements_log which indicates the
     * action that was performed
     */
    public void setActionLog(ULong value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_member_badges.action_log</code>.
     * The ID number of the log in core_achievements_log which indicates the
     * action that was performed
     */
    public ULong getActionLog() {
        return (ULong) get(5);
    }

    /**
     * Setter for <code>paradise_forums.core_member_badges.actor</code>. If the
     * member receiving the badge was the subject or other in the action
     */
    public void setActor(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.core_member_badges.actor</code>. If the
     * member receiving the badge was the subject or other in the action
     */
    public String getActor() {
        return (String) get(6);
    }

    /**
     * Setter for <code>paradise_forums.core_member_badges.recognize</code>.
     * core_member_recognise table pkey
     */
    public void setRecognize(UInteger value) {
        set(7, value);
    }

    /**
     * Getter for <code>paradise_forums.core_member_badges.recognize</code>.
     * core_member_recognise table pkey
     */
    public UInteger getRecognize() {
        return (UInteger) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<ULong, UInteger, UInteger, UInteger, ULong, ULong, String, UInteger> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<ULong, UInteger, UInteger, UInteger, ULong, ULong, String, UInteger> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CoreMemberBadges.CORE_MEMBER_BADGES.ID;
    }

    @Override
    public Field<UInteger> field2() {
        return CoreMemberBadges.CORE_MEMBER_BADGES.MEMBER;
    }

    @Override
    public Field<UInteger> field3() {
        return CoreMemberBadges.CORE_MEMBER_BADGES.BADGE;
    }

    @Override
    public Field<UInteger> field4() {
        return CoreMemberBadges.CORE_MEMBER_BADGES.DATETIME;
    }

    @Override
    public Field<ULong> field5() {
        return CoreMemberBadges.CORE_MEMBER_BADGES.RULE;
    }

    @Override
    public Field<ULong> field6() {
        return CoreMemberBadges.CORE_MEMBER_BADGES.ACTION_LOG;
    }

    @Override
    public Field<String> field7() {
        return CoreMemberBadges.CORE_MEMBER_BADGES.ACTOR;
    }

    @Override
    public Field<UInteger> field8() {
        return CoreMemberBadges.CORE_MEMBER_BADGES.RECOGNIZE;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public UInteger component2() {
        return getMember();
    }

    @Override
    public UInteger component3() {
        return getBadge();
    }

    @Override
    public UInteger component4() {
        return getDatetime();
    }

    @Override
    public ULong component5() {
        return getRule();
    }

    @Override
    public ULong component6() {
        return getActionLog();
    }

    @Override
    public String component7() {
        return getActor();
    }

    @Override
    public UInteger component8() {
        return getRecognize();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public UInteger value2() {
        return getMember();
    }

    @Override
    public UInteger value3() {
        return getBadge();
    }

    @Override
    public UInteger value4() {
        return getDatetime();
    }

    @Override
    public ULong value5() {
        return getRule();
    }

    @Override
    public ULong value6() {
        return getActionLog();
    }

    @Override
    public String value7() {
        return getActor();
    }

    @Override
    public UInteger value8() {
        return getRecognize();
    }

    @Override
    public CoreMemberBadgesRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public CoreMemberBadgesRecord value2(UInteger value) {
        setMember(value);
        return this;
    }

    @Override
    public CoreMemberBadgesRecord value3(UInteger value) {
        setBadge(value);
        return this;
    }

    @Override
    public CoreMemberBadgesRecord value4(UInteger value) {
        setDatetime(value);
        return this;
    }

    @Override
    public CoreMemberBadgesRecord value5(ULong value) {
        setRule(value);
        return this;
    }

    @Override
    public CoreMemberBadgesRecord value6(ULong value) {
        setActionLog(value);
        return this;
    }

    @Override
    public CoreMemberBadgesRecord value7(String value) {
        setActor(value);
        return this;
    }

    @Override
    public CoreMemberBadgesRecord value8(UInteger value) {
        setRecognize(value);
        return this;
    }

    @Override
    public CoreMemberBadgesRecord values(ULong value1, UInteger value2, UInteger value3, UInteger value4, ULong value5, ULong value6, String value7, UInteger value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreMemberBadgesRecord
     */
    public CoreMemberBadgesRecord() {
        super(CoreMemberBadges.CORE_MEMBER_BADGES);
    }

    /**
     * Create a detached, initialised CoreMemberBadgesRecord
     */
    public CoreMemberBadgesRecord(ULong id, UInteger member, UInteger badge, UInteger datetime, ULong rule, ULong actionLog, String actor, UInteger recognize) {
        super(CoreMemberBadges.CORE_MEMBER_BADGES);

        setId(id);
        setMember(member);
        setBadge(badge);
        setDatetime(datetime);
        setRule(rule);
        setActionLog(actionLog);
        setActor(actor);
        setRecognize(recognize);
    }
}
