/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CalendarEventRsvpRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalendarEventRsvp extends TableImpl<CalendarEventRsvpRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.calendar_event_rsvp</code>
     */
    public static final CalendarEventRsvp CALENDAR_EVENT_RSVP = new CalendarEventRsvp();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalendarEventRsvpRecord> getRecordType() {
        return CalendarEventRsvpRecord.class;
    }

    /**
     * The column <code>paradise_forums.calendar_event_rsvp.rsvp_id</code>.
     */
    public final TableField<CalendarEventRsvpRecord, Integer> RSVP_ID = createField(DSL.name("rsvp_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_event_rsvp.rsvp_event_id</code>.
     */
    public final TableField<CalendarEventRsvpRecord, Integer> RSVP_EVENT_ID = createField(DSL.name("rsvp_event_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_event_rsvp.rsvp_member_id</code>.
     */
    public final TableField<CalendarEventRsvpRecord, ULong> RSVP_MEMBER_ID = createField(DSL.name("rsvp_member_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.calendar_event_rsvp.rsvp_date</code>.
     */
    public final TableField<CalendarEventRsvpRecord, Integer> RSVP_DATE = createField(DSL.name("rsvp_date"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_event_rsvp.rsvp_response</code>. 0=No,
     * 1=Yes, 2=Maybe
     */
    public final TableField<CalendarEventRsvpRecord, UByte> RSVP_RESPONSE = createField(DSL.name("rsvp_response"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "0=No, 1=Yes, 2=Maybe");

    private CalendarEventRsvp(Name alias, Table<CalendarEventRsvpRecord> aliased) {
        this(alias, aliased, null);
    }

    private CalendarEventRsvp(Name alias, Table<CalendarEventRsvpRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.calendar_event_rsvp</code> table
     * reference
     */
    public CalendarEventRsvp(String alias) {
        this(DSL.name(alias), CALENDAR_EVENT_RSVP);
    }

    /**
     * Create an aliased <code>paradise_forums.calendar_event_rsvp</code> table
     * reference
     */
    public CalendarEventRsvp(Name alias) {
        this(alias, CALENDAR_EVENT_RSVP);
    }

    /**
     * Create a <code>paradise_forums.calendar_event_rsvp</code> table reference
     */
    public CalendarEventRsvp() {
        this(DSL.name("calendar_event_rsvp"), null);
    }

    public <O extends Record> CalendarEventRsvp(Table<O> child, ForeignKey<O, CalendarEventRsvpRecord> key) {
        super(child, key, CALENDAR_EVENT_RSVP);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CALENDAR_EVENT_RSVP_RSVP_EVENT_ID, Indexes.CALENDAR_EVENT_RSVP_RSVP_MEMBER_ID, Indexes.CALENDAR_EVENT_RSVP_RSVP_SEARCH);
    }

    @Override
    public Identity<CalendarEventRsvpRecord, Integer> getIdentity() {
        return (Identity<CalendarEventRsvpRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CalendarEventRsvpRecord> getPrimaryKey() {
        return Keys.KEY_CALENDAR_EVENT_RSVP_PRIMARY;
    }

    @Override
    public CalendarEventRsvp as(String alias) {
        return new CalendarEventRsvp(DSL.name(alias), this);
    }

    @Override
    public CalendarEventRsvp as(Name alias) {
        return new CalendarEventRsvp(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CalendarEventRsvp rename(String name) {
        return new CalendarEventRsvp(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CalendarEventRsvp rename(Name name) {
        return new CalendarEventRsvp(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, ULong, Integer, UByte> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
