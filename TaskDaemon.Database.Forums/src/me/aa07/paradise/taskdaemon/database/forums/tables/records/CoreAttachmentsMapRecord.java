/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAttachmentsMap;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreAttachmentsMapRecord extends TableRecordImpl<CoreAttachmentsMapRecord> implements Record7<UInteger, String, ULong, ULong, String, String, ULong> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>paradise_forums.core_attachments_map.attachment_id</code>. The
     * attachment ID
     */
    public void setAttachmentId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_attachments_map.attachment_id</code>. The
     * attachment ID
     */
    public UInteger getAttachmentId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_attachments_map.location_key</code>. The
     * editor location the content claiming this attachment has come from
     */
    public void setLocationKey(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_attachments_map.location_key</code>. The
     * editor location the content claiming this attachment has come from
     */
    public String getLocationKey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_attachments_map.id1</code>. Primary
     * ID number for content claiming attachment
     */
    public void setId1(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_attachments_map.id1</code>. Primary
     * ID number for content claiming attachment
     */
    public ULong getId1() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_attachments_map.id2</code>.
     * Secondary ID number for content claiming attachment
     */
    public void setId2(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_attachments_map.id2</code>.
     * Secondary ID number for content claiming attachment
     */
    public ULong getId2() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_attachments_map.temp</code>.
     * Temporary key for content claiming attachment
     */
    public void setTemp(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_attachments_map.temp</code>.
     * Temporary key for content claiming attachment
     */
    public String getTemp() {
        return (String) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_attachments_map.id3</code>.
     * Arbitrary data for content claiming attachment
     */
    public void setId3(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_attachments_map.id3</code>.
     * Arbitrary data for content claiming attachment
     */
    public String getId3() {
        return (String) get(5);
    }

    /**
     * Setter for <code>paradise_forums.core_attachments_map.lang</code>. If
     * this is claimed by a translatable field, the language ID
     */
    public void setLang(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.core_attachments_map.lang</code>. If
     * this is claimed by a translatable field, the language ID
     */
    public ULong getLang() {
        return (ULong) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UInteger, String, ULong, ULong, String, String, ULong> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UInteger, String, ULong, ULong, String, String, ULong> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return CoreAttachmentsMap.CORE_ATTACHMENTS_MAP.ATTACHMENT_ID;
    }

    @Override
    public Field<String> field2() {
        return CoreAttachmentsMap.CORE_ATTACHMENTS_MAP.LOCATION_KEY;
    }

    @Override
    public Field<ULong> field3() {
        return CoreAttachmentsMap.CORE_ATTACHMENTS_MAP.ID1;
    }

    @Override
    public Field<ULong> field4() {
        return CoreAttachmentsMap.CORE_ATTACHMENTS_MAP.ID2;
    }

    @Override
    public Field<String> field5() {
        return CoreAttachmentsMap.CORE_ATTACHMENTS_MAP.TEMP;
    }

    @Override
    public Field<String> field6() {
        return CoreAttachmentsMap.CORE_ATTACHMENTS_MAP.ID3;
    }

    @Override
    public Field<ULong> field7() {
        return CoreAttachmentsMap.CORE_ATTACHMENTS_MAP.LANG;
    }

    @Override
    public UInteger component1() {
        return getAttachmentId();
    }

    @Override
    public String component2() {
        return getLocationKey();
    }

    @Override
    public ULong component3() {
        return getId1();
    }

    @Override
    public ULong component4() {
        return getId2();
    }

    @Override
    public String component5() {
        return getTemp();
    }

    @Override
    public String component6() {
        return getId3();
    }

    @Override
    public ULong component7() {
        return getLang();
    }

    @Override
    public UInteger value1() {
        return getAttachmentId();
    }

    @Override
    public String value2() {
        return getLocationKey();
    }

    @Override
    public ULong value3() {
        return getId1();
    }

    @Override
    public ULong value4() {
        return getId2();
    }

    @Override
    public String value5() {
        return getTemp();
    }

    @Override
    public String value6() {
        return getId3();
    }

    @Override
    public ULong value7() {
        return getLang();
    }

    @Override
    public CoreAttachmentsMapRecord value1(UInteger value) {
        setAttachmentId(value);
        return this;
    }

    @Override
    public CoreAttachmentsMapRecord value2(String value) {
        setLocationKey(value);
        return this;
    }

    @Override
    public CoreAttachmentsMapRecord value3(ULong value) {
        setId1(value);
        return this;
    }

    @Override
    public CoreAttachmentsMapRecord value4(ULong value) {
        setId2(value);
        return this;
    }

    @Override
    public CoreAttachmentsMapRecord value5(String value) {
        setTemp(value);
        return this;
    }

    @Override
    public CoreAttachmentsMapRecord value6(String value) {
        setId3(value);
        return this;
    }

    @Override
    public CoreAttachmentsMapRecord value7(ULong value) {
        setLang(value);
        return this;
    }

    @Override
    public CoreAttachmentsMapRecord values(UInteger value1, String value2, ULong value3, ULong value4, String value5, String value6, ULong value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreAttachmentsMapRecord
     */
    public CoreAttachmentsMapRecord() {
        super(CoreAttachmentsMap.CORE_ATTACHMENTS_MAP);
    }

    /**
     * Create a detached, initialised CoreAttachmentsMapRecord
     */
    public CoreAttachmentsMapRecord(UInteger attachmentId, String locationKey, ULong id1, ULong id2, String temp, String id3, ULong lang) {
        super(CoreAttachmentsMap.CORE_ATTACHMENTS_MAP);

        setAttachmentId(attachmentId);
        setLocationKey(locationKey);
        setId1(id1);
        setId2(id2);
        setTemp(temp);
        setId3(id3);
        setLang(lang);
    }
}
