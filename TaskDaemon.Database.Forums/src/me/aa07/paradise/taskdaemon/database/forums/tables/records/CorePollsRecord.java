/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CorePolls;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CorePollsRecord extends UpdatableRecordImpl<CorePollsRecord> implements Record11<Integer, Integer, String, ULong, Long, String, Byte, Integer, UInteger, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_polls.pid</code>.
     */
    public void setPid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_polls.pid</code>.
     */
    public Integer getPid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_polls.start_date</code>.
     */
    public void setStartDate(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_polls.start_date</code>.
     */
    public Integer getStartDate() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_polls.choices</code>.
     */
    public void setChoices(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_polls.choices</code>.
     */
    public String getChoices() {
        return (String) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_polls.starter_id</code>.
     */
    public void setStarterId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_polls.starter_id</code>.
     */
    public ULong getStarterId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_polls.votes</code>.
     */
    public void setVotes(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_polls.votes</code>.
     */
    public Long getVotes() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_polls.poll_question</code>.
     */
    public void setPollQuestion(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_polls.poll_question</code>.
     */
    public String getPollQuestion() {
        return (String) get(5);
    }

    /**
     * Setter for <code>paradise_forums.core_polls.poll_only</code>.
     */
    public void setPollOnly(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.core_polls.poll_only</code>.
     */
    public Byte getPollOnly() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>paradise_forums.core_polls.poll_view_voters</code>.
     */
    public void setPollViewVoters(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>paradise_forums.core_polls.poll_view_voters</code>.
     */
    public Integer getPollViewVoters() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>paradise_forums.core_polls.poll_closed</code>.
     */
    public void setPollClosed(UInteger value) {
        set(8, value);
    }

    /**
     * Getter for <code>paradise_forums.core_polls.poll_closed</code>.
     */
    public UInteger getPollClosed() {
        return (UInteger) get(8);
    }

    /**
     * Setter for <code>paradise_forums.core_polls.poll_close_date</code>.
     */
    public void setPollCloseDate(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>paradise_forums.core_polls.poll_close_date</code>.
     */
    public Integer getPollCloseDate() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>paradise_forums.core_polls.poll_item_class</code>.
     */
    public void setPollItemClass(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>paradise_forums.core_polls.poll_item_class</code>.
     */
    public String getPollItemClass() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, Integer, String, ULong, Long, String, Byte, Integer, UInteger, Integer, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, Integer, String, ULong, Long, String, Byte, Integer, UInteger, Integer, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CorePolls.CORE_POLLS.PID;
    }

    @Override
    public Field<Integer> field2() {
        return CorePolls.CORE_POLLS.START_DATE;
    }

    @Override
    public Field<String> field3() {
        return CorePolls.CORE_POLLS.CHOICES;
    }

    @Override
    public Field<ULong> field4() {
        return CorePolls.CORE_POLLS.STARTER_ID;
    }

    @Override
    public Field<Long> field5() {
        return CorePolls.CORE_POLLS.VOTES;
    }

    @Override
    public Field<String> field6() {
        return CorePolls.CORE_POLLS.POLL_QUESTION;
    }

    @Override
    public Field<Byte> field7() {
        return CorePolls.CORE_POLLS.POLL_ONLY;
    }

    @Override
    public Field<Integer> field8() {
        return CorePolls.CORE_POLLS.POLL_VIEW_VOTERS;
    }

    @Override
    public Field<UInteger> field9() {
        return CorePolls.CORE_POLLS.POLL_CLOSED;
    }

    @Override
    public Field<Integer> field10() {
        return CorePolls.CORE_POLLS.POLL_CLOSE_DATE;
    }

    @Override
    public Field<String> field11() {
        return CorePolls.CORE_POLLS.POLL_ITEM_CLASS;
    }

    @Override
    public Integer component1() {
        return getPid();
    }

    @Override
    public Integer component2() {
        return getStartDate();
    }

    @Override
    public String component3() {
        return getChoices();
    }

    @Override
    public ULong component4() {
        return getStarterId();
    }

    @Override
    public Long component5() {
        return getVotes();
    }

    @Override
    public String component6() {
        return getPollQuestion();
    }

    @Override
    public Byte component7() {
        return getPollOnly();
    }

    @Override
    public Integer component8() {
        return getPollViewVoters();
    }

    @Override
    public UInteger component9() {
        return getPollClosed();
    }

    @Override
    public Integer component10() {
        return getPollCloseDate();
    }

    @Override
    public String component11() {
        return getPollItemClass();
    }

    @Override
    public Integer value1() {
        return getPid();
    }

    @Override
    public Integer value2() {
        return getStartDate();
    }

    @Override
    public String value3() {
        return getChoices();
    }

    @Override
    public ULong value4() {
        return getStarterId();
    }

    @Override
    public Long value5() {
        return getVotes();
    }

    @Override
    public String value6() {
        return getPollQuestion();
    }

    @Override
    public Byte value7() {
        return getPollOnly();
    }

    @Override
    public Integer value8() {
        return getPollViewVoters();
    }

    @Override
    public UInteger value9() {
        return getPollClosed();
    }

    @Override
    public Integer value10() {
        return getPollCloseDate();
    }

    @Override
    public String value11() {
        return getPollItemClass();
    }

    @Override
    public CorePollsRecord value1(Integer value) {
        setPid(value);
        return this;
    }

    @Override
    public CorePollsRecord value2(Integer value) {
        setStartDate(value);
        return this;
    }

    @Override
    public CorePollsRecord value3(String value) {
        setChoices(value);
        return this;
    }

    @Override
    public CorePollsRecord value4(ULong value) {
        setStarterId(value);
        return this;
    }

    @Override
    public CorePollsRecord value5(Long value) {
        setVotes(value);
        return this;
    }

    @Override
    public CorePollsRecord value6(String value) {
        setPollQuestion(value);
        return this;
    }

    @Override
    public CorePollsRecord value7(Byte value) {
        setPollOnly(value);
        return this;
    }

    @Override
    public CorePollsRecord value8(Integer value) {
        setPollViewVoters(value);
        return this;
    }

    @Override
    public CorePollsRecord value9(UInteger value) {
        setPollClosed(value);
        return this;
    }

    @Override
    public CorePollsRecord value10(Integer value) {
        setPollCloseDate(value);
        return this;
    }

    @Override
    public CorePollsRecord value11(String value) {
        setPollItemClass(value);
        return this;
    }

    @Override
    public CorePollsRecord values(Integer value1, Integer value2, String value3, ULong value4, Long value5, String value6, Byte value7, Integer value8, UInteger value9, Integer value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CorePollsRecord
     */
    public CorePollsRecord() {
        super(CorePolls.CORE_POLLS);
    }

    /**
     * Create a detached, initialised CorePollsRecord
     */
    public CorePollsRecord(Integer pid, Integer startDate, String choices, ULong starterId, Long votes, String pollQuestion, Byte pollOnly, Integer pollViewVoters, UInteger pollClosed, Integer pollCloseDate, String pollItemClass) {
        super(CorePolls.CORE_POLLS);

        setPid(pid);
        setStartDate(startDate);
        setChoices(choices);
        setStarterId(starterId);
        setVotes(votes);
        setPollQuestion(pollQuestion);
        setPollOnly(pollOnly);
        setPollViewVoters(pollViewVoters);
        setPollClosed(pollClosed);
        setPollCloseDate(pollCloseDate);
        setPollItemClass(pollItemClass);
    }
}
