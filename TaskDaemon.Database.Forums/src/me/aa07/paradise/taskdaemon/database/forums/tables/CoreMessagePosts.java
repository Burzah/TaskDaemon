/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMessagePostsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreMessagePosts extends TableImpl<CoreMessagePostsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_message_posts</code>
     */
    public static final CoreMessagePosts CORE_MESSAGE_POSTS = new CoreMessagePosts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreMessagePostsRecord> getRecordType() {
        return CoreMessagePostsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_message_posts.msg_id</code>.
     */
    public final TableField<CoreMessagePostsRecord, Integer> MSG_ID = createField(DSL.name("msg_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_message_posts.msg_topic_id</code>.
     */
    public final TableField<CoreMessagePostsRecord, Integer> MSG_TOPIC_ID = createField(DSL.name("msg_topic_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_message_posts.msg_date</code>.
     */
    public final TableField<CoreMessagePostsRecord, Integer> MSG_DATE = createField(DSL.name("msg_date"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_message_posts.msg_post</code>.
     */
    public final TableField<CoreMessagePostsRecord, String> MSG_POST = createField(DSL.name("msg_post"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_message_posts.msg_post_key</code>.
     */
    public final TableField<CoreMessagePostsRecord, String> MSG_POST_KEY = createField(DSL.name("msg_post_key"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("'0'", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_message_posts.msg_author_id</code>.
     */
    public final TableField<CoreMessagePostsRecord, ULong> MSG_AUTHOR_ID = createField(DSL.name("msg_author_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_message_posts.msg_ip_address</code>.
     */
    public final TableField<CoreMessagePostsRecord, String> MSG_IP_ADDRESS = createField(DSL.name("msg_ip_address"), SQLDataType.VARCHAR(46).nullable(false).defaultValue(DSL.inline("'0'", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_message_posts.msg_is_first_post</code>.
     */
    public final TableField<CoreMessagePostsRecord, Integer> MSG_IS_FIRST_POST = createField(DSL.name("msg_is_first_post"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    private CoreMessagePosts(Name alias, Table<CoreMessagePostsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreMessagePosts(Name alias, Table<CoreMessagePostsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_message_posts</code> table
     * reference
     */
    public CoreMessagePosts(String alias) {
        this(DSL.name(alias), CORE_MESSAGE_POSTS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_message_posts</code> table
     * reference
     */
    public CoreMessagePosts(Name alias) {
        this(alias, CORE_MESSAGE_POSTS);
    }

    /**
     * Create a <code>paradise_forums.core_message_posts</code> table reference
     */
    public CoreMessagePosts() {
        this(DSL.name("core_message_posts"), null);
    }

    public <O extends Record> CoreMessagePosts(Table<O> child, ForeignKey<O, CoreMessagePostsRecord> key) {
        super(child, key, CORE_MESSAGE_POSTS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_MESSAGE_POSTS_MSG_AUTHOR_ID, Indexes.CORE_MESSAGE_POSTS_MSG_DATE, Indexes.CORE_MESSAGE_POSTS_MSG_IP_ADDRESS, Indexes.CORE_MESSAGE_POSTS_MSG_POST, Indexes.CORE_MESSAGE_POSTS_MSG_TOPIC_ID, Indexes.CORE_MESSAGE_POSTS_TOPIC_DATE);
    }

    @Override
    public Identity<CoreMessagePostsRecord, Integer> getIdentity() {
        return (Identity<CoreMessagePostsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreMessagePostsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_MESSAGE_POSTS_PRIMARY;
    }

    @Override
    public CoreMessagePosts as(String alias) {
        return new CoreMessagePosts(DSL.name(alias), this);
    }

    @Override
    public CoreMessagePosts as(Name alias) {
        return new CoreMessagePosts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMessagePosts rename(String name) {
        return new CoreMessagePosts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMessagePosts rename(Name name) {
        return new CoreMessagePosts(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, Integer, String, String, ULong, String, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
