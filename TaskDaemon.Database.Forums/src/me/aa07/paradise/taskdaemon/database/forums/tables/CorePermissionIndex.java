/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CorePermissionIndexRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CorePermissionIndex extends TableImpl<CorePermissionIndexRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_permission_index</code>
     */
    public static final CorePermissionIndex CORE_PERMISSION_INDEX = new CorePermissionIndex();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CorePermissionIndexRecord> getRecordType() {
        return CorePermissionIndexRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_permission_index.perm_id</code>.
     */
    public final TableField<CorePermissionIndexRecord, UInteger> PERM_ID = createField(DSL.name("perm_id"), SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_permission_index.app</code>.
     */
    public final TableField<CorePermissionIndexRecord, String> APP = createField(DSL.name("app"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_permission_index.perm_type</code>.
     */
    public final TableField<CorePermissionIndexRecord, String> PERM_TYPE = createField(DSL.name("perm_type"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_permission_index.perm_type_id</code>.
     */
    public final TableField<CorePermissionIndexRecord, UInteger> PERM_TYPE_ID = createField(DSL.name("perm_type_id"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_permission_index.perm_view</code>.
     */
    public final TableField<CorePermissionIndexRecord, String> PERM_VIEW = createField(DSL.name("perm_view"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>paradise_forums.core_permission_index.perm_2</code>.
     */
    public final TableField<CorePermissionIndexRecord, String> PERM_2 = createField(DSL.name("perm_2"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_permission_index.perm_3</code>.
     */
    public final TableField<CorePermissionIndexRecord, String> PERM_3 = createField(DSL.name("perm_3"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_permission_index.perm_4</code>.
     */
    public final TableField<CorePermissionIndexRecord, String> PERM_4 = createField(DSL.name("perm_4"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_permission_index.perm_5</code>.
     */
    public final TableField<CorePermissionIndexRecord, String> PERM_5 = createField(DSL.name("perm_5"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_permission_index.perm_6</code>.
     */
    public final TableField<CorePermissionIndexRecord, String> PERM_6 = createField(DSL.name("perm_6"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_permission_index.perm_7</code>.
     */
    public final TableField<CorePermissionIndexRecord, String> PERM_7 = createField(DSL.name("perm_7"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_permission_index.owner_only</code>.
     */
    public final TableField<CorePermissionIndexRecord, Byte> OWNER_ONLY = createField(DSL.name("owner_only"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_permission_index.friend_only</code>.
     */
    public final TableField<CorePermissionIndexRecord, Byte> FRIEND_ONLY = createField(DSL.name("friend_only"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_permission_index.authorized_users</code>.
     */
    public final TableField<CorePermissionIndexRecord, String> AUTHORIZED_USERS = createField(DSL.name("authorized_users"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    private CorePermissionIndex(Name alias, Table<CorePermissionIndexRecord> aliased) {
        this(alias, aliased, null);
    }

    private CorePermissionIndex(Name alias, Table<CorePermissionIndexRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_permission_index</code>
     * table reference
     */
    public CorePermissionIndex(String alias) {
        this(DSL.name(alias), CORE_PERMISSION_INDEX);
    }

    /**
     * Create an aliased <code>paradise_forums.core_permission_index</code>
     * table reference
     */
    public CorePermissionIndex(Name alias) {
        this(alias, CORE_PERMISSION_INDEX);
    }

    /**
     * Create a <code>paradise_forums.core_permission_index</code> table
     * reference
     */
    public CorePermissionIndex() {
        this(DSL.name("core_permission_index"), null);
    }

    public <O extends Record> CorePermissionIndex(Table<O> child, ForeignKey<O, CorePermissionIndexRecord> key) {
        super(child, key, CORE_PERMISSION_INDEX);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_PERMISSION_INDEX_PERM_INDEX);
    }

    @Override
    public Identity<CorePermissionIndexRecord, UInteger> getIdentity() {
        return (Identity<CorePermissionIndexRecord, UInteger>) super.getIdentity();
    }

    @Override
    public UniqueKey<CorePermissionIndexRecord> getPrimaryKey() {
        return Keys.KEY_CORE_PERMISSION_INDEX_PRIMARY;
    }

    @Override
    public List<UniqueKey<CorePermissionIndexRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_CORE_PERMISSION_INDEX_PERM_TYPE);
    }

    @Override
    public CorePermissionIndex as(String alias) {
        return new CorePermissionIndex(DSL.name(alias), this);
    }

    @Override
    public CorePermissionIndex as(Name alias) {
        return new CorePermissionIndex(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CorePermissionIndex rename(String name) {
        return new CorePermissionIndex(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CorePermissionIndex rename(Name name) {
        return new CorePermissionIndex(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<UInteger, String, String, UInteger, String, String, String, String, String, String, String, Byte, Byte, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
