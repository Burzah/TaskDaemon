/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreWidgetsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreWidgets extends TableImpl<CoreWidgetsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_widgets</code>
     */
    public static final CoreWidgets CORE_WIDGETS = new CoreWidgets();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreWidgetsRecord> getRecordType() {
        return CoreWidgetsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_widgets.id</code>. ID Number
     */
    public final TableField<CoreWidgetsRecord, ULong> ID = createField(DSL.name("id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "ID Number");

    /**
     * The column <code>paradise_forums.core_widgets.key</code>. The widget key
     */
    public final TableField<CoreWidgetsRecord, String> KEY = createField(DSL.name("key"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "The widget key");

    /**
     * The column <code>paradise_forums.core_widgets.app</code>. The application
     * which owns the widget (if applicable)
     */
    public final TableField<CoreWidgetsRecord, String> APP = createField(DSL.name("app"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "The application which owns the widget (if applicable)");

    /**
     * The column <code>paradise_forums.core_widgets.plugin</code>. The plugin
     * which owns the widget (if applicable)
     */
    public final TableField<CoreWidgetsRecord, String> PLUGIN = createField(DSL.name("plugin"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "The plugin which owns the widget (if applicable)");

    /**
     * The column <code>paradise_forums.core_widgets.class</code>. What type of
     * widget is this? e.g. \IPS\Widget\StaticCache
     */
    public final TableField<CoreWidgetsRecord, String> CLASS = createField(DSL.name("class"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "What type of widget is this? e.g. \\IPS\\Widget\\StaticCache");

    /**
     * The column <code>paradise_forums.core_widgets.caches</code>. JSON encoded
     * array of cache keys to be referenced when deleting caches
     */
    public final TableField<CoreWidgetsRecord, String> CACHES = createField(DSL.name("caches"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "JSON encoded array of cache keys to be referenced when deleting caches");

    /**
     * The column <code>paradise_forums.core_widgets.restrict</code>. JSON array
     * of owner app restrictions (e.g. core restricts to sidebar only, content
     * restricts to IP.Content only)
     */
    public final TableField<CoreWidgetsRecord, String> RESTRICT = createField(DSL.name("restrict"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "JSON array of owner app restrictions (e.g. core restricts to sidebar only, content restricts to IP.Content only)");

    /**
     * The column <code>paradise_forums.core_widgets.default_area</code>. If no
     * sidebar configuration is available for a page, all of the widgets for
     * that app are loaded. This field determines which area on the page the
     * default will show.
     */
    public final TableField<CoreWidgetsRecord, String> DEFAULT_AREA = createField(DSL.name("default_area"), SQLDataType.VARCHAR(80).nullable(false).defaultValue(DSL.inline("'sidebar'", SQLDataType.VARCHAR)), this, "If no sidebar configuration is available for a page, all of the widgets for that app are loaded. This field determines which area on the page the default will show.");

    /**
     * The column <code>paradise_forums.core_widgets.allow_reuse</code>. If 1,
     * the widget can be re-used instead of having the block vanish from the
     * manager's block list.
     */
    public final TableField<CoreWidgetsRecord, UByte> ALLOW_REUSE = createField(DSL.name("allow_reuse"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "If 1, the widget can be re-used instead of having the block vanish from the manager's block list.");

    /**
     * The column <code>paradise_forums.core_widgets.menu_style</code>.
     */
    public final TableField<CoreWidgetsRecord, String> MENU_STYLE = createField(DSL.name("menu_style"), SQLDataType.VARCHAR(10).nullable(false).defaultValue(DSL.inline("'menu'", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_widgets.embeddable</code>.
     * Determines if Pages can embed this widget in a custom block.
     */
    public final TableField<CoreWidgetsRecord, UByte> EMBEDDABLE = createField(DSL.name("embeddable"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "Determines if Pages can embed this widget in a custom block.");

    private CoreWidgets(Name alias, Table<CoreWidgetsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreWidgets(Name alias, Table<CoreWidgetsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_widgets</code> table
     * reference
     */
    public CoreWidgets(String alias) {
        this(DSL.name(alias), CORE_WIDGETS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_widgets</code> table
     * reference
     */
    public CoreWidgets(Name alias) {
        this(alias, CORE_WIDGETS);
    }

    /**
     * Create a <code>paradise_forums.core_widgets</code> table reference
     */
    public CoreWidgets() {
        this(DSL.name("core_widgets"), null);
    }

    public <O extends Record> CoreWidgets(Table<O> child, ForeignKey<O, CoreWidgetsRecord> key) {
        super(child, key, CORE_WIDGETS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_WIDGETS_WIDGET_APP, Indexes.CORE_WIDGETS_WIDGET_PLUGIN);
    }

    @Override
    public Identity<CoreWidgetsRecord, ULong> getIdentity() {
        return (Identity<CoreWidgetsRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreWidgetsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_WIDGETS_PRIMARY;
    }

    @Override
    public List<UniqueKey<CoreWidgetsRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_CORE_WIDGETS_WIDGET_KEY);
    }

    @Override
    public CoreWidgets as(String alias) {
        return new CoreWidgets(DSL.name(alias), this);
    }

    @Override
    public CoreWidgets as(Name alias) {
        return new CoreWidgets(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreWidgets rename(String name) {
        return new CoreWidgets(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreWidgets rename(Name name) {
        return new CoreWidgets(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<ULong, String, String, String, String, String, String, String, UByte, String, UByte> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
