/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums;


import me.aa07.paradise.taskdaemon.database.forums.tables.BrilliantdiscordApprovalActions;
import me.aa07.paradise.taskdaemon.database.forums.tables.BrilliantdiscordBehavior;
import me.aa07.paradise.taskdaemon.database.forums.tables.BrilliantdiscordGroupdata;
import me.aa07.paradise.taskdaemon.database.forums.tables.BrilliantdiscordLogs;
import me.aa07.paradise.taskdaemon.database.forums.tables.BrilliantdiscordNotifications;
import me.aa07.paradise.taskdaemon.database.forums.tables.BrilliantdiscordRatelimits;
import me.aa07.paradise.taskdaemon.database.forums.tables.BrilliantdiscordXinvites;
import me.aa07.paradise.taskdaemon.database.forums.tables.CalendarCalendars;
import me.aa07.paradise.taskdaemon.database.forums.tables.CalendarEventComments;
import me.aa07.paradise.taskdaemon.database.forums.tables.CalendarEventReminders;
import me.aa07.paradise.taskdaemon.database.forums.tables.CalendarEventReviews;
import me.aa07.paradise.taskdaemon.database.forums.tables.CalendarEventRsvp;
import me.aa07.paradise.taskdaemon.database.forums.tables.CalendarEvents;
import me.aa07.paradise.taskdaemon.database.forums.tables.CalendarImportFeeds;
import me.aa07.paradise.taskdaemon.database.forums.tables.CalendarImportMap;
import me.aa07.paradise.taskdaemon.database.forums.tables.CalendarVenues;
import me.aa07.paradise.taskdaemon.database.forums.tables.ConvertAppSessions;
import me.aa07.paradise.taskdaemon.database.forums.tables.ConvertApps;
import me.aa07.paradise.taskdaemon.database.forums.tables.ConvertBbcodeMediatag;
import me.aa07.paradise.taskdaemon.database.forums.tables.ConvertCustomBbcode;
import me.aa07.paradise.taskdaemon.database.forums.tables.ConvertLink;
import me.aa07.paradise.taskdaemon.database.forums.tables.ConvertLinkPms;
import me.aa07.paradise.taskdaemon.database.forums.tables.ConvertLinkPosts;
import me.aa07.paradise.taskdaemon.database.forums.tables.ConvertLinkTopics;
import me.aa07.paradise.taskdaemon.database.forums.tables.ConvertLogs;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAchievementsLog;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAchievementsLogMilestones;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAchievementsRules;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAcpNotifcationsDismissals;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAcpNotifications;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAcpNotificationsPreferences;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAcpTabOrder;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAcronyms;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAdminLoginLogs;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAdminLogs;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAdminPermissionRows;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAdvertisements;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAlerts;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAlertsSeen;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAnnouncements;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAnonymousPosts;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreApiKeys;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreApiLogs;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreApiWebhookFires;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreApiWebhooks;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreApplications;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreApprovalQueue;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAttachments;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAutomaticModerationPending;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAutomaticModerationRules;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAutomaticModerationTypes;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreBadges;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreBanfilters;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreBulkMail;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreCache;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreClubPages;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreClubs;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreClubsFields;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreClubsFieldvalues;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreClubsMemberships;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreClubsNodeMap;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreContactVerify;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreContentFeatured;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreContentMeta;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreDeletionLog;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreDev;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreEditHistory;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreEditorStoredReplies;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreEmailTemplates;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreEmoticons;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreErrorLogs;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreFileLogs;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreFileStorage;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreFiles;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreFilesTemp;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreFollow;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreFollowCountCache;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreGeoipCache;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreGroupPromotions;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreGroups;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreHooks;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreIgnoredUsers;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreIncomingEmails;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreIpsBulletins;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreItemMarkers;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreItemMemberMap;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreItemRedirect;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreItemStatisticsCache;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreJavascript;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreLeaders;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreLeadersGroups;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreLog;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreLoginFailures;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreLoginHandlers;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreLoginLinks;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreLoginMethods;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMailErrorLogs;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMemberBadges;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMemberHistory;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMemberPrivacyActions;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMemberRanks;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMemberRecognize;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMemberStatusReplies;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMemberStatusUpdates;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMembers;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMembersFeatureSeen;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMembersKnownDevices;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMembersKnownIpAddresses;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMembersLogins;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMembersWarnActions;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMembersWarnLogs;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMembersWarnReasons;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMenu;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMessagePosts;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMessageTopicUserMap;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMessageTopics;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreModeratorLogs;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreModerators;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreModules;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreNotificationDefaults;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreNotificationPreferences;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreNotifications;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreNotificationsPwaKeys;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreNotificationsPwaQueue;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreOauthAuthorizePrompts;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreOauthClients;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreOauthServerAccessTokens;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreOauthServerAuthorizationCodes;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreOutputCache;
import me.aa07.paradise.taskdaemon.database.forums.tables.CorePermissionIndex;
import me.aa07.paradise.taskdaemon.database.forums.tables.CorePfieldsContent;
import me.aa07.paradise.taskdaemon.database.forums.tables.CorePfieldsData;
import me.aa07.paradise.taskdaemon.database.forums.tables.CorePfieldsGroups;
import me.aa07.paradise.taskdaemon.database.forums.tables.CorePlugins;
import me.aa07.paradise.taskdaemon.database.forums.tables.CorePointsLog;
import me.aa07.paradise.taskdaemon.database.forums.tables.CorePolls;
import me.aa07.paradise.taskdaemon.database.forums.tables.CorePostBeforeRegistering;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreProfanityFilters;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreProfileCompletion;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreProfileSteps;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreQuestionAndAnswer;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreQueue;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreRatings;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreRcAuthorNotificationText;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreRcComments;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreRcIndex;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreRcReports;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreReactions;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreReferralBanners;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreReferrals;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreReputationIndex;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreReputationLeaderboardHistory;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreReputationLevels;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreRssExport;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreRssImport;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreRssImported;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreS3Deletions;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSavedCharts;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSearchIndex;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSearchIndexItemMap;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSecurityAnswers;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSecurityQuestions;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSeoMeta;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSessions;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreShareLinks;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSitemap;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSocialPromote;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSocialPromoteContent;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSocialPromoteSharers;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSoftDeleteLog;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSolvedIndex;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSpamServiceLog;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSpamWhitelist;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreStatistics;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreStore;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreStreamSubscriptions;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreStreams;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSysConfSettings;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSysCpSessions;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSysLang;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSysLangWords;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSysSocialGroups;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreTags;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreTagsCache;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreTagsPerms;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreTasks;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreThemeConflict;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreThemeContentHistory;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreThemeCss;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreThemeResources;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreThemeSettingsFields;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreThemeTemplates;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreThemes;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreUpgradeHistory;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreValidating;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreVoters;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreWidgetAreas;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreWidgetTrash;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreWidgets;
import me.aa07.paradise.taskdaemon.database.forums.tables.ForumsAnswerRatings;
import me.aa07.paradise.taskdaemon.database.forums.tables.ForumsArchivePosts;
import me.aa07.paradise.taskdaemon.database.forums.tables.ForumsArchiveRules;
import me.aa07.paradise.taskdaemon.database.forums.tables.ForumsForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.ForumsPosts;
import me.aa07.paradise.taskdaemon.database.forums.tables.ForumsQuestionRatings;
import me.aa07.paradise.taskdaemon.database.forums.tables.ForumsTopicMmod;
import me.aa07.paradise.taskdaemon.database.forums.tables.ForumsTopics;
import me.aa07.paradise.taskdaemon.database.forums.tables.ForumsViewMethod;
import me.aa07.paradise.taskdaemon.database.forums.tables.PatreonintegrationTier;
import me.aa07.paradise.taskdaemon.database.forums.tables.PatreonintegrationUser;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.BrilliantdiscordApprovalActionsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.BrilliantdiscordBehaviorRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.BrilliantdiscordGroupdataRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.BrilliantdiscordLogsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.BrilliantdiscordNotificationsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.BrilliantdiscordRatelimitsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.BrilliantdiscordXinvitesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CalendarCalendarsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CalendarEventCommentsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CalendarEventRemindersRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CalendarEventReviewsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CalendarEventRsvpRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CalendarEventsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CalendarImportFeedsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CalendarImportMapRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CalendarVenuesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ConvertAppSessionsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ConvertAppsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ConvertBbcodeMediatagRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ConvertCustomBbcodeRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ConvertLinkPmsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ConvertLinkPostsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ConvertLinkRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ConvertLinkTopicsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ConvertLogsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAchievementsLogMilestonesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAchievementsLogRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAchievementsRulesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAcpNotifcationsDismissalsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAcpNotificationsPreferencesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAcpNotificationsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAcpTabOrderRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAcronymsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAdminLoginLogsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAdminLogsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAdminPermissionRowsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAdvertisementsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAlertsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAlertsSeenRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAnnouncementsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAnonymousPostsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreApiKeysRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreApiLogsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreApiWebhookFiresRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreApiWebhooksRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreApplicationsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreApprovalQueueRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAttachmentsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAutomaticModerationPendingRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAutomaticModerationRulesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAutomaticModerationTypesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreBadgesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreBanfiltersRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreBulkMailRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreCacheRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreClubPagesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreClubsFieldsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreClubsFieldvaluesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreClubsMembershipsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreClubsNodeMapRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreClubsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreContactVerifyRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreContentFeaturedRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreContentMetaRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreDeletionLogRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreDevRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreEditHistoryRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreEditorStoredRepliesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreEmailTemplatesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreEmoticonsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreErrorLogsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreFileLogsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreFileStorageRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreFilesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreFilesTempRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreFollowCountCacheRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreFollowRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreGeoipCacheRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreGroupPromotionsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreGroupsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreHooksRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreIgnoredUsersRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreIncomingEmailsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreIpsBulletinsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreItemMarkersRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreItemMemberMapRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreItemRedirectRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreItemStatisticsCacheRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreJavascriptRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreLeadersGroupsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreLeadersRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreLogRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreLoginFailuresRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreLoginHandlersRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreLoginLinksRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreLoginMethodsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMailErrorLogsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMemberBadgesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMemberHistoryRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMemberPrivacyActionsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMemberRanksRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMemberRecognizeRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMemberStatusRepliesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMemberStatusUpdatesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMembersFeatureSeenRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMembersKnownDevicesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMembersKnownIpAddressesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMembersLoginsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMembersRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMembersWarnActionsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMembersWarnLogsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMembersWarnReasonsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMenuRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMessagePostsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMessageTopicUserMapRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMessageTopicsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreModeratorLogsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreModeratorsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreModulesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreNotificationDefaultsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreNotificationPreferencesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreNotificationsPwaKeysRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreNotificationsPwaQueueRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreNotificationsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreOauthAuthorizePromptsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreOauthClientsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreOauthServerAccessTokensRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreOauthServerAuthorizationCodesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreOutputCacheRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CorePermissionIndexRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CorePfieldsContentRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CorePfieldsDataRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CorePfieldsGroupsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CorePluginsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CorePointsLogRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CorePollsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CorePostBeforeRegisteringRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreProfanityFiltersRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreProfileCompletionRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreProfileStepsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreQuestionAndAnswerRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreQueueRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreRatingsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreRcAuthorNotificationTextRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreRcCommentsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreRcIndexRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreRcReportsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreReactionsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreReferralBannersRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreReferralsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreReputationIndexRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreReputationLeaderboardHistoryRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreReputationLevelsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreRssExportRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreRssImportRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreRssImportedRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreS3DeletionsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSavedChartsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSearchIndexItemMapRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSearchIndexRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSecurityAnswersRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSecurityQuestionsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSeoMetaRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSessionsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreShareLinksRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSitemapRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSocialPromoteContentRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSocialPromoteRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSocialPromoteSharersRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSoftDeleteLogRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSolvedIndexRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSpamServiceLogRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSpamWhitelistRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreStatisticsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreStoreRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreStreamSubscriptionsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreStreamsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSysConfSettingsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSysCpSessionsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSysLangRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSysLangWordsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSysSocialGroupsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreTagsCacheRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreTagsPermsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreTagsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreTasksRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreThemeConflictRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreThemeContentHistoryRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreThemeCssRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreThemeResourcesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreThemeSettingsFieldsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreThemeTemplatesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreThemesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreUpgradeHistoryRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreValidatingRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreVotersRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreWidgetAreasRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreWidgetTrashRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreWidgetsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ForumsAnswerRatingsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ForumsArchivePostsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ForumsArchiveRulesRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ForumsForumsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ForumsPostsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ForumsQuestionRatingsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ForumsTopicMmodRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ForumsTopicsRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ForumsViewMethodRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.PatreonintegrationTierRecord;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.PatreonintegrationUserRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * paradise_forums.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BrilliantdiscordApprovalActionsRecord> KEY_BRILLIANTDISCORD_APPROVAL_ACTIONS_PRIMARY = Internal.createUniqueKey(BrilliantdiscordApprovalActions.BRILLIANTDISCORD_APPROVAL_ACTIONS, DSL.name("KEY_brilliantdiscord_approval_actions_PRIMARY"), new TableField[] { BrilliantdiscordApprovalActions.BRILLIANTDISCORD_APPROVAL_ACTIONS.ID }, true);
    public static final UniqueKey<BrilliantdiscordBehaviorRecord> KEY_BRILLIANTDISCORD_BEHAVIOR_KEY = Internal.createUniqueKey(BrilliantdiscordBehavior.BRILLIANTDISCORD_BEHAVIOR, DSL.name("KEY_brilliantdiscord_behavior_key"), new TableField[] { BrilliantdiscordBehavior.BRILLIANTDISCORD_BEHAVIOR.KEY }, true);
    public static final UniqueKey<BrilliantdiscordBehaviorRecord> KEY_BRILLIANTDISCORD_BEHAVIOR_PRIMARY = Internal.createUniqueKey(BrilliantdiscordBehavior.BRILLIANTDISCORD_BEHAVIOR, DSL.name("KEY_brilliantdiscord_behavior_PRIMARY"), new TableField[] { BrilliantdiscordBehavior.BRILLIANTDISCORD_BEHAVIOR.ID }, true);
    public static final UniqueKey<BrilliantdiscordGroupdataRecord> KEY_BRILLIANTDISCORD_GROUPDATA_GROUP = Internal.createUniqueKey(BrilliantdiscordGroupdata.BRILLIANTDISCORD_GROUPDATA, DSL.name("KEY_brilliantdiscord_groupdata_group"), new TableField[] { BrilliantdiscordGroupdata.BRILLIANTDISCORD_GROUPDATA.GROUP_ID }, true);
    public static final UniqueKey<BrilliantdiscordGroupdataRecord> KEY_BRILLIANTDISCORD_GROUPDATA_PRIMARY = Internal.createUniqueKey(BrilliantdiscordGroupdata.BRILLIANTDISCORD_GROUPDATA, DSL.name("KEY_brilliantdiscord_groupdata_PRIMARY"), new TableField[] { BrilliantdiscordGroupdata.BRILLIANTDISCORD_GROUPDATA.ID }, true);
    public static final UniqueKey<BrilliantdiscordLogsRecord> KEY_BRILLIANTDISCORD_LOGS_PRIMARY = Internal.createUniqueKey(BrilliantdiscordLogs.BRILLIANTDISCORD_LOGS, DSL.name("KEY_brilliantdiscord_logs_PRIMARY"), new TableField[] { BrilliantdiscordLogs.BRILLIANTDISCORD_LOGS.ID }, true);
    public static final UniqueKey<BrilliantdiscordNotificationsRecord> KEY_BRILLIANTDISCORD_NOTIFICATIONS_PRIMARY = Internal.createUniqueKey(BrilliantdiscordNotifications.BRILLIANTDISCORD_NOTIFICATIONS, DSL.name("KEY_brilliantdiscord_notifications_PRIMARY"), new TableField[] { BrilliantdiscordNotifications.BRILLIANTDISCORD_NOTIFICATIONS.ID }, true);
    public static final UniqueKey<BrilliantdiscordRatelimitsRecord> KEY_BRILLIANTDISCORD_RATELIMITS_PRIMARY = Internal.createUniqueKey(BrilliantdiscordRatelimits.BRILLIANTDISCORD_RATELIMITS, DSL.name("KEY_brilliantdiscord_ratelimits_PRIMARY"), new TableField[] { BrilliantdiscordRatelimits.BRILLIANTDISCORD_RATELIMITS.ID }, true);
    public static final UniqueKey<BrilliantdiscordXinvitesRecord> KEY_BRILLIANTDISCORD_XINVITES_CODE = Internal.createUniqueKey(BrilliantdiscordXinvites.BRILLIANTDISCORD_XINVITES, DSL.name("KEY_brilliantdiscord_xinvites_code"), new TableField[] { BrilliantdiscordXinvites.BRILLIANTDISCORD_XINVITES.CODE }, true);
    public static final UniqueKey<BrilliantdiscordXinvitesRecord> KEY_BRILLIANTDISCORD_XINVITES_PRIMARY = Internal.createUniqueKey(BrilliantdiscordXinvites.BRILLIANTDISCORD_XINVITES, DSL.name("KEY_brilliantdiscord_xinvites_PRIMARY"), new TableField[] { BrilliantdiscordXinvites.BRILLIANTDISCORD_XINVITES.ID }, true);
    public static final UniqueKey<CalendarCalendarsRecord> KEY_CALENDAR_CALENDARS_PRIMARY = Internal.createUniqueKey(CalendarCalendars.CALENDAR_CALENDARS, DSL.name("KEY_calendar_calendars_PRIMARY"), new TableField[] { CalendarCalendars.CALENDAR_CALENDARS.CAL_ID }, true);
    public static final UniqueKey<CalendarEventCommentsRecord> KEY_CALENDAR_EVENT_COMMENTS_PRIMARY = Internal.createUniqueKey(CalendarEventComments.CALENDAR_EVENT_COMMENTS, DSL.name("KEY_calendar_event_comments_PRIMARY"), new TableField[] { CalendarEventComments.CALENDAR_EVENT_COMMENTS.COMMENT_ID }, true);
    public static final UniqueKey<CalendarEventRemindersRecord> KEY_CALENDAR_EVENT_REMINDERS_PRIMARY = Internal.createUniqueKey(CalendarEventReminders.CALENDAR_EVENT_REMINDERS, DSL.name("KEY_calendar_event_reminders_PRIMARY"), new TableField[] { CalendarEventReminders.CALENDAR_EVENT_REMINDERS.REMINDER_ID }, true);
    public static final UniqueKey<CalendarEventReviewsRecord> KEY_CALENDAR_EVENT_REVIEWS_PRIMARY = Internal.createUniqueKey(CalendarEventReviews.CALENDAR_EVENT_REVIEWS, DSL.name("KEY_calendar_event_reviews_PRIMARY"), new TableField[] { CalendarEventReviews.CALENDAR_EVENT_REVIEWS.REVIEW_ID }, true);
    public static final UniqueKey<CalendarEventRsvpRecord> KEY_CALENDAR_EVENT_RSVP_PRIMARY = Internal.createUniqueKey(CalendarEventRsvp.CALENDAR_EVENT_RSVP, DSL.name("KEY_calendar_event_rsvp_PRIMARY"), new TableField[] { CalendarEventRsvp.CALENDAR_EVENT_RSVP.RSVP_ID }, true);
    public static final UniqueKey<CalendarEventsRecord> KEY_CALENDAR_EVENTS_PRIMARY = Internal.createUniqueKey(CalendarEvents.CALENDAR_EVENTS, DSL.name("KEY_calendar_events_PRIMARY"), new TableField[] { CalendarEvents.CALENDAR_EVENTS.EVENT_ID }, true);
    public static final UniqueKey<CalendarImportFeedsRecord> KEY_CALENDAR_IMPORT_FEEDS_PRIMARY = Internal.createUniqueKey(CalendarImportFeeds.CALENDAR_IMPORT_FEEDS, DSL.name("KEY_calendar_import_feeds_PRIMARY"), new TableField[] { CalendarImportFeeds.CALENDAR_IMPORT_FEEDS.FEED_ID }, true);
    public static final UniqueKey<CalendarImportMapRecord> KEY_CALENDAR_IMPORT_MAP_PRIMARY = Internal.createUniqueKey(CalendarImportMap.CALENDAR_IMPORT_MAP, DSL.name("KEY_calendar_import_map_PRIMARY"), new TableField[] { CalendarImportMap.CALENDAR_IMPORT_MAP.IMPORT_ID }, true);
    public static final UniqueKey<CalendarVenuesRecord> KEY_CALENDAR_VENUES_PRIMARY = Internal.createUniqueKey(CalendarVenues.CALENDAR_VENUES, DSL.name("KEY_calendar_venues_PRIMARY"), new TableField[] { CalendarVenues.CALENDAR_VENUES.VENUE_ID }, true);
    public static final UniqueKey<ConvertAppSessionsRecord> KEY_CONVERT_APP_SESSIONS_PRIMARY = Internal.createUniqueKey(ConvertAppSessions.CONVERT_APP_SESSIONS, DSL.name("KEY_convert_app_sessions_PRIMARY"), new TableField[] { ConvertAppSessions.CONVERT_APP_SESSIONS.SESSION_APP_ID }, true);
    public static final UniqueKey<ConvertAppsRecord> KEY_CONVERT_APPS_PRIMARY = Internal.createUniqueKey(ConvertApps.CONVERT_APPS, DSL.name("KEY_convert_apps_PRIMARY"), new TableField[] { ConvertApps.CONVERT_APPS.APP_ID }, true);
    public static final UniqueKey<ConvertBbcodeMediatagRecord> KEY_CONVERT_BBCODE_MEDIATAG_PRIMARY = Internal.createUniqueKey(ConvertBbcodeMediatag.CONVERT_BBCODE_MEDIATAG, DSL.name("KEY_convert_bbcode_mediatag_PRIMARY"), new TableField[] { ConvertBbcodeMediatag.CONVERT_BBCODE_MEDIATAG.MEDIATAG_ID }, true);
    public static final UniqueKey<ConvertCustomBbcodeRecord> KEY_CONVERT_CUSTOM_BBCODE_PRIMARY = Internal.createUniqueKey(ConvertCustomBbcode.CONVERT_CUSTOM_BBCODE, DSL.name("KEY_convert_custom_bbcode_PRIMARY"), new TableField[] { ConvertCustomBbcode.CONVERT_CUSTOM_BBCODE.BBCODE_ID }, true);
    public static final UniqueKey<ConvertLinkRecord> KEY_CONVERT_LINK_PRIMARY = Internal.createUniqueKey(ConvertLink.CONVERT_LINK, DSL.name("KEY_convert_link_PRIMARY"), new TableField[] { ConvertLink.CONVERT_LINK.LINK_ID }, true);
    public static final UniqueKey<ConvertLinkPmsRecord> KEY_CONVERT_LINK_PMS_PRIMARY = Internal.createUniqueKey(ConvertLinkPms.CONVERT_LINK_PMS, DSL.name("KEY_convert_link_pms_PRIMARY"), new TableField[] { ConvertLinkPms.CONVERT_LINK_PMS.LINK_ID }, true);
    public static final UniqueKey<ConvertLinkPostsRecord> KEY_CONVERT_LINK_POSTS_PRIMARY = Internal.createUniqueKey(ConvertLinkPosts.CONVERT_LINK_POSTS, DSL.name("KEY_convert_link_posts_PRIMARY"), new TableField[] { ConvertLinkPosts.CONVERT_LINK_POSTS.LINK_ID }, true);
    public static final UniqueKey<ConvertLinkTopicsRecord> KEY_CONVERT_LINK_TOPICS_PRIMARY = Internal.createUniqueKey(ConvertLinkTopics.CONVERT_LINK_TOPICS, DSL.name("KEY_convert_link_topics_PRIMARY"), new TableField[] { ConvertLinkTopics.CONVERT_LINK_TOPICS.LINK_ID }, true);
    public static final UniqueKey<ConvertLogsRecord> KEY_CONVERT_LOGS_PRIMARY = Internal.createUniqueKey(ConvertLogs.CONVERT_LOGS, DSL.name("KEY_convert_logs_PRIMARY"), new TableField[] { ConvertLogs.CONVERT_LOGS.LOG_ID }, true);
    public static final UniqueKey<CoreAchievementsLogRecord> KEY_CORE_ACHIEVEMENTS_LOG_LOOKUP = Internal.createUniqueKey(CoreAchievementsLog.CORE_ACHIEVEMENTS_LOG, DSL.name("KEY_core_achievements_log_lookup"), new TableField[] { CoreAchievementsLog.CORE_ACHIEVEMENTS_LOG.IDENTIFIER, CoreAchievementsLog.CORE_ACHIEVEMENTS_LOG.ACTION }, true);
    public static final UniqueKey<CoreAchievementsLogRecord> KEY_CORE_ACHIEVEMENTS_LOG_PRIMARY = Internal.createUniqueKey(CoreAchievementsLog.CORE_ACHIEVEMENTS_LOG, DSL.name("KEY_core_achievements_log_PRIMARY"), new TableField[] { CoreAchievementsLog.CORE_ACHIEVEMENTS_LOG.ID }, true);
    public static final UniqueKey<CoreAchievementsLogMilestonesRecord> KEY_CORE_ACHIEVEMENTS_LOG_MILESTONES_LOOKUP = Internal.createUniqueKey(CoreAchievementsLogMilestones.CORE_ACHIEVEMENTS_LOG_MILESTONES, DSL.name("KEY_core_achievements_log_milestones_lookup"), new TableField[] { CoreAchievementsLogMilestones.CORE_ACHIEVEMENTS_LOG_MILESTONES.MILESTONE_MEMBER_ID, CoreAchievementsLogMilestones.CORE_ACHIEVEMENTS_LOG_MILESTONES.MILESTONE_RULE, CoreAchievementsLogMilestones.CORE_ACHIEVEMENTS_LOG_MILESTONES.MILESTONE_TYPE }, true);
    public static final UniqueKey<CoreAchievementsLogMilestonesRecord> KEY_CORE_ACHIEVEMENTS_LOG_MILESTONES_PRIMARY = Internal.createUniqueKey(CoreAchievementsLogMilestones.CORE_ACHIEVEMENTS_LOG_MILESTONES, DSL.name("KEY_core_achievements_log_milestones_PRIMARY"), new TableField[] { CoreAchievementsLogMilestones.CORE_ACHIEVEMENTS_LOG_MILESTONES.MILESTONE_ID }, true);
    public static final UniqueKey<CoreAchievementsRulesRecord> KEY_CORE_ACHIEVEMENTS_RULES_PRIMARY = Internal.createUniqueKey(CoreAchievementsRules.CORE_ACHIEVEMENTS_RULES, DSL.name("KEY_core_achievements_rules_PRIMARY"), new TableField[] { CoreAchievementsRules.CORE_ACHIEVEMENTS_RULES.ID }, true);
    public static final UniqueKey<CoreAcpNotifcationsDismissalsRecord> KEY_CORE_ACP_NOTIFCATIONS_DISMISSALS_PRIMARY = Internal.createUniqueKey(CoreAcpNotifcationsDismissals.CORE_ACP_NOTIFCATIONS_DISMISSALS, DSL.name("KEY_core_acp_notifcations_dismissals_PRIMARY"), new TableField[] { CoreAcpNotifcationsDismissals.CORE_ACP_NOTIFCATIONS_DISMISSALS.NOTIFICATION, CoreAcpNotifcationsDismissals.CORE_ACP_NOTIFCATIONS_DISMISSALS.MEMBER }, true);
    public static final UniqueKey<CoreAcpNotificationsRecord> KEY_CORE_ACP_NOTIFICATIONS_PRIMARY = Internal.createUniqueKey(CoreAcpNotifications.CORE_ACP_NOTIFICATIONS, DSL.name("KEY_core_acp_notifications_PRIMARY"), new TableField[] { CoreAcpNotifications.CORE_ACP_NOTIFICATIONS.ID }, true);
    public static final UniqueKey<CoreAcpNotificationsPreferencesRecord> KEY_CORE_ACP_NOTIFICATIONS_PREFERENCES_PRIMARY = Internal.createUniqueKey(CoreAcpNotificationsPreferences.CORE_ACP_NOTIFICATIONS_PREFERENCES, DSL.name("KEY_core_acp_notifications_preferences_PRIMARY"), new TableField[] { CoreAcpNotificationsPreferences.CORE_ACP_NOTIFICATIONS_PREFERENCES.MEMBER, CoreAcpNotificationsPreferences.CORE_ACP_NOTIFICATIONS_PREFERENCES.TYPE }, true);
    public static final UniqueKey<CoreAcpTabOrderRecord> KEY_CORE_ACP_TAB_ORDER_MEMBER_ID = Internal.createUniqueKey(CoreAcpTabOrder.CORE_ACP_TAB_ORDER, DSL.name("KEY_core_acp_tab_order_member_id"), new TableField[] { CoreAcpTabOrder.CORE_ACP_TAB_ORDER.ID }, true);
    public static final UniqueKey<CoreAcronymsRecord> KEY_CORE_ACRONYMS_PRIMARY = Internal.createUniqueKey(CoreAcronyms.CORE_ACRONYMS, DSL.name("KEY_core_acronyms_PRIMARY"), new TableField[] { CoreAcronyms.CORE_ACRONYMS.A_ID }, true);
    public static final UniqueKey<CoreAdminLoginLogsRecord> KEY_CORE_ADMIN_LOGIN_LOGS_PRIMARY = Internal.createUniqueKey(CoreAdminLoginLogs.CORE_ADMIN_LOGIN_LOGS, DSL.name("KEY_core_admin_login_logs_PRIMARY"), new TableField[] { CoreAdminLoginLogs.CORE_ADMIN_LOGIN_LOGS.ADMIN_ID }, true);
    public static final UniqueKey<CoreAdminLogsRecord> KEY_CORE_ADMIN_LOGS_PRIMARY = Internal.createUniqueKey(CoreAdminLogs.CORE_ADMIN_LOGS, DSL.name("KEY_core_admin_logs_PRIMARY"), new TableField[] { CoreAdminLogs.CORE_ADMIN_LOGS.ID }, true);
    public static final UniqueKey<CoreAdminPermissionRowsRecord> KEY_CORE_ADMIN_PERMISSION_ROWS_PRIMARY = Internal.createUniqueKey(CoreAdminPermissionRows.CORE_ADMIN_PERMISSION_ROWS, DSL.name("KEY_core_admin_permission_rows_PRIMARY"), new TableField[] { CoreAdminPermissionRows.CORE_ADMIN_PERMISSION_ROWS.ROW_ID, CoreAdminPermissionRows.CORE_ADMIN_PERMISSION_ROWS.ROW_ID_TYPE }, true);
    public static final UniqueKey<CoreAdvertisementsRecord> KEY_CORE_ADVERTISEMENTS_PRIMARY = Internal.createUniqueKey(CoreAdvertisements.CORE_ADVERTISEMENTS, DSL.name("KEY_core_advertisements_PRIMARY"), new TableField[] { CoreAdvertisements.CORE_ADVERTISEMENTS.AD_ID }, true);
    public static final UniqueKey<CoreAlertsRecord> KEY_CORE_ALERTS_PRIMARY = Internal.createUniqueKey(CoreAlerts.CORE_ALERTS, DSL.name("KEY_core_alerts_PRIMARY"), new TableField[] { CoreAlerts.CORE_ALERTS.ALERT_ID }, true);
    public static final UniqueKey<CoreAlertsSeenRecord> KEY_CORE_ALERTS_SEEN_ALERT_MEMBER = Internal.createUniqueKey(CoreAlertsSeen.CORE_ALERTS_SEEN, DSL.name("KEY_core_alerts_seen_alert_member"), new TableField[] { CoreAlertsSeen.CORE_ALERTS_SEEN.SEEN_ALERT_ID, CoreAlertsSeen.CORE_ALERTS_SEEN.SEEN_MEMBER_ID }, true);
    public static final UniqueKey<CoreAnnouncementsRecord> KEY_CORE_ANNOUNCEMENTS_PRIMARY = Internal.createUniqueKey(CoreAnnouncements.CORE_ANNOUNCEMENTS, DSL.name("KEY_core_announcements_PRIMARY"), new TableField[] { CoreAnnouncements.CORE_ANNOUNCEMENTS.ANNOUNCE_ID }, true);
    public static final UniqueKey<CoreAnonymousPostsRecord> KEY_CORE_ANONYMOUS_POSTS_PRIMARY = Internal.createUniqueKey(CoreAnonymousPosts.CORE_ANONYMOUS_POSTS, DSL.name("KEY_core_anonymous_posts_PRIMARY"), new TableField[] { CoreAnonymousPosts.CORE_ANONYMOUS_POSTS.ANONYMOUS_MEMBER_ID, CoreAnonymousPosts.CORE_ANONYMOUS_POSTS.ANONYMOUS_OBJECT_CLASS, CoreAnonymousPosts.CORE_ANONYMOUS_POSTS.ANONYMOUS_OBJECT_ID }, true);
    public static final UniqueKey<CoreApiKeysRecord> KEY_CORE_API_KEYS_PRIMARY = Internal.createUniqueKey(CoreApiKeys.CORE_API_KEYS, DSL.name("KEY_core_api_keys_PRIMARY"), new TableField[] { CoreApiKeys.CORE_API_KEYS.API_ID }, true);
    public static final UniqueKey<CoreApiLogsRecord> KEY_CORE_API_LOGS_PRIMARY = Internal.createUniqueKey(CoreApiLogs.CORE_API_LOGS, DSL.name("KEY_core_api_logs_PRIMARY"), new TableField[] { CoreApiLogs.CORE_API_LOGS.ID }, true);
    public static final UniqueKey<CoreApiWebhookFiresRecord> KEY_CORE_API_WEBHOOK_FIRES_PRIMARY = Internal.createUniqueKey(CoreApiWebhookFires.CORE_API_WEBHOOK_FIRES, DSL.name("KEY_core_api_webhook_fires_PRIMARY"), new TableField[] { CoreApiWebhookFires.CORE_API_WEBHOOK_FIRES.ID }, true);
    public static final UniqueKey<CoreApiWebhooksRecord> KEY_CORE_API_WEBHOOKS_PRIMARY = Internal.createUniqueKey(CoreApiWebhooks.CORE_API_WEBHOOKS, DSL.name("KEY_core_api_webhooks_PRIMARY"), new TableField[] { CoreApiWebhooks.CORE_API_WEBHOOKS.ID }, true);
    public static final UniqueKey<CoreApplicationsRecord> KEY_CORE_APPLICATIONS_PRIMARY = Internal.createUniqueKey(CoreApplications.CORE_APPLICATIONS, DSL.name("KEY_core_applications_PRIMARY"), new TableField[] { CoreApplications.CORE_APPLICATIONS.APP_ID }, true);
    public static final UniqueKey<CoreApprovalQueueRecord> KEY_CORE_APPROVAL_QUEUE_PRIMARY = Internal.createUniqueKey(CoreApprovalQueue.CORE_APPROVAL_QUEUE, DSL.name("KEY_core_approval_queue_PRIMARY"), new TableField[] { CoreApprovalQueue.CORE_APPROVAL_QUEUE.APPROVAL_ID }, true);
    public static final UniqueKey<CoreAttachmentsRecord> KEY_CORE_ATTACHMENTS_PRIMARY = Internal.createUniqueKey(CoreAttachments.CORE_ATTACHMENTS, DSL.name("KEY_core_attachments_PRIMARY"), new TableField[] { CoreAttachments.CORE_ATTACHMENTS.ATTACH_ID }, true);
    public static final UniqueKey<CoreAutomaticModerationPendingRecord> KEY_CORE_AUTOMATIC_MODERATION_PENDING_PENDING_UNIQUE = Internal.createUniqueKey(CoreAutomaticModerationPending.CORE_AUTOMATIC_MODERATION_PENDING, DSL.name("KEY_core_automatic_moderation_pending_pending_unique"), new TableField[] { CoreAutomaticModerationPending.CORE_AUTOMATIC_MODERATION_PENDING.PENDING_OBJECT_CLASS, CoreAutomaticModerationPending.CORE_AUTOMATIC_MODERATION_PENDING.PENDING_OBJECT_ID }, true);
    public static final UniqueKey<CoreAutomaticModerationRulesRecord> KEY_CORE_AUTOMATIC_MODERATION_RULES_PRIMARY = Internal.createUniqueKey(CoreAutomaticModerationRules.CORE_AUTOMATIC_MODERATION_RULES, DSL.name("KEY_core_automatic_moderation_rules_PRIMARY"), new TableField[] { CoreAutomaticModerationRules.CORE_AUTOMATIC_MODERATION_RULES.RULE_ID }, true);
    public static final UniqueKey<CoreAutomaticModerationTypesRecord> KEY_CORE_AUTOMATIC_MODERATION_TYPES_PRIMARY = Internal.createUniqueKey(CoreAutomaticModerationTypes.CORE_AUTOMATIC_MODERATION_TYPES, DSL.name("KEY_core_automatic_moderation_types_PRIMARY"), new TableField[] { CoreAutomaticModerationTypes.CORE_AUTOMATIC_MODERATION_TYPES.TYPE_ID }, true);
    public static final UniqueKey<CoreBadgesRecord> KEY_CORE_BADGES_PRIMARY = Internal.createUniqueKey(CoreBadges.CORE_BADGES, DSL.name("KEY_core_badges_PRIMARY"), new TableField[] { CoreBadges.CORE_BADGES.ID }, true);
    public static final UniqueKey<CoreBanfiltersRecord> KEY_CORE_BANFILTERS_PRIMARY = Internal.createUniqueKey(CoreBanfilters.CORE_BANFILTERS, DSL.name("KEY_core_banfilters_PRIMARY"), new TableField[] { CoreBanfilters.CORE_BANFILTERS.BAN_ID }, true);
    public static final UniqueKey<CoreBulkMailRecord> KEY_CORE_BULK_MAIL_PRIMARY = Internal.createUniqueKey(CoreBulkMail.CORE_BULK_MAIL, DSL.name("KEY_core_bulk_mail_PRIMARY"), new TableField[] { CoreBulkMail.CORE_BULK_MAIL.MAIL_ID }, true);
    public static final UniqueKey<CoreCacheRecord> KEY_CORE_CACHE_CACHE_KEY = Internal.createUniqueKey(CoreCache.CORE_CACHE, DSL.name("KEY_core_cache_cache_key"), new TableField[] { CoreCache.CORE_CACHE.CACHE_KEY }, true);
    public static final UniqueKey<CoreClubPagesRecord> KEY_CORE_CLUB_PAGES_PRIMARY = Internal.createUniqueKey(CoreClubPages.CORE_CLUB_PAGES, DSL.name("KEY_core_club_pages_PRIMARY"), new TableField[] { CoreClubPages.CORE_CLUB_PAGES.PAGE_ID }, true);
    public static final UniqueKey<CoreClubsRecord> KEY_CORE_CLUBS_PRIMARY = Internal.createUniqueKey(CoreClubs.CORE_CLUBS, DSL.name("KEY_core_clubs_PRIMARY"), new TableField[] { CoreClubs.CORE_CLUBS.ID }, true);
    public static final UniqueKey<CoreClubsFieldsRecord> KEY_CORE_CLUBS_FIELDS_PRIMARY = Internal.createUniqueKey(CoreClubsFields.CORE_CLUBS_FIELDS, DSL.name("KEY_core_clubs_fields_PRIMARY"), new TableField[] { CoreClubsFields.CORE_CLUBS_FIELDS.F_ID }, true);
    public static final UniqueKey<CoreClubsFieldvaluesRecord> KEY_CORE_CLUBS_FIELDVALUES_PRIMARY = Internal.createUniqueKey(CoreClubsFieldvalues.CORE_CLUBS_FIELDVALUES, DSL.name("KEY_core_clubs_fieldvalues_PRIMARY"), new TableField[] { CoreClubsFieldvalues.CORE_CLUBS_FIELDVALUES.CLUB_ID }, true);
    public static final UniqueKey<CoreClubsMembershipsRecord> KEY_CORE_CLUBS_MEMBERSHIPS_PRIMARY = Internal.createUniqueKey(CoreClubsMemberships.CORE_CLUBS_MEMBERSHIPS, DSL.name("KEY_core_clubs_memberships_PRIMARY"), new TableField[] { CoreClubsMemberships.CORE_CLUBS_MEMBERSHIPS.CLUB_ID, CoreClubsMemberships.CORE_CLUBS_MEMBERSHIPS.MEMBER_ID }, true);
    public static final UniqueKey<CoreClubsNodeMapRecord> KEY_CORE_CLUBS_NODE_MAP_PRIMARY = Internal.createUniqueKey(CoreClubsNodeMap.CORE_CLUBS_NODE_MAP, DSL.name("KEY_core_clubs_node_map_PRIMARY"), new TableField[] { CoreClubsNodeMap.CORE_CLUBS_NODE_MAP.ID }, true);
    public static final UniqueKey<CoreContactVerifyRecord> KEY_CORE_CONTACT_VERIFY_PRIMARY = Internal.createUniqueKey(CoreContactVerify.CORE_CONTACT_VERIFY, DSL.name("KEY_core_contact_verify_PRIMARY"), new TableField[] { CoreContactVerify.CORE_CONTACT_VERIFY.EMAIL_ADDRESS }, true);
    public static final UniqueKey<CoreContentFeaturedRecord> KEY_CORE_CONTENT_FEATURED_PRIMARY = Internal.createUniqueKey(CoreContentFeatured.CORE_CONTENT_FEATURED, DSL.name("KEY_core_content_featured_PRIMARY"), new TableField[] { CoreContentFeatured.CORE_CONTENT_FEATURED.FEATURE_ID }, true);
    public static final UniqueKey<CoreContentMetaRecord> KEY_CORE_CONTENT_META_PRIMARY = Internal.createUniqueKey(CoreContentMeta.CORE_CONTENT_META, DSL.name("KEY_core_content_meta_PRIMARY"), new TableField[] { CoreContentMeta.CORE_CONTENT_META.META_ID }, true);
    public static final UniqueKey<CoreDeletionLogRecord> KEY_CORE_DELETION_LOG_PRIMARY = Internal.createUniqueKey(CoreDeletionLog.CORE_DELETION_LOG, DSL.name("KEY_core_deletion_log_PRIMARY"), new TableField[] { CoreDeletionLog.CORE_DELETION_LOG.DELLOG_ID }, true);
    public static final UniqueKey<CoreDevRecord> KEY_CORE_DEV_PRIMARY = Internal.createUniqueKey(CoreDev.CORE_DEV, DSL.name("KEY_core_dev_PRIMARY"), new TableField[] { CoreDev.CORE_DEV.APP_KEY }, true);
    public static final UniqueKey<CoreEditHistoryRecord> KEY_CORE_EDIT_HISTORY_PRIMARY = Internal.createUniqueKey(CoreEditHistory.CORE_EDIT_HISTORY, DSL.name("KEY_core_edit_history_PRIMARY"), new TableField[] { CoreEditHistory.CORE_EDIT_HISTORY.ID }, true);
    public static final UniqueKey<CoreEditorStoredRepliesRecord> KEY_CORE_EDITOR_STORED_REPLIES_PRIMARY = Internal.createUniqueKey(CoreEditorStoredReplies.CORE_EDITOR_STORED_REPLIES, DSL.name("KEY_core_editor_stored_replies_PRIMARY"), new TableField[] { CoreEditorStoredReplies.CORE_EDITOR_STORED_REPLIES.REPLY_ID }, true);
    public static final UniqueKey<CoreEmailTemplatesRecord> KEY_CORE_EMAIL_TEMPLATES_PRIMARY = Internal.createUniqueKey(CoreEmailTemplates.CORE_EMAIL_TEMPLATES, DSL.name("KEY_core_email_templates_PRIMARY"), new TableField[] { CoreEmailTemplates.CORE_EMAIL_TEMPLATES.TEMPLATE_ID }, true);
    public static final UniqueKey<CoreEmailTemplatesRecord> KEY_CORE_EMAIL_TEMPLATES_TEMPLATE_KEY = Internal.createUniqueKey(CoreEmailTemplates.CORE_EMAIL_TEMPLATES, DSL.name("KEY_core_email_templates_template_key"), new TableField[] { CoreEmailTemplates.CORE_EMAIL_TEMPLATES.TEMPLATE_KEY, CoreEmailTemplates.CORE_EMAIL_TEMPLATES.TEMPLATE_PARENT }, true);
    public static final UniqueKey<CoreEmoticonsRecord> KEY_CORE_EMOTICONS_PRIMARY = Internal.createUniqueKey(CoreEmoticons.CORE_EMOTICONS, DSL.name("KEY_core_emoticons_PRIMARY"), new TableField[] { CoreEmoticons.CORE_EMOTICONS.ID }, true);
    public static final UniqueKey<CoreErrorLogsRecord> KEY_CORE_ERROR_LOGS_PRIMARY = Internal.createUniqueKey(CoreErrorLogs.CORE_ERROR_LOGS, DSL.name("KEY_core_error_logs_PRIMARY"), new TableField[] { CoreErrorLogs.CORE_ERROR_LOGS.LOG_ID }, true);
    public static final UniqueKey<CoreFileLogsRecord> KEY_CORE_FILE_LOGS_PRIMARY = Internal.createUniqueKey(CoreFileLogs.CORE_FILE_LOGS, DSL.name("KEY_core_file_logs_PRIMARY"), new TableField[] { CoreFileLogs.CORE_FILE_LOGS.LOG_ID }, true);
    public static final UniqueKey<CoreFileStorageRecord> KEY_CORE_FILE_STORAGE_PRIMARY = Internal.createUniqueKey(CoreFileStorage.CORE_FILE_STORAGE, DSL.name("KEY_core_file_storage_PRIMARY"), new TableField[] { CoreFileStorage.CORE_FILE_STORAGE.ID }, true);
    public static final UniqueKey<CoreFilesRecord> KEY_CORE_FILES_PRIMARY = Internal.createUniqueKey(CoreFiles.CORE_FILES, DSL.name("KEY_core_files_PRIMARY"), new TableField[] { CoreFiles.CORE_FILES.ID }, true);
    public static final UniqueKey<CoreFilesTempRecord> KEY_CORE_FILES_TEMP_PRIMARY = Internal.createUniqueKey(CoreFilesTemp.CORE_FILES_TEMP, DSL.name("KEY_core_files_temp_PRIMARY"), new TableField[] { CoreFilesTemp.CORE_FILES_TEMP.ID }, true);
    public static final UniqueKey<CoreFollowRecord> KEY_CORE_FOLLOW_PRIMARY = Internal.createUniqueKey(CoreFollow.CORE_FOLLOW, DSL.name("KEY_core_follow_PRIMARY"), new TableField[] { CoreFollow.CORE_FOLLOW.FOLLOW_ID }, true);
    public static final UniqueKey<CoreFollowCountCacheRecord> KEY_CORE_FOLLOW_COUNT_CACHE_ID_CLASS = Internal.createUniqueKey(CoreFollowCountCache.CORE_FOLLOW_COUNT_CACHE, DSL.name("KEY_core_follow_count_cache_id_class"), new TableField[] { CoreFollowCountCache.CORE_FOLLOW_COUNT_CACHE.ID, CoreFollowCountCache.CORE_FOLLOW_COUNT_CACHE.CLASS }, true);
    public static final UniqueKey<CoreGeoipCacheRecord> KEY_CORE_GEOIP_CACHE_PRIMARY = Internal.createUniqueKey(CoreGeoipCache.CORE_GEOIP_CACHE, DSL.name("KEY_core_geoip_cache_PRIMARY"), new TableField[] { CoreGeoipCache.CORE_GEOIP_CACHE.IP_ADDRESS }, true);
    public static final UniqueKey<CoreGroupPromotionsRecord> KEY_CORE_GROUP_PROMOTIONS_PRIMARY = Internal.createUniqueKey(CoreGroupPromotions.CORE_GROUP_PROMOTIONS, DSL.name("KEY_core_group_promotions_PRIMARY"), new TableField[] { CoreGroupPromotions.CORE_GROUP_PROMOTIONS.PROMOTE_ID }, true);
    public static final UniqueKey<CoreGroupsRecord> KEY_CORE_GROUPS_PRIMARY = Internal.createUniqueKey(CoreGroups.CORE_GROUPS, DSL.name("KEY_core_groups_PRIMARY"), new TableField[] { CoreGroups.CORE_GROUPS.G_ID }, true);
    public static final UniqueKey<CoreHooksRecord> KEY_CORE_HOOKS_PRIMARY = Internal.createUniqueKey(CoreHooks.CORE_HOOKS, DSL.name("KEY_core_hooks_PRIMARY"), new TableField[] { CoreHooks.CORE_HOOKS.ID }, true);
    public static final UniqueKey<CoreIgnoredUsersRecord> KEY_CORE_IGNORED_USERS_PRIMARY = Internal.createUniqueKey(CoreIgnoredUsers.CORE_IGNORED_USERS, DSL.name("KEY_core_ignored_users_PRIMARY"), new TableField[] { CoreIgnoredUsers.CORE_IGNORED_USERS.IGNORE_ID }, true);
    public static final UniqueKey<CoreIncomingEmailsRecord> KEY_CORE_INCOMING_EMAILS_PRIMARY = Internal.createUniqueKey(CoreIncomingEmails.CORE_INCOMING_EMAILS, DSL.name("KEY_core_incoming_emails_PRIMARY"), new TableField[] { CoreIncomingEmails.CORE_INCOMING_EMAILS.RULE_ID }, true);
    public static final UniqueKey<CoreIpsBulletinsRecord> KEY_CORE_IPS_BULLETINS_PRIMARY = Internal.createUniqueKey(CoreIpsBulletins.CORE_IPS_BULLETINS, DSL.name("KEY_core_ips_bulletins_PRIMARY"), new TableField[] { CoreIpsBulletins.CORE_IPS_BULLETINS.ID }, true);
    public static final UniqueKey<CoreItemMarkersRecord> KEY_CORE_ITEM_MARKERS_COMBO_KEY = Internal.createUniqueKey(CoreItemMarkers.CORE_ITEM_MARKERS, DSL.name("KEY_core_item_markers_combo_key"), new TableField[] { CoreItemMarkers.CORE_ITEM_MARKERS.ITEM_KEY, CoreItemMarkers.CORE_ITEM_MARKERS.ITEM_MEMBER_ID, CoreItemMarkers.CORE_ITEM_MARKERS.ITEM_APP }, true);
    public static final UniqueKey<CoreItemMemberMapRecord> KEY_CORE_ITEM_MEMBER_MAP_MAP_UNIQUE = Internal.createUniqueKey(CoreItemMemberMap.CORE_ITEM_MEMBER_MAP, DSL.name("KEY_core_item_member_map_map_unique"), new TableField[] { CoreItemMemberMap.CORE_ITEM_MEMBER_MAP.MAP_CLASS, CoreItemMemberMap.CORE_ITEM_MEMBER_MAP.MAP_ITEM_ID, CoreItemMemberMap.CORE_ITEM_MEMBER_MAP.MAP_MEMBER_ID }, true);
    public static final UniqueKey<CoreItemRedirectRecord> KEY_CORE_ITEM_REDIRECT_PRIMARY = Internal.createUniqueKey(CoreItemRedirect.CORE_ITEM_REDIRECT, DSL.name("KEY_core_item_redirect_PRIMARY"), new TableField[] { CoreItemRedirect.CORE_ITEM_REDIRECT.REDIRECT_ID }, true);
    public static final UniqueKey<CoreItemStatisticsCacheRecord> KEY_CORE_ITEM_STATISTICS_CACHE_CACHE_LOOKUP = Internal.createUniqueKey(CoreItemStatisticsCache.CORE_ITEM_STATISTICS_CACHE, DSL.name("KEY_core_item_statistics_cache_cache_lookup"), new TableField[] { CoreItemStatisticsCache.CORE_ITEM_STATISTICS_CACHE.CACHE_CLASS, CoreItemStatisticsCache.CORE_ITEM_STATISTICS_CACHE.CACHE_ITEM_ID }, true);
    public static final UniqueKey<CoreItemStatisticsCacheRecord> KEY_CORE_ITEM_STATISTICS_CACHE_PRIMARY = Internal.createUniqueKey(CoreItemStatisticsCache.CORE_ITEM_STATISTICS_CACHE, DSL.name("KEY_core_item_statistics_cache_PRIMARY"), new TableField[] { CoreItemStatisticsCache.CORE_ITEM_STATISTICS_CACHE.CACHE_ID }, true);
    public static final UniqueKey<CoreJavascriptRecord> KEY_CORE_JAVASCRIPT_JAVASCRIPT_LOOKUP = Internal.createUniqueKey(CoreJavascript.CORE_JAVASCRIPT, DSL.name("KEY_core_javascript_javascript_lookup"), new TableField[] { CoreJavascript.CORE_JAVASCRIPT.JAVASCRIPT_APP, CoreJavascript.CORE_JAVASCRIPT.JAVASCRIPT_LOCATION, CoreJavascript.CORE_JAVASCRIPT.JAVASCRIPT_PATH, CoreJavascript.CORE_JAVASCRIPT.JAVASCRIPT_NAME }, true);
    public static final UniqueKey<CoreJavascriptRecord> KEY_CORE_JAVASCRIPT_PRIMARY = Internal.createUniqueKey(CoreJavascript.CORE_JAVASCRIPT, DSL.name("KEY_core_javascript_PRIMARY"), new TableField[] { CoreJavascript.CORE_JAVASCRIPT.JAVASCRIPT_ID }, true);
    public static final UniqueKey<CoreLeadersRecord> KEY_CORE_LEADERS_LEADER_TYPE = Internal.createUniqueKey(CoreLeaders.CORE_LEADERS, DSL.name("KEY_core_leaders_leader_type"), new TableField[] { CoreLeaders.CORE_LEADERS.LEADER_TYPE, CoreLeaders.CORE_LEADERS.LEADER_TYPE_ID }, true);
    public static final UniqueKey<CoreLeadersRecord> KEY_CORE_LEADERS_PRIMARY = Internal.createUniqueKey(CoreLeaders.CORE_LEADERS, DSL.name("KEY_core_leaders_PRIMARY"), new TableField[] { CoreLeaders.CORE_LEADERS.LEADER_ID }, true);
    public static final UniqueKey<CoreLeadersGroupsRecord> KEY_CORE_LEADERS_GROUPS_PRIMARY = Internal.createUniqueKey(CoreLeadersGroups.CORE_LEADERS_GROUPS, DSL.name("KEY_core_leaders_groups_PRIMARY"), new TableField[] { CoreLeadersGroups.CORE_LEADERS_GROUPS.GROUP_ID }, true);
    public static final UniqueKey<CoreLogRecord> KEY_CORE_LOG_PRIMARY = Internal.createUniqueKey(CoreLog.CORE_LOG, DSL.name("KEY_core_log_PRIMARY"), new TableField[] { CoreLog.CORE_LOG.ID }, true);
    public static final UniqueKey<CoreLoginFailuresRecord> KEY_CORE_LOGIN_FAILURES_PRIMARY = Internal.createUniqueKey(CoreLoginFailures.CORE_LOGIN_FAILURES, DSL.name("KEY_core_login_failures_PRIMARY"), new TableField[] { CoreLoginFailures.CORE_LOGIN_FAILURES.LOGIN_ID }, true);
    public static final UniqueKey<CoreLoginHandlersRecord> KEY_CORE_LOGIN_HANDLERS_PRIMARY = Internal.createUniqueKey(CoreLoginHandlers.CORE_LOGIN_HANDLERS, DSL.name("KEY_core_login_handlers_PRIMARY"), new TableField[] { CoreLoginHandlers.CORE_LOGIN_HANDLERS.LOGIN_KEY }, true);
    public static final UniqueKey<CoreLoginLinksRecord> KEY_CORE_LOGIN_LINKS_PRIMARY = Internal.createUniqueKey(CoreLoginLinks.CORE_LOGIN_LINKS, DSL.name("KEY_core_login_links_PRIMARY"), new TableField[] { CoreLoginLinks.CORE_LOGIN_LINKS.TOKEN_LOGIN_METHOD, CoreLoginLinks.CORE_LOGIN_LINKS.TOKEN_MEMBER }, true);
    public static final UniqueKey<CoreLoginLinksRecord> KEY_CORE_LOGIN_LINKS_TOKEN_IDENTIFIER = Internal.createUniqueKey(CoreLoginLinks.CORE_LOGIN_LINKS, DSL.name("KEY_core_login_links_token_identifier"), new TableField[] { CoreLoginLinks.CORE_LOGIN_LINKS.TOKEN_LOGIN_METHOD, CoreLoginLinks.CORE_LOGIN_LINKS.TOKEN_IDENTIFIER }, true);
    public static final UniqueKey<CoreLoginMethodsRecord> KEY_CORE_LOGIN_METHODS_PRIMARY = Internal.createUniqueKey(CoreLoginMethods.CORE_LOGIN_METHODS, DSL.name("KEY_core_login_methods_PRIMARY"), new TableField[] { CoreLoginMethods.CORE_LOGIN_METHODS.LOGIN_ID }, true);
    public static final UniqueKey<CoreMailErrorLogsRecord> KEY_CORE_MAIL_ERROR_LOGS_PRIMARY = Internal.createUniqueKey(CoreMailErrorLogs.CORE_MAIL_ERROR_LOGS, DSL.name("KEY_core_mail_error_logs_PRIMARY"), new TableField[] { CoreMailErrorLogs.CORE_MAIL_ERROR_LOGS.MLOG_ID }, true);
    public static final UniqueKey<CoreMemberBadgesRecord> KEY_CORE_MEMBER_BADGES_LOOKUP = Internal.createUniqueKey(CoreMemberBadges.CORE_MEMBER_BADGES, DSL.name("KEY_core_member_badges_lookup"), new TableField[] { CoreMemberBadges.CORE_MEMBER_BADGES.MEMBER, CoreMemberBadges.CORE_MEMBER_BADGES.BADGE, CoreMemberBadges.CORE_MEMBER_BADGES.RECOGNIZE }, true);
    public static final UniqueKey<CoreMemberBadgesRecord> KEY_CORE_MEMBER_BADGES_PRIMARY = Internal.createUniqueKey(CoreMemberBadges.CORE_MEMBER_BADGES, DSL.name("KEY_core_member_badges_PRIMARY"), new TableField[] { CoreMemberBadges.CORE_MEMBER_BADGES.ID }, true);
    public static final UniqueKey<CoreMemberHistoryRecord> KEY_CORE_MEMBER_HISTORY_PRIMARY = Internal.createUniqueKey(CoreMemberHistory.CORE_MEMBER_HISTORY, DSL.name("KEY_core_member_history_PRIMARY"), new TableField[] { CoreMemberHistory.CORE_MEMBER_HISTORY.LOG_ID }, true);
    public static final UniqueKey<CoreMemberPrivacyActionsRecord> KEY_CORE_MEMBER_PRIVACY_ACTIONS_PRIMARY = Internal.createUniqueKey(CoreMemberPrivacyActions.CORE_MEMBER_PRIVACY_ACTIONS, DSL.name("KEY_core_member_privacy_actions_PRIMARY"), new TableField[] { CoreMemberPrivacyActions.CORE_MEMBER_PRIVACY_ACTIONS.ID }, true);
    public static final UniqueKey<CoreMemberRanksRecord> KEY_CORE_MEMBER_RANKS_PRIMARY = Internal.createUniqueKey(CoreMemberRanks.CORE_MEMBER_RANKS, DSL.name("KEY_core_member_ranks_PRIMARY"), new TableField[] { CoreMemberRanks.CORE_MEMBER_RANKS.ID }, true);
    public static final UniqueKey<CoreMemberRecognizeRecord> KEY_CORE_MEMBER_RECOGNIZE_PRIMARY = Internal.createUniqueKey(CoreMemberRecognize.CORE_MEMBER_RECOGNIZE, DSL.name("KEY_core_member_recognize_PRIMARY"), new TableField[] { CoreMemberRecognize.CORE_MEMBER_RECOGNIZE.R_ID }, true);
    public static final UniqueKey<CoreMemberStatusRepliesRecord> KEY_CORE_MEMBER_STATUS_REPLIES_PRIMARY = Internal.createUniqueKey(CoreMemberStatusReplies.CORE_MEMBER_STATUS_REPLIES, DSL.name("KEY_core_member_status_replies_PRIMARY"), new TableField[] { CoreMemberStatusReplies.CORE_MEMBER_STATUS_REPLIES.REPLY_ID }, true);
    public static final UniqueKey<CoreMemberStatusUpdatesRecord> KEY_CORE_MEMBER_STATUS_UPDATES_PRIMARY = Internal.createUniqueKey(CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES, DSL.name("KEY_core_member_status_updates_PRIMARY"), new TableField[] { CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES.STATUS_ID }, true);
    public static final UniqueKey<CoreMembersRecord> KEY_CORE_MEMBERS_PRIMARY = Internal.createUniqueKey(CoreMembers.CORE_MEMBERS, DSL.name("KEY_core_members_PRIMARY"), new TableField[] { CoreMembers.CORE_MEMBERS.MEMBER_ID }, true);
    public static final UniqueKey<CoreMembersFeatureSeenRecord> KEY_CORE_MEMBERS_FEATURE_SEEN_PRIMARY = Internal.createUniqueKey(CoreMembersFeatureSeen.CORE_MEMBERS_FEATURE_SEEN, DSL.name("KEY_core_members_feature_seen_PRIMARY"), new TableField[] { CoreMembersFeatureSeen.CORE_MEMBERS_FEATURE_SEEN.FEATURE_ID, CoreMembersFeatureSeen.CORE_MEMBERS_FEATURE_SEEN.MEMBER_ID }, true);
    public static final UniqueKey<CoreMembersKnownDevicesRecord> KEY_CORE_MEMBERS_KNOWN_DEVICES_PRIMARY = Internal.createUniqueKey(CoreMembersKnownDevices.CORE_MEMBERS_KNOWN_DEVICES, DSL.name("KEY_core_members_known_devices_PRIMARY"), new TableField[] { CoreMembersKnownDevices.CORE_MEMBERS_KNOWN_DEVICES.DEVICE_KEY, CoreMembersKnownDevices.CORE_MEMBERS_KNOWN_DEVICES.MEMBER_ID }, true);
    public static final UniqueKey<CoreMembersKnownIpAddressesRecord> KEY_CORE_MEMBERS_KNOWN_IP_ADDRESSES_PRIMARY = Internal.createUniqueKey(CoreMembersKnownIpAddresses.CORE_MEMBERS_KNOWN_IP_ADDRESSES, DSL.name("KEY_core_members_known_ip_addresses_PRIMARY"), new TableField[] { CoreMembersKnownIpAddresses.CORE_MEMBERS_KNOWN_IP_ADDRESSES.DEVICE_KEY, CoreMembersKnownIpAddresses.CORE_MEMBERS_KNOWN_IP_ADDRESSES.MEMBER_ID, CoreMembersKnownIpAddresses.CORE_MEMBERS_KNOWN_IP_ADDRESSES.IP_ADDRESS }, true);
    public static final UniqueKey<CoreMembersLoginsRecord> KEY_CORE_MEMBERS_LOGINS_LOOKUP = Internal.createUniqueKey(CoreMembersLogins.CORE_MEMBERS_LOGINS, DSL.name("KEY_core_members_logins_lookup"), new TableField[] { CoreMembersLogins.CORE_MEMBERS_LOGINS.MEMBER_ID, CoreMembersLogins.CORE_MEMBERS_LOGINS.MEMBER_DATE }, true);
    public static final UniqueKey<CoreMembersWarnActionsRecord> KEY_CORE_MEMBERS_WARN_ACTIONS_PRIMARY = Internal.createUniqueKey(CoreMembersWarnActions.CORE_MEMBERS_WARN_ACTIONS, DSL.name("KEY_core_members_warn_actions_PRIMARY"), new TableField[] { CoreMembersWarnActions.CORE_MEMBERS_WARN_ACTIONS.WA_ID }, true);
    public static final UniqueKey<CoreMembersWarnLogsRecord> KEY_CORE_MEMBERS_WARN_LOGS_PRIMARY = Internal.createUniqueKey(CoreMembersWarnLogs.CORE_MEMBERS_WARN_LOGS, DSL.name("KEY_core_members_warn_logs_PRIMARY"), new TableField[] { CoreMembersWarnLogs.CORE_MEMBERS_WARN_LOGS.WL_ID }, true);
    public static final UniqueKey<CoreMembersWarnReasonsRecord> KEY_CORE_MEMBERS_WARN_REASONS_PRIMARY = Internal.createUniqueKey(CoreMembersWarnReasons.CORE_MEMBERS_WARN_REASONS, DSL.name("KEY_core_members_warn_reasons_PRIMARY"), new TableField[] { CoreMembersWarnReasons.CORE_MEMBERS_WARN_REASONS.WR_ID }, true);
    public static final UniqueKey<CoreMenuRecord> KEY_CORE_MENU_PRIMARY = Internal.createUniqueKey(CoreMenu.CORE_MENU, DSL.name("KEY_core_menu_PRIMARY"), new TableField[] { CoreMenu.CORE_MENU.ID }, true);
    public static final UniqueKey<CoreMessagePostsRecord> KEY_CORE_MESSAGE_POSTS_PRIMARY = Internal.createUniqueKey(CoreMessagePosts.CORE_MESSAGE_POSTS, DSL.name("KEY_core_message_posts_PRIMARY"), new TableField[] { CoreMessagePosts.CORE_MESSAGE_POSTS.MSG_ID }, true);
    public static final UniqueKey<CoreMessageTopicUserMapRecord> KEY_CORE_MESSAGE_TOPIC_USER_MAP_MAP_MAIN = Internal.createUniqueKey(CoreMessageTopicUserMap.CORE_MESSAGE_TOPIC_USER_MAP, DSL.name("KEY_core_message_topic_user_map_map_main"), new TableField[] { CoreMessageTopicUserMap.CORE_MESSAGE_TOPIC_USER_MAP.MAP_USER_ID, CoreMessageTopicUserMap.CORE_MESSAGE_TOPIC_USER_MAP.MAP_TOPIC_ID }, true);
    public static final UniqueKey<CoreMessageTopicUserMapRecord> KEY_CORE_MESSAGE_TOPIC_USER_MAP_PRIMARY = Internal.createUniqueKey(CoreMessageTopicUserMap.CORE_MESSAGE_TOPIC_USER_MAP, DSL.name("KEY_core_message_topic_user_map_PRIMARY"), new TableField[] { CoreMessageTopicUserMap.CORE_MESSAGE_TOPIC_USER_MAP.MAP_ID }, true);
    public static final UniqueKey<CoreMessageTopicsRecord> KEY_CORE_MESSAGE_TOPICS_PRIMARY = Internal.createUniqueKey(CoreMessageTopics.CORE_MESSAGE_TOPICS, DSL.name("KEY_core_message_topics_PRIMARY"), new TableField[] { CoreMessageTopics.CORE_MESSAGE_TOPICS.MT_ID }, true);
    public static final UniqueKey<CoreModeratorLogsRecord> KEY_CORE_MODERATOR_LOGS_PRIMARY = Internal.createUniqueKey(CoreModeratorLogs.CORE_MODERATOR_LOGS, DSL.name("KEY_core_moderator_logs_PRIMARY"), new TableField[] { CoreModeratorLogs.CORE_MODERATOR_LOGS.ID }, true);
    public static final UniqueKey<CoreModeratorsRecord> KEY_CORE_MODERATORS_PRIMARY = Internal.createUniqueKey(CoreModerators.CORE_MODERATORS, DSL.name("KEY_core_moderators_PRIMARY"), new TableField[] { CoreModerators.CORE_MODERATORS.TYPE, CoreModerators.CORE_MODERATORS.ID }, true);
    public static final UniqueKey<CoreModulesRecord> KEY_CORE_MODULES_IDENTIFIER = Internal.createUniqueKey(CoreModules.CORE_MODULES, DSL.name("KEY_core_modules_identifier"), new TableField[] { CoreModules.CORE_MODULES.SYS_MODULE_APPLICATION, CoreModules.CORE_MODULES.SYS_MODULE_KEY, CoreModules.CORE_MODULES.SYS_MODULE_AREA }, true);
    public static final UniqueKey<CoreModulesRecord> KEY_CORE_MODULES_PRIMARY = Internal.createUniqueKey(CoreModules.CORE_MODULES, DSL.name("KEY_core_modules_PRIMARY"), new TableField[] { CoreModules.CORE_MODULES.SYS_MODULE_ID }, true);
    public static final UniqueKey<CoreNotificationDefaultsRecord> KEY_CORE_NOTIFICATION_DEFAULTS_PRIMARY = Internal.createUniqueKey(CoreNotificationDefaults.CORE_NOTIFICATION_DEFAULTS, DSL.name("KEY_core_notification_defaults_PRIMARY"), new TableField[] { CoreNotificationDefaults.CORE_NOTIFICATION_DEFAULTS.NOTIFICATION_KEY }, true);
    public static final UniqueKey<CoreNotificationPreferencesRecord> KEY_CORE_NOTIFICATION_PREFERENCES_PRIMARY = Internal.createUniqueKey(CoreNotificationPreferences.CORE_NOTIFICATION_PREFERENCES, DSL.name("KEY_core_notification_preferences_PRIMARY"), new TableField[] { CoreNotificationPreferences.CORE_NOTIFICATION_PREFERENCES.MEMBER_ID, CoreNotificationPreferences.CORE_NOTIFICATION_PREFERENCES.NOTIFICATION_KEY }, true);
    public static final UniqueKey<CoreNotificationsRecord> KEY_CORE_NOTIFICATIONS_PRIMARY = Internal.createUniqueKey(CoreNotifications.CORE_NOTIFICATIONS, DSL.name("KEY_core_notifications_PRIMARY"), new TableField[] { CoreNotifications.CORE_NOTIFICATIONS.ID }, true);
    public static final UniqueKey<CoreNotificationsPwaKeysRecord> KEY_CORE_NOTIFICATIONS_PWA_KEYS_PRIMARY = Internal.createUniqueKey(CoreNotificationsPwaKeys.CORE_NOTIFICATIONS_PWA_KEYS, DSL.name("KEY_core_notifications_pwa_keys_PRIMARY"), new TableField[] { CoreNotificationsPwaKeys.CORE_NOTIFICATIONS_PWA_KEYS.ID }, true);
    public static final UniqueKey<CoreNotificationsPwaQueueRecord> KEY_CORE_NOTIFICATIONS_PWA_QUEUE_PRIMARY = Internal.createUniqueKey(CoreNotificationsPwaQueue.CORE_NOTIFICATIONS_PWA_QUEUE, DSL.name("KEY_core_notifications_pwa_queue_PRIMARY"), new TableField[] { CoreNotificationsPwaQueue.CORE_NOTIFICATIONS_PWA_QUEUE.ID }, true);
    public static final UniqueKey<CoreOauthAuthorizePromptsRecord> KEY_CORE_OAUTH_AUTHORIZE_PROMPTS_PRIMARY = Internal.createUniqueKey(CoreOauthAuthorizePrompts.CORE_OAUTH_AUTHORIZE_PROMPTS, DSL.name("KEY_core_oauth_authorize_prompts_PRIMARY"), new TableField[] { CoreOauthAuthorizePrompts.CORE_OAUTH_AUTHORIZE_PROMPTS.SESSION_ID }, true);
    public static final UniqueKey<CoreOauthClientsRecord> KEY_CORE_OAUTH_CLIENTS_PRIMARY = Internal.createUniqueKey(CoreOauthClients.CORE_OAUTH_CLIENTS, DSL.name("KEY_core_oauth_clients_PRIMARY"), new TableField[] { CoreOauthClients.CORE_OAUTH_CLIENTS.OAUTH_CLIENT_ID }, true);
    public static final UniqueKey<CoreOauthServerAccessTokensRecord> KEY_CORE_OAUTH_SERVER_ACCESS_TOKENS_ACCESS_LOOKUP = Internal.createUniqueKey(CoreOauthServerAccessTokens.CORE_OAUTH_SERVER_ACCESS_TOKENS, DSL.name("KEY_core_oauth_server_access_tokens_access_lookup"), new TableField[] { CoreOauthServerAccessTokens.CORE_OAUTH_SERVER_ACCESS_TOKENS.CLIENT_ID, CoreOauthServerAccessTokens.CORE_OAUTH_SERVER_ACCESS_TOKENS.ACCESS_TOKEN }, true);
    public static final UniqueKey<CoreOauthServerAccessTokensRecord> KEY_CORE_OAUTH_SERVER_ACCESS_TOKENS_REFRESH_LOOKUP = Internal.createUniqueKey(CoreOauthServerAccessTokens.CORE_OAUTH_SERVER_ACCESS_TOKENS, DSL.name("KEY_core_oauth_server_access_tokens_refresh_lookup"), new TableField[] { CoreOauthServerAccessTokens.CORE_OAUTH_SERVER_ACCESS_TOKENS.CLIENT_ID, CoreOauthServerAccessTokens.CORE_OAUTH_SERVER_ACCESS_TOKENS.REFRESH_TOKEN }, true);
    public static final UniqueKey<CoreOauthServerAuthorizationCodesRecord> KEY_CORE_OAUTH_SERVER_AUTHORIZATION_CODES_AUTHORIZATION_CODE = Internal.createUniqueKey(CoreOauthServerAuthorizationCodes.CORE_OAUTH_SERVER_AUTHORIZATION_CODES, DSL.name("KEY_core_oauth_server_authorization_codes_authorization_code"), new TableField[] { CoreOauthServerAuthorizationCodes.CORE_OAUTH_SERVER_AUTHORIZATION_CODES.CLIENT_ID, CoreOauthServerAuthorizationCodes.CORE_OAUTH_SERVER_AUTHORIZATION_CODES.CODE }, true);
    public static final UniqueKey<CoreOutputCacheRecord> KEY_CORE_OUTPUT_CACHE_PRIMARY = Internal.createUniqueKey(CoreOutputCache.CORE_OUTPUT_CACHE, DSL.name("KEY_core_output_cache_PRIMARY"), new TableField[] { CoreOutputCache.CORE_OUTPUT_CACHE.CACHE_KEY }, true);
    public static final UniqueKey<CorePermissionIndexRecord> KEY_CORE_PERMISSION_INDEX_PERM_TYPE = Internal.createUniqueKey(CorePermissionIndex.CORE_PERMISSION_INDEX, DSL.name("KEY_core_permission_index_perm_type"), new TableField[] { CorePermissionIndex.CORE_PERMISSION_INDEX.APP, CorePermissionIndex.CORE_PERMISSION_INDEX.PERM_TYPE, CorePermissionIndex.CORE_PERMISSION_INDEX.PERM_TYPE_ID }, true);
    public static final UniqueKey<CorePermissionIndexRecord> KEY_CORE_PERMISSION_INDEX_PRIMARY = Internal.createUniqueKey(CorePermissionIndex.CORE_PERMISSION_INDEX, DSL.name("KEY_core_permission_index_PRIMARY"), new TableField[] { CorePermissionIndex.CORE_PERMISSION_INDEX.PERM_ID }, true);
    public static final UniqueKey<CorePfieldsContentRecord> KEY_CORE_PFIELDS_CONTENT_PRIMARY = Internal.createUniqueKey(CorePfieldsContent.CORE_PFIELDS_CONTENT, DSL.name("KEY_core_pfields_content_PRIMARY"), new TableField[] { CorePfieldsContent.CORE_PFIELDS_CONTENT.MEMBER_ID }, true);
    public static final UniqueKey<CorePfieldsDataRecord> KEY_CORE_PFIELDS_DATA_PRIMARY = Internal.createUniqueKey(CorePfieldsData.CORE_PFIELDS_DATA, DSL.name("KEY_core_pfields_data_PRIMARY"), new TableField[] { CorePfieldsData.CORE_PFIELDS_DATA.PF_ID }, true);
    public static final UniqueKey<CorePfieldsGroupsRecord> KEY_CORE_PFIELDS_GROUPS_PRIMARY = Internal.createUniqueKey(CorePfieldsGroups.CORE_PFIELDS_GROUPS, DSL.name("KEY_core_pfields_groups_PRIMARY"), new TableField[] { CorePfieldsGroups.CORE_PFIELDS_GROUPS.PF_GROUP_ID }, true);
    public static final UniqueKey<CorePluginsRecord> KEY_CORE_PLUGINS_PRIMARY = Internal.createUniqueKey(CorePlugins.CORE_PLUGINS, DSL.name("KEY_core_plugins_PRIMARY"), new TableField[] { CorePlugins.CORE_PLUGINS.PLUGIN_ID }, true);
    public static final UniqueKey<CorePointsLogRecord> KEY_CORE_POINTS_LOG_PRIMARY = Internal.createUniqueKey(CorePointsLog.CORE_POINTS_LOG, DSL.name("KEY_core_points_log_PRIMARY"), new TableField[] { CorePointsLog.CORE_POINTS_LOG.ID }, true);
    public static final UniqueKey<CorePollsRecord> KEY_CORE_POLLS_PRIMARY = Internal.createUniqueKey(CorePolls.CORE_POLLS, DSL.name("KEY_core_polls_PRIMARY"), new TableField[] { CorePolls.CORE_POLLS.PID }, true);
    public static final UniqueKey<CorePostBeforeRegisteringRecord> KEY_CORE_POST_BEFORE_REGISTERING_CONTENT_LOOKUP = Internal.createUniqueKey(CorePostBeforeRegistering.CORE_POST_BEFORE_REGISTERING, DSL.name("KEY_core_post_before_registering_content_lookup"), new TableField[] { CorePostBeforeRegistering.CORE_POST_BEFORE_REGISTERING.CLASS, CorePostBeforeRegistering.CORE_POST_BEFORE_REGISTERING.ID }, true);
    public static final UniqueKey<CoreProfanityFiltersRecord> KEY_CORE_PROFANITY_FILTERS_PRIMARY = Internal.createUniqueKey(CoreProfanityFilters.CORE_PROFANITY_FILTERS, DSL.name("KEY_core_profanity_filters_PRIMARY"), new TableField[] { CoreProfanityFilters.CORE_PROFANITY_FILTERS.WID }, true);
    public static final UniqueKey<CoreProfileCompletionRecord> KEY_CORE_PROFILE_COMPLETION_PRIMARY = Internal.createUniqueKey(CoreProfileCompletion.CORE_PROFILE_COMPLETION, DSL.name("KEY_core_profile_completion_PRIMARY"), new TableField[] { CoreProfileCompletion.CORE_PROFILE_COMPLETION.ID }, true);
    public static final UniqueKey<CoreProfileStepsRecord> KEY_CORE_PROFILE_STEPS_PRIMARY = Internal.createUniqueKey(CoreProfileSteps.CORE_PROFILE_STEPS, DSL.name("KEY_core_profile_steps_PRIMARY"), new TableField[] { CoreProfileSteps.CORE_PROFILE_STEPS.STEP_ID }, true);
    public static final UniqueKey<CoreQuestionAndAnswerRecord> KEY_CORE_QUESTION_AND_ANSWER_PRIMARY = Internal.createUniqueKey(CoreQuestionAndAnswer.CORE_QUESTION_AND_ANSWER, DSL.name("KEY_core_question_and_answer_PRIMARY"), new TableField[] { CoreQuestionAndAnswer.CORE_QUESTION_AND_ANSWER.QA_ID }, true);
    public static final UniqueKey<CoreQueueRecord> KEY_CORE_QUEUE_PRIMARY = Internal.createUniqueKey(CoreQueue.CORE_QUEUE, DSL.name("KEY_core_queue_PRIMARY"), new TableField[] { CoreQueue.CORE_QUEUE.ID }, true);
    public static final UniqueKey<CoreRatingsRecord> KEY_CORE_RATINGS_MEMBER_LOOKUP = Internal.createUniqueKey(CoreRatings.CORE_RATINGS, DSL.name("KEY_core_ratings_member_lookup"), new TableField[] { CoreRatings.CORE_RATINGS.MEMBER, CoreRatings.CORE_RATINGS.CLASS, CoreRatings.CORE_RATINGS.ITEM_ID }, true);
    public static final UniqueKey<CoreRatingsRecord> KEY_CORE_RATINGS_PRIMARY = Internal.createUniqueKey(CoreRatings.CORE_RATINGS, DSL.name("KEY_core_ratings_PRIMARY"), new TableField[] { CoreRatings.CORE_RATINGS.ID }, true);
    public static final UniqueKey<CoreRcAuthorNotificationTextRecord> KEY_CORE_RC_AUTHOR_NOTIFICATION_TEXT_PRIMARY = Internal.createUniqueKey(CoreRcAuthorNotificationText.CORE_RC_AUTHOR_NOTIFICATION_TEXT, DSL.name("KEY_core_rc_author_notification_text_PRIMARY"), new TableField[] { CoreRcAuthorNotificationText.CORE_RC_AUTHOR_NOTIFICATION_TEXT.ID }, true);
    public static final UniqueKey<CoreRcCommentsRecord> KEY_CORE_RC_COMMENTS_PRIMARY = Internal.createUniqueKey(CoreRcComments.CORE_RC_COMMENTS, DSL.name("KEY_core_rc_comments_PRIMARY"), new TableField[] { CoreRcComments.CORE_RC_COMMENTS.ID }, true);
    public static final UniqueKey<CoreRcIndexRecord> KEY_CORE_RC_INDEX_PRIMARY = Internal.createUniqueKey(CoreRcIndex.CORE_RC_INDEX, DSL.name("KEY_core_rc_index_PRIMARY"), new TableField[] { CoreRcIndex.CORE_RC_INDEX.ID }, true);
    public static final UniqueKey<CoreRcReportsRecord> KEY_CORE_RC_REPORTS_PRIMARY = Internal.createUniqueKey(CoreRcReports.CORE_RC_REPORTS, DSL.name("KEY_core_rc_reports_PRIMARY"), new TableField[] { CoreRcReports.CORE_RC_REPORTS.ID }, true);
    public static final UniqueKey<CoreReactionsRecord> KEY_CORE_REACTIONS_PRIMARY = Internal.createUniqueKey(CoreReactions.CORE_REACTIONS, DSL.name("KEY_core_reactions_PRIMARY"), new TableField[] { CoreReactions.CORE_REACTIONS.REACTION_ID }, true);
    public static final UniqueKey<CoreReferralBannersRecord> KEY_CORE_REFERRAL_BANNERS_PRIMARY = Internal.createUniqueKey(CoreReferralBanners.CORE_REFERRAL_BANNERS, DSL.name("KEY_core_referral_banners_PRIMARY"), new TableField[] { CoreReferralBanners.CORE_REFERRAL_BANNERS.RB_ID }, true);
    public static final UniqueKey<CoreReferralsRecord> KEY_CORE_REFERRALS_PRIMARY = Internal.createUniqueKey(CoreReferrals.CORE_REFERRALS, DSL.name("KEY_core_referrals_PRIMARY"), new TableField[] { CoreReferrals.CORE_REFERRALS.MEMBER_ID }, true);
    public static final UniqueKey<CoreReputationIndexRecord> KEY_CORE_REPUTATION_INDEX_PRIMARY = Internal.createUniqueKey(CoreReputationIndex.CORE_REPUTATION_INDEX, DSL.name("KEY_core_reputation_index_PRIMARY"), new TableField[] { CoreReputationIndex.CORE_REPUTATION_INDEX.ID }, true);
    public static final UniqueKey<CoreReputationLeaderboardHistoryRecord> KEY_CORE_REPUTATION_LEADERBOARD_HISTORY_LEADER_DATE = Internal.createUniqueKey(CoreReputationLeaderboardHistory.CORE_REPUTATION_LEADERBOARD_HISTORY, DSL.name("KEY_core_reputation_leaderboard_history_leader_date"), new TableField[] { CoreReputationLeaderboardHistory.CORE_REPUTATION_LEADERBOARD_HISTORY.LEADER_DATE, CoreReputationLeaderboardHistory.CORE_REPUTATION_LEADERBOARD_HISTORY.LEADER_MEMBER_ID }, true);
    public static final UniqueKey<CoreReputationLevelsRecord> KEY_CORE_REPUTATION_LEVELS_PRIMARY = Internal.createUniqueKey(CoreReputationLevels.CORE_REPUTATION_LEVELS, DSL.name("KEY_core_reputation_levels_PRIMARY"), new TableField[] { CoreReputationLevels.CORE_REPUTATION_LEVELS.LEVEL_ID }, true);
    public static final UniqueKey<CoreRssExportRecord> KEY_CORE_RSS_EXPORT_PRIMARY = Internal.createUniqueKey(CoreRssExport.CORE_RSS_EXPORT, DSL.name("KEY_core_rss_export_PRIMARY"), new TableField[] { CoreRssExport.CORE_RSS_EXPORT.RSS_ID }, true);
    public static final UniqueKey<CoreRssImportRecord> KEY_CORE_RSS_IMPORT_PRIMARY = Internal.createUniqueKey(CoreRssImport.CORE_RSS_IMPORT, DSL.name("KEY_core_rss_import_PRIMARY"), new TableField[] { CoreRssImport.CORE_RSS_IMPORT.RSS_IMPORT_ID }, true);
    public static final UniqueKey<CoreRssImportedRecord> KEY_CORE_RSS_IMPORTED_PRIMARY = Internal.createUniqueKey(CoreRssImported.CORE_RSS_IMPORTED, DSL.name("KEY_core_rss_imported_PRIMARY"), new TableField[] { CoreRssImported.CORE_RSS_IMPORTED.RSS_IMPORTED_GUID }, true);
    public static final UniqueKey<CoreS3DeletionsRecord> KEY_CORE_S3_DELETIONS_PRIMARY = Internal.createUniqueKey(CoreS3Deletions.CORE_S3_DELETIONS, DSL.name("KEY_core_s3_deletions_PRIMARY"), new TableField[] { CoreS3Deletions.CORE_S3_DELETIONS.S3_CONTAINER }, true);
    public static final UniqueKey<CoreSavedChartsRecord> KEY_CORE_SAVED_CHARTS_PRIMARY = Internal.createUniqueKey(CoreSavedCharts.CORE_SAVED_CHARTS, DSL.name("KEY_core_saved_charts_PRIMARY"), new TableField[] { CoreSavedCharts.CORE_SAVED_CHARTS.CHART_ID }, true);
    public static final UniqueKey<CoreSearchIndexRecord> KEY_CORE_SEARCH_INDEX_OBJECT = Internal.createUniqueKey(CoreSearchIndex.CORE_SEARCH_INDEX, DSL.name("KEY_core_search_index_object"), new TableField[] { CoreSearchIndex.CORE_SEARCH_INDEX.INDEX_CLASS, CoreSearchIndex.CORE_SEARCH_INDEX.INDEX_OBJECT_ID }, true);
    public static final UniqueKey<CoreSearchIndexRecord> KEY_CORE_SEARCH_INDEX_PRIMARY = Internal.createUniqueKey(CoreSearchIndex.CORE_SEARCH_INDEX, DSL.name("KEY_core_search_index_PRIMARY"), new TableField[] { CoreSearchIndex.CORE_SEARCH_INDEX.INDEX_ID }, true);
    public static final UniqueKey<CoreSearchIndexItemMapRecord> KEY_CORE_SEARCH_INDEX_ITEM_MAP_SEARCH_MAP = Internal.createUniqueKey(CoreSearchIndexItemMap.CORE_SEARCH_INDEX_ITEM_MAP, DSL.name("KEY_core_search_index_item_map_search_map"), new TableField[] { CoreSearchIndexItemMap.CORE_SEARCH_INDEX_ITEM_MAP.INDEX_ITEM_ID, CoreSearchIndexItemMap.CORE_SEARCH_INDEX_ITEM_MAP.INDEX_CLASS, CoreSearchIndexItemMap.CORE_SEARCH_INDEX_ITEM_MAP.INDEX_AUTHOR_ID }, true);
    public static final UniqueKey<CoreSecurityAnswersRecord> KEY_CORE_SECURITY_ANSWERS_QUESTION_AND_MEMBER = Internal.createUniqueKey(CoreSecurityAnswers.CORE_SECURITY_ANSWERS, DSL.name("KEY_core_security_answers_question_and_member"), new TableField[] { CoreSecurityAnswers.CORE_SECURITY_ANSWERS.ANSWER_QUESTION_ID, CoreSecurityAnswers.CORE_SECURITY_ANSWERS.ANSWER_MEMBER_ID }, true);
    public static final UniqueKey<CoreSecurityQuestionsRecord> KEY_CORE_SECURITY_QUESTIONS_PRIMARY = Internal.createUniqueKey(CoreSecurityQuestions.CORE_SECURITY_QUESTIONS, DSL.name("KEY_core_security_questions_PRIMARY"), new TableField[] { CoreSecurityQuestions.CORE_SECURITY_QUESTIONS.QUESTION_ID }, true);
    public static final UniqueKey<CoreSeoMetaRecord> KEY_CORE_SEO_META_PRIMARY = Internal.createUniqueKey(CoreSeoMeta.CORE_SEO_META, DSL.name("KEY_core_seo_meta_PRIMARY"), new TableField[] { CoreSeoMeta.CORE_SEO_META.META_ID }, true);
    public static final UniqueKey<CoreSessionsRecord> KEY_CORE_SESSIONS_PRIMARY = Internal.createUniqueKey(CoreSessions.CORE_SESSIONS, DSL.name("KEY_core_sessions_PRIMARY"), new TableField[] { CoreSessions.CORE_SESSIONS.ID }, true);
    public static final UniqueKey<CoreShareLinksRecord> KEY_CORE_SHARE_LINKS_PRIMARY = Internal.createUniqueKey(CoreShareLinks.CORE_SHARE_LINKS, DSL.name("KEY_core_share_links_PRIMARY"), new TableField[] { CoreShareLinks.CORE_SHARE_LINKS.SHARE_ID }, true);
    public static final UniqueKey<CoreSitemapRecord> KEY_CORE_SITEMAP_PRIMARY = Internal.createUniqueKey(CoreSitemap.CORE_SITEMAP, DSL.name("KEY_core_sitemap_PRIMARY"), new TableField[] { CoreSitemap.CORE_SITEMAP.SITEMAP }, true);
    public static final UniqueKey<CoreSocialPromoteRecord> KEY_CORE_SOCIAL_PROMOTE_PRIMARY = Internal.createUniqueKey(CoreSocialPromote.CORE_SOCIAL_PROMOTE, DSL.name("KEY_core_social_promote_PRIMARY"), new TableField[] { CoreSocialPromote.CORE_SOCIAL_PROMOTE.PROMOTE_ID }, true);
    public static final UniqueKey<CoreSocialPromoteContentRecord> KEY_CORE_SOCIAL_PROMOTE_CONTENT_PRIMARY = Internal.createUniqueKey(CoreSocialPromoteContent.CORE_SOCIAL_PROMOTE_CONTENT, DSL.name("KEY_core_social_promote_content_PRIMARY"), new TableField[] { CoreSocialPromoteContent.CORE_SOCIAL_PROMOTE_CONTENT.RESPONSE_ID }, true);
    public static final UniqueKey<CoreSocialPromoteSharersRecord> KEY_CORE_SOCIAL_PROMOTE_SHARERS_PRIMARY = Internal.createUniqueKey(CoreSocialPromoteSharers.CORE_SOCIAL_PROMOTE_SHARERS, DSL.name("KEY_core_social_promote_sharers_PRIMARY"), new TableField[] { CoreSocialPromoteSharers.CORE_SOCIAL_PROMOTE_SHARERS.SHARER_ID }, true);
    public static final UniqueKey<CoreSoftDeleteLogRecord> KEY_CORE_SOFT_DELETE_LOG_PRIMARY = Internal.createUniqueKey(CoreSoftDeleteLog.CORE_SOFT_DELETE_LOG, DSL.name("KEY_core_soft_delete_log_PRIMARY"), new TableField[] { CoreSoftDeleteLog.CORE_SOFT_DELETE_LOG.SDL_ID }, true);
    public static final UniqueKey<CoreSolvedIndexRecord> KEY_CORE_SOLVED_INDEX_PRIMARY = Internal.createUniqueKey(CoreSolvedIndex.CORE_SOLVED_INDEX, DSL.name("KEY_core_solved_index_PRIMARY"), new TableField[] { CoreSolvedIndex.CORE_SOLVED_INDEX.ID }, true);
    public static final UniqueKey<CoreSpamServiceLogRecord> KEY_CORE_SPAM_SERVICE_LOG_PRIMARY = Internal.createUniqueKey(CoreSpamServiceLog.CORE_SPAM_SERVICE_LOG, DSL.name("KEY_core_spam_service_log_PRIMARY"), new TableField[] { CoreSpamServiceLog.CORE_SPAM_SERVICE_LOG.ID }, true);
    public static final UniqueKey<CoreSpamWhitelistRecord> KEY_CORE_SPAM_WHITELIST_PRIMARY = Internal.createUniqueKey(CoreSpamWhitelist.CORE_SPAM_WHITELIST, DSL.name("KEY_core_spam_whitelist_PRIMARY"), new TableField[] { CoreSpamWhitelist.CORE_SPAM_WHITELIST.WHITELIST_ID }, true);
    public static final UniqueKey<CoreStatisticsRecord> KEY_CORE_STATISTICS_PRIMARY = Internal.createUniqueKey(CoreStatistics.CORE_STATISTICS, DSL.name("KEY_core_statistics_PRIMARY"), new TableField[] { CoreStatistics.CORE_STATISTICS.ID }, true);
    public static final UniqueKey<CoreStoreRecord> KEY_CORE_STORE_PRIMARY = Internal.createUniqueKey(CoreStore.CORE_STORE, DSL.name("KEY_core_store_PRIMARY"), new TableField[] { CoreStore.CORE_STORE.STORE_KEY }, true);
    public static final UniqueKey<CoreStreamSubscriptionsRecord> KEY_CORE_STREAM_SUBSCRIPTIONS_MEMBER_STREAM = Internal.createUniqueKey(CoreStreamSubscriptions.CORE_STREAM_SUBSCRIPTIONS, DSL.name("KEY_core_stream_subscriptions_member_stream"), new TableField[] { CoreStreamSubscriptions.CORE_STREAM_SUBSCRIPTIONS.MEMBER_ID, CoreStreamSubscriptions.CORE_STREAM_SUBSCRIPTIONS.STREAM_ID }, true);
    public static final UniqueKey<CoreStreamSubscriptionsRecord> KEY_CORE_STREAM_SUBSCRIPTIONS_PRIMARY = Internal.createUniqueKey(CoreStreamSubscriptions.CORE_STREAM_SUBSCRIPTIONS, DSL.name("KEY_core_stream_subscriptions_PRIMARY"), new TableField[] { CoreStreamSubscriptions.CORE_STREAM_SUBSCRIPTIONS.ID }, true);
    public static final UniqueKey<CoreStreamsRecord> KEY_CORE_STREAMS_PRIMARY = Internal.createUniqueKey(CoreStreams.CORE_STREAMS, DSL.name("KEY_core_streams_PRIMARY"), new TableField[] { CoreStreams.CORE_STREAMS.ID }, true);
    public static final UniqueKey<CoreSysConfSettingsRecord> KEY_CORE_SYS_CONF_SETTINGS_CONF_KEY = Internal.createUniqueKey(CoreSysConfSettings.CORE_SYS_CONF_SETTINGS, DSL.name("KEY_core_sys_conf_settings_conf_key"), new TableField[] { CoreSysConfSettings.CORE_SYS_CONF_SETTINGS.CONF_KEY }, true);
    public static final UniqueKey<CoreSysConfSettingsRecord> KEY_CORE_SYS_CONF_SETTINGS_PRIMARY = Internal.createUniqueKey(CoreSysConfSettings.CORE_SYS_CONF_SETTINGS, DSL.name("KEY_core_sys_conf_settings_PRIMARY"), new TableField[] { CoreSysConfSettings.CORE_SYS_CONF_SETTINGS.CONF_ID }, true);
    public static final UniqueKey<CoreSysCpSessionsRecord> KEY_CORE_SYS_CP_SESSIONS_PRIMARY = Internal.createUniqueKey(CoreSysCpSessions.CORE_SYS_CP_SESSIONS, DSL.name("KEY_core_sys_cp_sessions_PRIMARY"), new TableField[] { CoreSysCpSessions.CORE_SYS_CP_SESSIONS.SESSION_ID }, true);
    public static final UniqueKey<CoreSysLangRecord> KEY_CORE_SYS_LANG_PRIMARY = Internal.createUniqueKey(CoreSysLang.CORE_SYS_LANG, DSL.name("KEY_core_sys_lang_PRIMARY"), new TableField[] { CoreSysLang.CORE_SYS_LANG.LANG_ID }, true);
    public static final UniqueKey<CoreSysLangWordsRecord> KEY_CORE_SYS_LANG_WORDS_PRIMARY = Internal.createUniqueKey(CoreSysLangWords.CORE_SYS_LANG_WORDS, DSL.name("KEY_core_sys_lang_words_PRIMARY"), new TableField[] { CoreSysLangWords.CORE_SYS_LANG_WORDS.WORD_ID }, true);
    public static final UniqueKey<CoreSysLangWordsRecord> KEY_CORE_SYS_LANG_WORDS_WORD_KEY = Internal.createUniqueKey(CoreSysLangWords.CORE_SYS_LANG_WORDS, DSL.name("KEY_core_sys_lang_words_word_key"), new TableField[] { CoreSysLangWords.CORE_SYS_LANG_WORDS.WORD_KEY, CoreSysLangWords.CORE_SYS_LANG_WORDS.WORD_APP, CoreSysLangWords.CORE_SYS_LANG_WORDS.LANG_ID, CoreSysLangWords.CORE_SYS_LANG_WORDS.WORD_JS }, true);
    public static final UniqueKey<CoreSysSocialGroupsRecord> KEY_CORE_SYS_SOCIAL_GROUPS_PRIMARY = Internal.createUniqueKey(CoreSysSocialGroups.CORE_SYS_SOCIAL_GROUPS, DSL.name("KEY_core_sys_social_groups_PRIMARY"), new TableField[] { CoreSysSocialGroups.CORE_SYS_SOCIAL_GROUPS.GROUP_ID }, true);
    public static final UniqueKey<CoreTagsRecord> KEY_CORE_TAGS_PRIMARY = Internal.createUniqueKey(CoreTags.CORE_TAGS, DSL.name("KEY_core_tags_PRIMARY"), new TableField[] { CoreTags.CORE_TAGS.TAG_ID }, true);
    public static final UniqueKey<CoreTagsCacheRecord> KEY_CORE_TAGS_CACHE_TAG_CACHE_KEY = Internal.createUniqueKey(CoreTagsCache.CORE_TAGS_CACHE, DSL.name("KEY_core_tags_cache_tag_cache_key"), new TableField[] { CoreTagsCache.CORE_TAGS_CACHE.TAG_CACHE_KEY }, true);
    public static final UniqueKey<CoreTagsPermsRecord> KEY_CORE_TAGS_PERMS_TAG_PERM_AAI_LOOKUP = Internal.createUniqueKey(CoreTagsPerms.CORE_TAGS_PERMS, DSL.name("KEY_core_tags_perms_tag_perm_aai_lookup"), new TableField[] { CoreTagsPerms.CORE_TAGS_PERMS.TAG_PERM_AAI_LOOKUP }, true);
    public static final UniqueKey<CoreTasksRecord> KEY_CORE_TASKS_KEY = Internal.createUniqueKey(CoreTasks.CORE_TASKS, DSL.name("KEY_core_tasks_key"), new TableField[] { CoreTasks.CORE_TASKS.KEY }, true);
    public static final UniqueKey<CoreTasksRecord> KEY_CORE_TASKS_PRIMARY = Internal.createUniqueKey(CoreTasks.CORE_TASKS, DSL.name("KEY_core_tasks_PRIMARY"), new TableField[] { CoreTasks.CORE_TASKS.ID }, true);
    public static final UniqueKey<CoreThemeConflictRecord> KEY_CORE_THEME_CONFLICT_PRIMARY = Internal.createUniqueKey(CoreThemeConflict.CORE_THEME_CONFLICT, DSL.name("KEY_core_theme_conflict_PRIMARY"), new TableField[] { CoreThemeConflict.CORE_THEME_CONFLICT.CONFLICT_ID }, true);
    public static final UniqueKey<CoreThemeContentHistoryRecord> KEY_CORE_THEME_CONTENT_HISTORY_PRIMARY = Internal.createUniqueKey(CoreThemeContentHistory.CORE_THEME_CONTENT_HISTORY, DSL.name("KEY_core_theme_content_history_PRIMARY"), new TableField[] { CoreThemeContentHistory.CORE_THEME_CONTENT_HISTORY.CONTENT_ID }, true);
    public static final UniqueKey<CoreThemeCssRecord> KEY_CORE_THEME_CSS_PRIMARY = Internal.createUniqueKey(CoreThemeCss.CORE_THEME_CSS, DSL.name("KEY_core_theme_css_PRIMARY"), new TableField[] { CoreThemeCss.CORE_THEME_CSS.CSS_ID }, true);
    public static final UniqueKey<CoreThemeCssRecord> KEY_CORE_THEME_CSS_UNIQUE_KEY = Internal.createUniqueKey(CoreThemeCss.CORE_THEME_CSS, DSL.name("KEY_core_theme_css_unique_key"), new TableField[] { CoreThemeCss.CORE_THEME_CSS.CSS_SET_ID, CoreThemeCss.CORE_THEME_CSS.CSS_APP, CoreThemeCss.CORE_THEME_CSS.CSS_LOCATION, CoreThemeCss.CORE_THEME_CSS.CSS_PATH, CoreThemeCss.CORE_THEME_CSS.CSS_NAME }, true);
    public static final UniqueKey<CoreThemeResourcesRecord> KEY_CORE_THEME_RESOURCES_PRIMARY = Internal.createUniqueKey(CoreThemeResources.CORE_THEME_RESOURCES, DSL.name("KEY_core_theme_resources_PRIMARY"), new TableField[] { CoreThemeResources.CORE_THEME_RESOURCES.RESOURCE_ID }, true);
    public static final UniqueKey<CoreThemeSettingsFieldsRecord> KEY_CORE_THEME_SETTINGS_FIELDS_PRIMARY = Internal.createUniqueKey(CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS, DSL.name("KEY_core_theme_settings_fields_PRIMARY"), new TableField[] { CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_ID }, true);
    public static final UniqueKey<CoreThemeSettingsFieldsRecord> KEY_CORE_THEME_SETTINGS_FIELDS_REPLACE_KEY = Internal.createUniqueKey(CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS, DSL.name("KEY_core_theme_settings_fields_replace_key"), new TableField[] { CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_SET_ID, CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_KEY, CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_APP }, true);
    public static final UniqueKey<CoreThemeTemplatesRecord> KEY_CORE_THEME_TEMPLATES_PRIMARY = Internal.createUniqueKey(CoreThemeTemplates.CORE_THEME_TEMPLATES, DSL.name("KEY_core_theme_templates_PRIMARY"), new TableField[] { CoreThemeTemplates.CORE_THEME_TEMPLATES.TEMPLATE_ID }, true);
    public static final UniqueKey<CoreThemeTemplatesRecord> KEY_CORE_THEME_TEMPLATES_UNIQUE_KEY = Internal.createUniqueKey(CoreThemeTemplates.CORE_THEME_TEMPLATES, DSL.name("KEY_core_theme_templates_unique_key"), new TableField[] { CoreThemeTemplates.CORE_THEME_TEMPLATES.TEMPLATE_SET_ID, CoreThemeTemplates.CORE_THEME_TEMPLATES.TEMPLATE_LOCATION, CoreThemeTemplates.CORE_THEME_TEMPLATES.TEMPLATE_APP, CoreThemeTemplates.CORE_THEME_TEMPLATES.TEMPLATE_GROUP, CoreThemeTemplates.CORE_THEME_TEMPLATES.TEMPLATE_NAME }, true);
    public static final UniqueKey<CoreThemesRecord> KEY_CORE_THEMES_PRIMARY = Internal.createUniqueKey(CoreThemes.CORE_THEMES, DSL.name("KEY_core_themes_PRIMARY"), new TableField[] { CoreThemes.CORE_THEMES.SET_ID }, true);
    public static final UniqueKey<CoreUpgradeHistoryRecord> KEY_CORE_UPGRADE_HISTORY_PRIMARY = Internal.createUniqueKey(CoreUpgradeHistory.CORE_UPGRADE_HISTORY, DSL.name("KEY_core_upgrade_history_PRIMARY"), new TableField[] { CoreUpgradeHistory.CORE_UPGRADE_HISTORY.UPGRADE_ID }, true);
    public static final UniqueKey<CoreValidatingRecord> KEY_CORE_VALIDATING_PRIMARY = Internal.createUniqueKey(CoreValidating.CORE_VALIDATING, DSL.name("KEY_core_validating_PRIMARY"), new TableField[] { CoreValidating.CORE_VALIDATING.VID }, true);
    public static final UniqueKey<CoreVotersRecord> KEY_CORE_VOTERS_PRIMARY = Internal.createUniqueKey(CoreVoters.CORE_VOTERS, DSL.name("KEY_core_voters_PRIMARY"), new TableField[] { CoreVoters.CORE_VOTERS.VID }, true);
    public static final UniqueKey<CoreWidgetAreasRecord> KEY_CORE_WIDGET_AREAS_CONTROLLER = Internal.createUniqueKey(CoreWidgetAreas.CORE_WIDGET_AREAS, DSL.name("KEY_core_widget_areas_controller"), new TableField[] { CoreWidgetAreas.CORE_WIDGET_AREAS.APP, CoreWidgetAreas.CORE_WIDGET_AREAS.MODULE, CoreWidgetAreas.CORE_WIDGET_AREAS.CONTROLLER, CoreWidgetAreas.CORE_WIDGET_AREAS.AREA }, true);
    public static final UniqueKey<CoreWidgetAreasRecord> KEY_CORE_WIDGET_AREAS_PRIMARY = Internal.createUniqueKey(CoreWidgetAreas.CORE_WIDGET_AREAS, DSL.name("KEY_core_widget_areas_PRIMARY"), new TableField[] { CoreWidgetAreas.CORE_WIDGET_AREAS.ID }, true);
    public static final UniqueKey<CoreWidgetTrashRecord> KEY_CORE_WIDGET_TRASH_PRIMARY = Internal.createUniqueKey(CoreWidgetTrash.CORE_WIDGET_TRASH, DSL.name("KEY_core_widget_trash_PRIMARY"), new TableField[] { CoreWidgetTrash.CORE_WIDGET_TRASH.ID }, true);
    public static final UniqueKey<CoreWidgetsRecord> KEY_CORE_WIDGETS_PRIMARY = Internal.createUniqueKey(CoreWidgets.CORE_WIDGETS, DSL.name("KEY_core_widgets_PRIMARY"), new TableField[] { CoreWidgets.CORE_WIDGETS.ID }, true);
    public static final UniqueKey<CoreWidgetsRecord> KEY_CORE_WIDGETS_WIDGET_KEY = Internal.createUniqueKey(CoreWidgets.CORE_WIDGETS, DSL.name("KEY_core_widgets_widget_key"), new TableField[] { CoreWidgets.CORE_WIDGETS.KEY }, true);
    public static final UniqueKey<ForumsAnswerRatingsRecord> KEY_FORUMS_ANSWER_RATINGS_MEMBER_RATING = Internal.createUniqueKey(ForumsAnswerRatings.FORUMS_ANSWER_RATINGS, DSL.name("KEY_forums_answer_ratings_member_rating"), new TableField[] { ForumsAnswerRatings.FORUMS_ANSWER_RATINGS.MEMBER, ForumsAnswerRatings.FORUMS_ANSWER_RATINGS.POST }, true);
    public static final UniqueKey<ForumsAnswerRatingsRecord> KEY_FORUMS_ANSWER_RATINGS_PRIMARY = Internal.createUniqueKey(ForumsAnswerRatings.FORUMS_ANSWER_RATINGS, DSL.name("KEY_forums_answer_ratings_PRIMARY"), new TableField[] { ForumsAnswerRatings.FORUMS_ANSWER_RATINGS.ID }, true);
    public static final UniqueKey<ForumsArchivePostsRecord> KEY_FORUMS_ARCHIVE_POSTS_PRIMARY = Internal.createUniqueKey(ForumsArchivePosts.FORUMS_ARCHIVE_POSTS, DSL.name("KEY_forums_archive_posts_PRIMARY"), new TableField[] { ForumsArchivePosts.FORUMS_ARCHIVE_POSTS.ARCHIVE_ID }, true);
    public static final UniqueKey<ForumsArchiveRulesRecord> KEY_FORUMS_ARCHIVE_RULES_PRIMARY = Internal.createUniqueKey(ForumsArchiveRules.FORUMS_ARCHIVE_RULES, DSL.name("KEY_forums_archive_rules_PRIMARY"), new TableField[] { ForumsArchiveRules.FORUMS_ARCHIVE_RULES.ARCHIVE_KEY }, true);
    public static final UniqueKey<ForumsForumsRecord> KEY_FORUMS_FORUMS_PRIMARY = Internal.createUniqueKey(ForumsForums.FORUMS_FORUMS, DSL.name("KEY_forums_forums_PRIMARY"), new TableField[] { ForumsForums.FORUMS_FORUMS.ID }, true);
    public static final UniqueKey<ForumsPostsRecord> KEY_FORUMS_POSTS_PRIMARY = Internal.createUniqueKey(ForumsPosts.FORUMS_POSTS, DSL.name("KEY_forums_posts_PRIMARY"), new TableField[] { ForumsPosts.FORUMS_POSTS.PID }, true);
    public static final UniqueKey<ForumsQuestionRatingsRecord> KEY_FORUMS_QUESTION_RATINGS_MEMBER_RATING = Internal.createUniqueKey(ForumsQuestionRatings.FORUMS_QUESTION_RATINGS, DSL.name("KEY_forums_question_ratings_member_rating"), new TableField[] { ForumsQuestionRatings.FORUMS_QUESTION_RATINGS.MEMBER, ForumsQuestionRatings.FORUMS_QUESTION_RATINGS.TOPIC }, true);
    public static final UniqueKey<ForumsQuestionRatingsRecord> KEY_FORUMS_QUESTION_RATINGS_PRIMARY = Internal.createUniqueKey(ForumsQuestionRatings.FORUMS_QUESTION_RATINGS, DSL.name("KEY_forums_question_ratings_PRIMARY"), new TableField[] { ForumsQuestionRatings.FORUMS_QUESTION_RATINGS.ID }, true);
    public static final UniqueKey<ForumsTopicMmodRecord> KEY_FORUMS_TOPIC_MMOD_PRIMARY = Internal.createUniqueKey(ForumsTopicMmod.FORUMS_TOPIC_MMOD, DSL.name("KEY_forums_topic_mmod_PRIMARY"), new TableField[] { ForumsTopicMmod.FORUMS_TOPIC_MMOD.MM_ID }, true);
    public static final UniqueKey<ForumsTopicsRecord> KEY_FORUMS_TOPICS_PRIMARY = Internal.createUniqueKey(ForumsTopics.FORUMS_TOPICS, DSL.name("KEY_forums_topics_PRIMARY"), new TableField[] { ForumsTopics.FORUMS_TOPICS.TID }, true);
    public static final UniqueKey<ForumsViewMethodRecord> KEY_FORUMS_VIEW_METHOD_MEMBER_ID = Internal.createUniqueKey(ForumsViewMethod.FORUMS_VIEW_METHOD, DSL.name("KEY_forums_view_method_member_id"), new TableField[] { ForumsViewMethod.FORUMS_VIEW_METHOD.MEMBER_ID, ForumsViewMethod.FORUMS_VIEW_METHOD.TYPE }, true);
    public static final UniqueKey<PatreonintegrationTierRecord> KEY_PATREONINTEGRATION_TIER_UID = Internal.createUniqueKey(PatreonintegrationTier.PATREONINTEGRATION_TIER, DSL.name("KEY_patreonintegration_tier_uid"), new TableField[] { PatreonintegrationTier.PATREONINTEGRATION_TIER.ID }, true);
    public static final UniqueKey<PatreonintegrationUserRecord> KEY_PATREONINTEGRATION_USER_UNIQUE_PATREON_ID = Internal.createUniqueKey(PatreonintegrationUser.PATREONINTEGRATION_USER, DSL.name("KEY_patreonintegration_user_unique_patreon_id"), new TableField[] { PatreonintegrationUser.PATREONINTEGRATION_USER.PATREON_ID }, true);
    public static final UniqueKey<PatreonintegrationUserRecord> KEY_PATREONINTEGRATION_USER_UNIQUE_USER_ID = Internal.createUniqueKey(PatreonintegrationUser.PATREONINTEGRATION_USER, DSL.name("KEY_patreonintegration_user_unique_user_id"), new TableField[] { PatreonintegrationUser.PATREONINTEGRATION_USER.MEMBER_ID }, true);
}
