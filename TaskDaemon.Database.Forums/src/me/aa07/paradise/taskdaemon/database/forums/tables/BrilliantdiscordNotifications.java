/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.BrilliantdiscordNotificationsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BrilliantdiscordNotifications extends TableImpl<BrilliantdiscordNotificationsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.brilliantdiscord_notifications</code>
     */
    public static final BrilliantdiscordNotifications BRILLIANTDISCORD_NOTIFICATIONS = new BrilliantdiscordNotifications();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BrilliantdiscordNotificationsRecord> getRecordType() {
        return BrilliantdiscordNotificationsRecord.class;
    }

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_notifications.id</code>. ID Number
     */
    public final TableField<BrilliantdiscordNotificationsRecord, ULong> ID = createField(DSL.name("id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "ID Number");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_notifications.name</code>.
     */
    public final TableField<BrilliantdiscordNotificationsRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_notifications.position</code>.
     */
    public final TableField<BrilliantdiscordNotificationsRecord, Integer> POSITION = createField(DSL.name("position"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_notifications.item_class</code>.
     */
    public final TableField<BrilliantdiscordNotificationsRecord, String> ITEM_CLASS = createField(DSL.name("item_class"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_notifications.conditions</code>.
     */
    public final TableField<BrilliantdiscordNotificationsRecord, String> CONDITIONS = createField(DSL.name("conditions"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_notifications.enabled</code>.
     */
    public final TableField<BrilliantdiscordNotificationsRecord, Boolean> ENABLED = createField(DSL.name("enabled"), SQLDataType.BIT.nullable(false).defaultValue(DSL.inline("b'0'", SQLDataType.BIT)), this, "");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_notifications.notification_settings</code>.
     */
    public final TableField<BrilliantdiscordNotificationsRecord, String> NOTIFICATION_SETTINGS = createField(DSL.name("notification_settings"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_notifications.webhook</code>.
     */
    public final TableField<BrilliantdiscordNotificationsRecord, String> WEBHOOK = createField(DSL.name("webhook"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_notifications.instant_post</code>.
     */
    public final TableField<BrilliantdiscordNotificationsRecord, Boolean> INSTANT_POST = createField(DSL.name("instant_post"), SQLDataType.BIT.nullable(false).defaultValue(DSL.inline("b'1'", SQLDataType.BIT)), this, "");

    private BrilliantdiscordNotifications(Name alias, Table<BrilliantdiscordNotificationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private BrilliantdiscordNotifications(Name alias, Table<BrilliantdiscordNotificationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>paradise_forums.brilliantdiscord_notifications</code> table
     * reference
     */
    public BrilliantdiscordNotifications(String alias) {
        this(DSL.name(alias), BRILLIANTDISCORD_NOTIFICATIONS);
    }

    /**
     * Create an aliased
     * <code>paradise_forums.brilliantdiscord_notifications</code> table
     * reference
     */
    public BrilliantdiscordNotifications(Name alias) {
        this(alias, BRILLIANTDISCORD_NOTIFICATIONS);
    }

    /**
     * Create a <code>paradise_forums.brilliantdiscord_notifications</code>
     * table reference
     */
    public BrilliantdiscordNotifications() {
        this(DSL.name("brilliantdiscord_notifications"), null);
    }

    public <O extends Record> BrilliantdiscordNotifications(Table<O> child, ForeignKey<O, BrilliantdiscordNotificationsRecord> key) {
        super(child, key, BRILLIANTDISCORD_NOTIFICATIONS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.BRILLIANTDISCORD_NOTIFICATIONS_ITEM_CLASS);
    }

    @Override
    public Identity<BrilliantdiscordNotificationsRecord, ULong> getIdentity() {
        return (Identity<BrilliantdiscordNotificationsRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<BrilliantdiscordNotificationsRecord> getPrimaryKey() {
        return Keys.KEY_BRILLIANTDISCORD_NOTIFICATIONS_PRIMARY;
    }

    @Override
    public BrilliantdiscordNotifications as(String alias) {
        return new BrilliantdiscordNotifications(DSL.name(alias), this);
    }

    @Override
    public BrilliantdiscordNotifications as(Name alias) {
        return new BrilliantdiscordNotifications(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BrilliantdiscordNotifications rename(String name) {
        return new BrilliantdiscordNotifications(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BrilliantdiscordNotifications rename(Name name) {
        return new BrilliantdiscordNotifications(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<ULong, String, Integer, String, String, Boolean, String, String, Boolean> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
