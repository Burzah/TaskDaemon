/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CalendarEventReminders;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalendarEventRemindersRecord extends UpdatableRecordImpl<CalendarEventRemindersRecord> implements Record5<ULong, ULong, ULong, UInteger, UInteger> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>paradise_forums.calendar_event_reminders.reminder_id</code>. ID
     * Number
     */
    public void setReminderId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.calendar_event_reminders.reminder_id</code>. ID
     * Number
     */
    public ULong getReminderId() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>paradise_forums.calendar_event_reminders.reminder_event_id</code>.
     * Event to remind about
     */
    public void setReminderEventId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.calendar_event_reminders.reminder_event_id</code>.
     * Event to remind about
     */
    public ULong getReminderEventId() {
        return (ULong) get(1);
    }

    /**
     * Setter for
     * <code>paradise_forums.calendar_event_reminders.reminder_member_id</code>.
     * Member to notify
     */
    public void setReminderMemberId(ULong value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.calendar_event_reminders.reminder_member_id</code>.
     * Member to notify
     */
    public ULong getReminderMemberId() {
        return (ULong) get(2);
    }

    /**
     * Setter for
     * <code>paradise_forums.calendar_event_reminders.reminder_date</code>.
     * Timestamp after which to send notification
     */
    public void setReminderDate(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.calendar_event_reminders.reminder_date</code>.
     * Timestamp after which to send notification
     */
    public UInteger getReminderDate() {
        return (UInteger) get(3);
    }

    /**
     * Setter for
     * <code>paradise_forums.calendar_event_reminders.reminder_days_before</code>.
     */
    public void setReminderDaysBefore(UInteger value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.calendar_event_reminders.reminder_days_before</code>.
     */
    public UInteger getReminderDaysBefore() {
        return (UInteger) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<ULong, ULong, ULong, UInteger, UInteger> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<ULong, ULong, ULong, UInteger, UInteger> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CalendarEventReminders.CALENDAR_EVENT_REMINDERS.REMINDER_ID;
    }

    @Override
    public Field<ULong> field2() {
        return CalendarEventReminders.CALENDAR_EVENT_REMINDERS.REMINDER_EVENT_ID;
    }

    @Override
    public Field<ULong> field3() {
        return CalendarEventReminders.CALENDAR_EVENT_REMINDERS.REMINDER_MEMBER_ID;
    }

    @Override
    public Field<UInteger> field4() {
        return CalendarEventReminders.CALENDAR_EVENT_REMINDERS.REMINDER_DATE;
    }

    @Override
    public Field<UInteger> field5() {
        return CalendarEventReminders.CALENDAR_EVENT_REMINDERS.REMINDER_DAYS_BEFORE;
    }

    @Override
    public ULong component1() {
        return getReminderId();
    }

    @Override
    public ULong component2() {
        return getReminderEventId();
    }

    @Override
    public ULong component3() {
        return getReminderMemberId();
    }

    @Override
    public UInteger component4() {
        return getReminderDate();
    }

    @Override
    public UInteger component5() {
        return getReminderDaysBefore();
    }

    @Override
    public ULong value1() {
        return getReminderId();
    }

    @Override
    public ULong value2() {
        return getReminderEventId();
    }

    @Override
    public ULong value3() {
        return getReminderMemberId();
    }

    @Override
    public UInteger value4() {
        return getReminderDate();
    }

    @Override
    public UInteger value5() {
        return getReminderDaysBefore();
    }

    @Override
    public CalendarEventRemindersRecord value1(ULong value) {
        setReminderId(value);
        return this;
    }

    @Override
    public CalendarEventRemindersRecord value2(ULong value) {
        setReminderEventId(value);
        return this;
    }

    @Override
    public CalendarEventRemindersRecord value3(ULong value) {
        setReminderMemberId(value);
        return this;
    }

    @Override
    public CalendarEventRemindersRecord value4(UInteger value) {
        setReminderDate(value);
        return this;
    }

    @Override
    public CalendarEventRemindersRecord value5(UInteger value) {
        setReminderDaysBefore(value);
        return this;
    }

    @Override
    public CalendarEventRemindersRecord values(ULong value1, ULong value2, ULong value3, UInteger value4, UInteger value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CalendarEventRemindersRecord
     */
    public CalendarEventRemindersRecord() {
        super(CalendarEventReminders.CALENDAR_EVENT_REMINDERS);
    }

    /**
     * Create a detached, initialised CalendarEventRemindersRecord
     */
    public CalendarEventRemindersRecord(ULong reminderId, ULong reminderEventId, ULong reminderMemberId, UInteger reminderDate, UInteger reminderDaysBefore) {
        super(CalendarEventReminders.CALENDAR_EVENT_REMINDERS);

        setReminderId(reminderId);
        setReminderEventId(reminderEventId);
        setReminderMemberId(reminderMemberId);
        setReminderDate(reminderDate);
        setReminderDaysBefore(reminderDaysBefore);
    }
}
