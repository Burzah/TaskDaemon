/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreModulesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreModules extends TableImpl<CoreModulesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_modules</code>
     */
    public static final CoreModules CORE_MODULES = new CoreModules();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreModulesRecord> getRecordType() {
        return CoreModulesRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_modules.sys_module_id</code>.
     */
    public final TableField<CoreModulesRecord, UInteger> SYS_MODULE_ID = createField(DSL.name("sys_module_id"), SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_modules.sys_module_title</code>.
     */
    public final TableField<CoreModulesRecord, String> SYS_MODULE_TITLE = createField(DSL.name("sys_module_title"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_modules.sys_module_application</code>.
     */
    public final TableField<CoreModulesRecord, String> SYS_MODULE_APPLICATION = createField(DSL.name("sys_module_application"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_modules.sys_module_key</code>.
     */
    public final TableField<CoreModulesRecord, String> SYS_MODULE_KEY = createField(DSL.name("sys_module_key"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_modules.sys_module_protected</code>.
     */
    public final TableField<CoreModulesRecord, UByte> SYS_MODULE_PROTECTED = createField(DSL.name("sys_module_protected"), SQLDataType.TINYINTUNSIGNED.defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_modules.sys_module_visible</code>.
     */
    public final TableField<CoreModulesRecord, UByte> SYS_MODULE_VISIBLE = createField(DSL.name("sys_module_visible"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("1", SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_modules.sys_module_position</code>.
     */
    public final TableField<CoreModulesRecord, Integer> SYS_MODULE_POSITION = createField(DSL.name("sys_module_position"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_modules.sys_module_area</code>.
     */
    public final TableField<CoreModulesRecord, String> SYS_MODULE_AREA = createField(DSL.name("sys_module_area"), SQLDataType.VARCHAR(32).defaultValue(DSL.inline("'front'", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_modules.sys_module_default_controller</code>.
     */
    public final TableField<CoreModulesRecord, String> SYS_MODULE_DEFAULT_CONTROLLER = createField(DSL.name("sys_module_default_controller"), SQLDataType.VARCHAR(32).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_modules.sys_module_default</code>.
     */
    public final TableField<CoreModulesRecord, Byte> SYS_MODULE_DEFAULT = createField(DSL.name("sys_module_default"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    private CoreModules(Name alias, Table<CoreModulesRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreModules(Name alias, Table<CoreModulesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_modules</code> table
     * reference
     */
    public CoreModules(String alias) {
        this(DSL.name(alias), CORE_MODULES);
    }

    /**
     * Create an aliased <code>paradise_forums.core_modules</code> table
     * reference
     */
    public CoreModules(Name alias) {
        this(alias, CORE_MODULES);
    }

    /**
     * Create a <code>paradise_forums.core_modules</code> table reference
     */
    public CoreModules() {
        this(DSL.name("core_modules"), null);
    }

    public <O extends Record> CoreModules(Table<O> child, ForeignKey<O, CoreModulesRecord> key) {
        super(child, key, CORE_MODULES);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_MODULES_SYS_MODULE_APPLICATION, Indexes.CORE_MODULES_SYS_MODULE_KEY, Indexes.CORE_MODULES_SYS_MODULE_VISIBLE);
    }

    @Override
    public Identity<CoreModulesRecord, UInteger> getIdentity() {
        return (Identity<CoreModulesRecord, UInteger>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreModulesRecord> getPrimaryKey() {
        return Keys.KEY_CORE_MODULES_PRIMARY;
    }

    @Override
    public List<UniqueKey<CoreModulesRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_CORE_MODULES_IDENTIFIER);
    }

    @Override
    public CoreModules as(String alias) {
        return new CoreModules(DSL.name(alias), this);
    }

    @Override
    public CoreModules as(Name alias) {
        return new CoreModules(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreModules rename(String name) {
        return new CoreModules(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreModules rename(Name name) {
        return new CoreModules(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<UInteger, String, String, String, UByte, UByte, Integer, String, String, Byte> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
