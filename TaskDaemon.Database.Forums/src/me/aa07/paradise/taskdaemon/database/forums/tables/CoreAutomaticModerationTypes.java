/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAutomaticModerationTypesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreAutomaticModerationTypes extends TableImpl<CoreAutomaticModerationTypesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_automatic_moderation_types</code>
     */
    public static final CoreAutomaticModerationTypes CORE_AUTOMATIC_MODERATION_TYPES = new CoreAutomaticModerationTypes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreAutomaticModerationTypesRecord> getRecordType() {
        return CoreAutomaticModerationTypesRecord.class;
    }

    /**
     * The column
     * <code>paradise_forums.core_automatic_moderation_types.type_id</code>.
     */
    public final TableField<CoreAutomaticModerationTypesRecord, Integer> TYPE_ID = createField(DSL.name("type_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.core_automatic_moderation_types.type_position</code>.
     */
    public final TableField<CoreAutomaticModerationTypesRecord, Integer> TYPE_POSITION = createField(DSL.name("type_position"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    private CoreAutomaticModerationTypes(Name alias, Table<CoreAutomaticModerationTypesRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreAutomaticModerationTypes(Name alias, Table<CoreAutomaticModerationTypesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>paradise_forums.core_automatic_moderation_types</code> table
     * reference
     */
    public CoreAutomaticModerationTypes(String alias) {
        this(DSL.name(alias), CORE_AUTOMATIC_MODERATION_TYPES);
    }

    /**
     * Create an aliased
     * <code>paradise_forums.core_automatic_moderation_types</code> table
     * reference
     */
    public CoreAutomaticModerationTypes(Name alias) {
        this(alias, CORE_AUTOMATIC_MODERATION_TYPES);
    }

    /**
     * Create a <code>paradise_forums.core_automatic_moderation_types</code>
     * table reference
     */
    public CoreAutomaticModerationTypes() {
        this(DSL.name("core_automatic_moderation_types"), null);
    }

    public <O extends Record> CoreAutomaticModerationTypes(Table<O> child, ForeignKey<O, CoreAutomaticModerationTypesRecord> key) {
        super(child, key, CORE_AUTOMATIC_MODERATION_TYPES);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public Identity<CoreAutomaticModerationTypesRecord, Integer> getIdentity() {
        return (Identity<CoreAutomaticModerationTypesRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreAutomaticModerationTypesRecord> getPrimaryKey() {
        return Keys.KEY_CORE_AUTOMATIC_MODERATION_TYPES_PRIMARY;
    }

    @Override
    public CoreAutomaticModerationTypes as(String alias) {
        return new CoreAutomaticModerationTypes(DSL.name(alias), this);
    }

    @Override
    public CoreAutomaticModerationTypes as(Name alias) {
        return new CoreAutomaticModerationTypes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreAutomaticModerationTypes rename(String name) {
        return new CoreAutomaticModerationTypes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreAutomaticModerationTypes rename(Name name) {
        return new CoreAutomaticModerationTypes(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
