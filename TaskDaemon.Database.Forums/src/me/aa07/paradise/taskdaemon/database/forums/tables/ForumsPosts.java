/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ForumsPostsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row20;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ForumsPosts extends TableImpl<ForumsPostsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.forums_posts</code>
     */
    public static final ForumsPosts FORUMS_POSTS = new ForumsPosts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ForumsPostsRecord> getRecordType() {
        return ForumsPostsRecord.class;
    }

    /**
     * The column <code>paradise_forums.forums_posts.pid</code>.
     */
    public final TableField<ForumsPostsRecord, Integer> PID = createField(DSL.name("pid"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.append_edit</code>.
     */
    public final TableField<ForumsPostsRecord, Byte> APPEND_EDIT = createField(DSL.name("append_edit"), SQLDataType.TINYINT.defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.edit_time</code>.
     */
    public final TableField<ForumsPostsRecord, Integer> EDIT_TIME = createField(DSL.name("edit_time"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.author_id</code>.
     */
    public final TableField<ForumsPostsRecord, ULong> AUTHOR_ID = createField(DSL.name("author_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.author_name</code>.
     */
    public final TableField<ForumsPostsRecord, String> AUTHOR_NAME = createField(DSL.name("author_name"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.ip_address</code>.
     */
    public final TableField<ForumsPostsRecord, String> IP_ADDRESS = createField(DSL.name("ip_address"), SQLDataType.VARCHAR(46).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.post_date</code>.
     */
    public final TableField<ForumsPostsRecord, Integer> POST_DATE = createField(DSL.name("post_date"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.post</code>.
     */
    public final TableField<ForumsPostsRecord, String> POST = createField(DSL.name("post"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.queued</code>.
     */
    public final TableField<ForumsPostsRecord, Byte> QUEUED = createField(DSL.name("queued"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.topic_id</code>.
     */
    public final TableField<ForumsPostsRecord, Integer> TOPIC_ID = createField(DSL.name("topic_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.new_topic</code>.
     */
    public final TableField<ForumsPostsRecord, Byte> NEW_TOPIC = createField(DSL.name("new_topic"), SQLDataType.TINYINT.defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.edit_name</code>.
     */
    public final TableField<ForumsPostsRecord, String> EDIT_NAME = createField(DSL.name("edit_name"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.post_key</code>.
     */
    public final TableField<ForumsPostsRecord, String> POST_KEY = createField(DSL.name("post_key"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("'0'", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.post_htmlstate</code>.
     */
    public final TableField<ForumsPostsRecord, Short> POST_HTMLSTATE = createField(DSL.name("post_htmlstate"), SQLDataType.SMALLINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.post_edit_reason</code>.
     */
    public final TableField<ForumsPostsRecord, String> POST_EDIT_REASON = createField(DSL.name("post_edit_reason"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.post_bwoptions</code>.
     */
    public final TableField<ForumsPostsRecord, UInteger> POST_BWOPTIONS = createField(DSL.name("post_bwoptions"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.pdelete_time</code>.
     */
    public final TableField<ForumsPostsRecord, Integer> PDELETE_TIME = createField(DSL.name("pdelete_time"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.post_field_int</code>.
     */
    public final TableField<ForumsPostsRecord, Integer> POST_FIELD_INT = createField(DSL.name("post_field_int"), SQLDataType.INTEGER.defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.post_field_t1</code>.
     */
    public final TableField<ForumsPostsRecord, String> POST_FIELD_T1 = createField(DSL.name("post_field_t1"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.forums_posts.post_field_t2</code>.
     */
    public final TableField<ForumsPostsRecord, String> POST_FIELD_T2 = createField(DSL.name("post_field_t2"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    private ForumsPosts(Name alias, Table<ForumsPostsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ForumsPosts(Name alias, Table<ForumsPostsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.forums_posts</code> table
     * reference
     */
    public ForumsPosts(String alias) {
        this(DSL.name(alias), FORUMS_POSTS);
    }

    /**
     * Create an aliased <code>paradise_forums.forums_posts</code> table
     * reference
     */
    public ForumsPosts(Name alias) {
        this(alias, FORUMS_POSTS);
    }

    /**
     * Create a <code>paradise_forums.forums_posts</code> table reference
     */
    public ForumsPosts() {
        this(DSL.name("forums_posts"), null);
    }

    public <O extends Record> ForumsPosts(Table<O> child, ForeignKey<O, ForumsPostsRecord> key) {
        super(child, key, FORUMS_POSTS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.FORUMS_POSTS_AUTHOR_ID, Indexes.FORUMS_POSTS_FIRST_POST, Indexes.FORUMS_POSTS_IP_ADDRESS, Indexes.FORUMS_POSTS_POST_DATE, Indexes.FORUMS_POSTS_POST_KEY, Indexes.FORUMS_POSTS_QUEUED, Indexes.FORUMS_POSTS_TOPIC_ID);
    }

    @Override
    public Identity<ForumsPostsRecord, Integer> getIdentity() {
        return (Identity<ForumsPostsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<ForumsPostsRecord> getPrimaryKey() {
        return Keys.KEY_FORUMS_POSTS_PRIMARY;
    }

    @Override
    public ForumsPosts as(String alias) {
        return new ForumsPosts(DSL.name(alias), this);
    }

    @Override
    public ForumsPosts as(Name alias) {
        return new ForumsPosts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ForumsPosts rename(String name) {
        return new ForumsPosts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ForumsPosts rename(Name name) {
        return new ForumsPosts(name, null);
    }

    // -------------------------------------------------------------------------
    // Row20 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row20<Integer, Byte, Integer, ULong, String, String, Integer, String, Byte, Integer, Byte, String, String, Short, String, UInteger, Integer, Integer, String, String> fieldsRow() {
        return (Row20) super.fieldsRow();
    }
}
