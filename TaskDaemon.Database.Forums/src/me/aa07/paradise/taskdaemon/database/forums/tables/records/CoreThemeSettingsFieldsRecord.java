/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreThemeSettingsFields;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreThemeSettingsFieldsRecord extends UpdatableRecordImpl<CoreThemeSettingsFieldsRecord> implements Record14<Integer, Integer, String, String, Integer, String, UInteger, String, String, String, UInteger, String, UInteger, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_theme_settings_fields.sc_id</code>.
     */
    public void setScId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_theme_settings_fields.sc_id</code>.
     */
    public Integer getScId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_theme_settings_fields.sc_set_id</code>.
     */
    public void setScSetId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_theme_settings_fields.sc_set_id</code>.
     */
    public Integer getScSetId() {
        return (Integer) get(1);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_theme_settings_fields.sc_key</code>.
     */
    public void setScKey(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_theme_settings_fields.sc_key</code>.
     */
    public String getScKey() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_theme_settings_fields.sc_type</code>.
     */
    public void setScType(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_theme_settings_fields.sc_type</code>.
     */
    public String getScType() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_theme_settings_fields.sc_multiple</code>.
     */
    public void setScMultiple(Integer value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_theme_settings_fields.sc_multiple</code>.
     */
    public Integer getScMultiple() {
        return (Integer) get(4);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_theme_settings_fields.sc_content</code>.
     */
    public void setScContent(String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_theme_settings_fields.sc_content</code>.
     */
    public String getScContent() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_theme_settings_fields.sc_updated</code>.
     */
    public void setScUpdated(UInteger value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_theme_settings_fields.sc_updated</code>.
     */
    public UInteger getScUpdated() {
        return (UInteger) get(6);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_theme_settings_fields.sc_app</code>.
     */
    public void setScApp(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_theme_settings_fields.sc_app</code>.
     */
    public String getScApp() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_theme_settings_fields.sc_default</code>.
     */
    public void setScDefault(String value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_theme_settings_fields.sc_default</code>.
     */
    public String getScDefault() {
        return (String) get(8);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_theme_settings_fields.sc_tab_key</code>.
     */
    public void setScTabKey(String value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_theme_settings_fields.sc_tab_key</code>.
     */
    public String getScTabKey() {
        return (String) get(9);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_theme_settings_fields.sc_show_in_vse</code>.
     * Show this theme setting in the easy mode editor
     */
    public void setScShowInVse(UInteger value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_theme_settings_fields.sc_show_in_vse</code>.
     * Show this theme setting in the easy mode editor
     */
    public UInteger getScShowInVse() {
        return (UInteger) get(10);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_theme_settings_fields.sc_title</code>.
     */
    public void setScTitle(String value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_theme_settings_fields.sc_title</code>.
     */
    public String getScTitle() {
        return (String) get(11);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_theme_settings_fields.sc_order</code>.
     */
    public void setScOrder(UInteger value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_theme_settings_fields.sc_order</code>.
     */
    public UInteger getScOrder() {
        return (UInteger) get(12);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_theme_settings_fields.sc_condition</code>.
     */
    public void setScCondition(String value) {
        set(13, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_theme_settings_fields.sc_condition</code>.
     */
    public String getScCondition() {
        return (String) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Integer, Integer, String, String, Integer, String, UInteger, String, String, String, UInteger, String, UInteger, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Integer, Integer, String, String, Integer, String, UInteger, String, String, String, UInteger, String, UInteger, String> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_ID;
    }

    @Override
    public Field<Integer> field2() {
        return CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_SET_ID;
    }

    @Override
    public Field<String> field3() {
        return CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_KEY;
    }

    @Override
    public Field<String> field4() {
        return CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_TYPE;
    }

    @Override
    public Field<Integer> field5() {
        return CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_MULTIPLE;
    }

    @Override
    public Field<String> field6() {
        return CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_CONTENT;
    }

    @Override
    public Field<UInteger> field7() {
        return CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_UPDATED;
    }

    @Override
    public Field<String> field8() {
        return CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_APP;
    }

    @Override
    public Field<String> field9() {
        return CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_DEFAULT;
    }

    @Override
    public Field<String> field10() {
        return CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_TAB_KEY;
    }

    @Override
    public Field<UInteger> field11() {
        return CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_SHOW_IN_VSE;
    }

    @Override
    public Field<String> field12() {
        return CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_TITLE;
    }

    @Override
    public Field<UInteger> field13() {
        return CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_ORDER;
    }

    @Override
    public Field<String> field14() {
        return CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS.SC_CONDITION;
    }

    @Override
    public Integer component1() {
        return getScId();
    }

    @Override
    public Integer component2() {
        return getScSetId();
    }

    @Override
    public String component3() {
        return getScKey();
    }

    @Override
    public String component4() {
        return getScType();
    }

    @Override
    public Integer component5() {
        return getScMultiple();
    }

    @Override
    public String component6() {
        return getScContent();
    }

    @Override
    public UInteger component7() {
        return getScUpdated();
    }

    @Override
    public String component8() {
        return getScApp();
    }

    @Override
    public String component9() {
        return getScDefault();
    }

    @Override
    public String component10() {
        return getScTabKey();
    }

    @Override
    public UInteger component11() {
        return getScShowInVse();
    }

    @Override
    public String component12() {
        return getScTitle();
    }

    @Override
    public UInteger component13() {
        return getScOrder();
    }

    @Override
    public String component14() {
        return getScCondition();
    }

    @Override
    public Integer value1() {
        return getScId();
    }

    @Override
    public Integer value2() {
        return getScSetId();
    }

    @Override
    public String value3() {
        return getScKey();
    }

    @Override
    public String value4() {
        return getScType();
    }

    @Override
    public Integer value5() {
        return getScMultiple();
    }

    @Override
    public String value6() {
        return getScContent();
    }

    @Override
    public UInteger value7() {
        return getScUpdated();
    }

    @Override
    public String value8() {
        return getScApp();
    }

    @Override
    public String value9() {
        return getScDefault();
    }

    @Override
    public String value10() {
        return getScTabKey();
    }

    @Override
    public UInteger value11() {
        return getScShowInVse();
    }

    @Override
    public String value12() {
        return getScTitle();
    }

    @Override
    public UInteger value13() {
        return getScOrder();
    }

    @Override
    public String value14() {
        return getScCondition();
    }

    @Override
    public CoreThemeSettingsFieldsRecord value1(Integer value) {
        setScId(value);
        return this;
    }

    @Override
    public CoreThemeSettingsFieldsRecord value2(Integer value) {
        setScSetId(value);
        return this;
    }

    @Override
    public CoreThemeSettingsFieldsRecord value3(String value) {
        setScKey(value);
        return this;
    }

    @Override
    public CoreThemeSettingsFieldsRecord value4(String value) {
        setScType(value);
        return this;
    }

    @Override
    public CoreThemeSettingsFieldsRecord value5(Integer value) {
        setScMultiple(value);
        return this;
    }

    @Override
    public CoreThemeSettingsFieldsRecord value6(String value) {
        setScContent(value);
        return this;
    }

    @Override
    public CoreThemeSettingsFieldsRecord value7(UInteger value) {
        setScUpdated(value);
        return this;
    }

    @Override
    public CoreThemeSettingsFieldsRecord value8(String value) {
        setScApp(value);
        return this;
    }

    @Override
    public CoreThemeSettingsFieldsRecord value9(String value) {
        setScDefault(value);
        return this;
    }

    @Override
    public CoreThemeSettingsFieldsRecord value10(String value) {
        setScTabKey(value);
        return this;
    }

    @Override
    public CoreThemeSettingsFieldsRecord value11(UInteger value) {
        setScShowInVse(value);
        return this;
    }

    @Override
    public CoreThemeSettingsFieldsRecord value12(String value) {
        setScTitle(value);
        return this;
    }

    @Override
    public CoreThemeSettingsFieldsRecord value13(UInteger value) {
        setScOrder(value);
        return this;
    }

    @Override
    public CoreThemeSettingsFieldsRecord value14(String value) {
        setScCondition(value);
        return this;
    }

    @Override
    public CoreThemeSettingsFieldsRecord values(Integer value1, Integer value2, String value3, String value4, Integer value5, String value6, UInteger value7, String value8, String value9, String value10, UInteger value11, String value12, UInteger value13, String value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreThemeSettingsFieldsRecord
     */
    public CoreThemeSettingsFieldsRecord() {
        super(CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS);
    }

    /**
     * Create a detached, initialised CoreThemeSettingsFieldsRecord
     */
    public CoreThemeSettingsFieldsRecord(Integer scId, Integer scSetId, String scKey, String scType, Integer scMultiple, String scContent, UInteger scUpdated, String scApp, String scDefault, String scTabKey, UInteger scShowInVse, String scTitle, UInteger scOrder, String scCondition) {
        super(CoreThemeSettingsFields.CORE_THEME_SETTINGS_FIELDS);

        setScId(scId);
        setScSetId(scSetId);
        setScKey(scKey);
        setScType(scType);
        setScMultiple(scMultiple);
        setScContent(scContent);
        setScUpdated(scUpdated);
        setScApp(scApp);
        setScDefault(scDefault);
        setScTabKey(scTabKey);
        setScShowInVse(scShowInVse);
        setScTitle(scTitle);
        setScOrder(scOrder);
        setScCondition(scCondition);
    }
}
