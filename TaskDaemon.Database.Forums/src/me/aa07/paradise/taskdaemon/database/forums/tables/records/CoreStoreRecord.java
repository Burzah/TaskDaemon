/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreStore;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreStoreRecord extends UpdatableRecordImpl<CoreStoreRecord> implements Record2<String, byte[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_store.store_key</code>. Key
     */
    public void setStoreKey(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_store.store_key</code>. Key
     */
    public String getStoreKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_store.store_value</code>. Value
     */
    public void setStoreValue(byte[] value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_store.store_value</code>. Value
     */
    public byte[] getStoreValue() {
        return (byte[]) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, byte[]> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, byte[]> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return CoreStore.CORE_STORE.STORE_KEY;
    }

    @Override
    public Field<byte[]> field2() {
        return CoreStore.CORE_STORE.STORE_VALUE;
    }

    @Override
    public String component1() {
        return getStoreKey();
    }

    @Override
    public byte[] component2() {
        return getStoreValue();
    }

    @Override
    public String value1() {
        return getStoreKey();
    }

    @Override
    public byte[] value2() {
        return getStoreValue();
    }

    @Override
    public CoreStoreRecord value1(String value) {
        setStoreKey(value);
        return this;
    }

    @Override
    public CoreStoreRecord value2(byte[] value) {
        setStoreValue(value);
        return this;
    }

    @Override
    public CoreStoreRecord values(String value1, byte[] value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreStoreRecord
     */
    public CoreStoreRecord() {
        super(CoreStore.CORE_STORE);
    }

    /**
     * Create a detached, initialised CoreStoreRecord
     */
    public CoreStoreRecord(String storeKey, byte[] storeValue) {
        super(CoreStore.CORE_STORE);

        setStoreKey(storeKey);
        setStoreValue(storeValue);
    }
}
