/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreShareLinksRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreShareLinks extends TableImpl<CoreShareLinksRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_share_links</code>
     */
    public static final CoreShareLinks CORE_SHARE_LINKS = new CoreShareLinks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreShareLinksRecord> getRecordType() {
        return CoreShareLinksRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_share_links.share_id</code>.
     */
    public final TableField<CoreShareLinksRecord, UInteger> SHARE_ID = createField(DSL.name("share_id"), SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_share_links.share_title</code>.
     */
    public final TableField<CoreShareLinksRecord, String> SHARE_TITLE = createField(DSL.name("share_title"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_share_links.share_key</code>.
     */
    public final TableField<CoreShareLinksRecord, String> SHARE_KEY = createField(DSL.name("share_key"), SQLDataType.VARCHAR(50).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_share_links.share_enabled</code>.
     */
    public final TableField<CoreShareLinksRecord, Integer> SHARE_ENABLED = createField(DSL.name("share_enabled"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_share_links.share_position</code>.
     */
    public final TableField<CoreShareLinksRecord, Integer> SHARE_POSITION = createField(DSL.name("share_position"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_share_links.share_canonical</code>.
     */
    public final TableField<CoreShareLinksRecord, Integer> SHARE_CANONICAL = createField(DSL.name("share_canonical"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("1", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_share_links.share_groups</code>.
     */
    public final TableField<CoreShareLinksRecord, String> SHARE_GROUPS = createField(DSL.name("share_groups"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_share_links.share_autoshare</code>.
     * Flag to denote whether to show this service as an auto share option when
     * creating content.
     */
    public final TableField<CoreShareLinksRecord, UByte> SHARE_AUTOSHARE = createField(DSL.name("share_autoshare"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "Flag to denote whether to show this service as an auto share option when creating content.");

    private CoreShareLinks(Name alias, Table<CoreShareLinksRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreShareLinks(Name alias, Table<CoreShareLinksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_share_links</code> table
     * reference
     */
    public CoreShareLinks(String alias) {
        this(DSL.name(alias), CORE_SHARE_LINKS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_share_links</code> table
     * reference
     */
    public CoreShareLinks(Name alias) {
        this(alias, CORE_SHARE_LINKS);
    }

    /**
     * Create a <code>paradise_forums.core_share_links</code> table reference
     */
    public CoreShareLinks() {
        this(DSL.name("core_share_links"), null);
    }

    public <O extends Record> CoreShareLinks(Table<O> child, ForeignKey<O, CoreShareLinksRecord> key) {
        super(child, key, CORE_SHARE_LINKS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public Identity<CoreShareLinksRecord, UInteger> getIdentity() {
        return (Identity<CoreShareLinksRecord, UInteger>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreShareLinksRecord> getPrimaryKey() {
        return Keys.KEY_CORE_SHARE_LINKS_PRIMARY;
    }

    @Override
    public CoreShareLinks as(String alias) {
        return new CoreShareLinks(DSL.name(alias), this);
    }

    @Override
    public CoreShareLinks as(Name alias) {
        return new CoreShareLinks(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreShareLinks rename(String name) {
        return new CoreShareLinks(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreShareLinks rename(Name name) {
        return new CoreShareLinks(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<UInteger, String, String, Integer, Integer, Integer, String, UByte> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
