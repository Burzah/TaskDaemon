/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAdminLoginLogsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreAdminLoginLogs extends TableImpl<CoreAdminLoginLogsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_admin_login_logs</code>
     */
    public static final CoreAdminLoginLogs CORE_ADMIN_LOGIN_LOGS = new CoreAdminLoginLogs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreAdminLoginLogsRecord> getRecordType() {
        return CoreAdminLoginLogsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_admin_login_logs.admin_id</code>.
     */
    public final TableField<CoreAdminLoginLogsRecord, Integer> ADMIN_ID = createField(DSL.name("admin_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.core_admin_login_logs.admin_ip_address</code>.
     */
    public final TableField<CoreAdminLoginLogsRecord, String> ADMIN_IP_ADDRESS = createField(DSL.name("admin_ip_address"), SQLDataType.VARCHAR(46).nullable(false).defaultValue(DSL.inline("'0.0.0.0'", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_admin_login_logs.admin_username</code>.
     */
    public final TableField<CoreAdminLoginLogsRecord, String> ADMIN_USERNAME = createField(DSL.name("admin_username"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_admin_login_logs.admin_time</code>.
     */
    public final TableField<CoreAdminLoginLogsRecord, UInteger> ADMIN_TIME = createField(DSL.name("admin_time"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_admin_login_logs.admin_success</code>.
     */
    public final TableField<CoreAdminLoginLogsRecord, UInteger> ADMIN_SUCCESS = createField(DSL.name("admin_success"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_admin_login_logs.admin_request</code>.
     */
    public final TableField<CoreAdminLoginLogsRecord, String> ADMIN_REQUEST = createField(DSL.name("admin_request"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    private CoreAdminLoginLogs(Name alias, Table<CoreAdminLoginLogsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreAdminLoginLogs(Name alias, Table<CoreAdminLoginLogsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_admin_login_logs</code>
     * table reference
     */
    public CoreAdminLoginLogs(String alias) {
        this(DSL.name(alias), CORE_ADMIN_LOGIN_LOGS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_admin_login_logs</code>
     * table reference
     */
    public CoreAdminLoginLogs(Name alias) {
        this(alias, CORE_ADMIN_LOGIN_LOGS);
    }

    /**
     * Create a <code>paradise_forums.core_admin_login_logs</code> table
     * reference
     */
    public CoreAdminLoginLogs() {
        this(DSL.name("core_admin_login_logs"), null);
    }

    public <O extends Record> CoreAdminLoginLogs(Table<O> child, ForeignKey<O, CoreAdminLoginLogsRecord> key) {
        super(child, key, CORE_ADMIN_LOGIN_LOGS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_ADMIN_LOGIN_LOGS_ADMIN_IP_ADDRESS, Indexes.CORE_ADMIN_LOGIN_LOGS_ADMIN_TIME);
    }

    @Override
    public Identity<CoreAdminLoginLogsRecord, Integer> getIdentity() {
        return (Identity<CoreAdminLoginLogsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreAdminLoginLogsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_ADMIN_LOGIN_LOGS_PRIMARY;
    }

    @Override
    public CoreAdminLoginLogs as(String alias) {
        return new CoreAdminLoginLogs(DSL.name(alias), this);
    }

    @Override
    public CoreAdminLoginLogs as(Name alias) {
        return new CoreAdminLoginLogs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreAdminLoginLogs rename(String name) {
        return new CoreAdminLoginLogs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreAdminLoginLogs rename(Name name) {
        return new CoreAdminLoginLogs(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, UInteger, UInteger, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
