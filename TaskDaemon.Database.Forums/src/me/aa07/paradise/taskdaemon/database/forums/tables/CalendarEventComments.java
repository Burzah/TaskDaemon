/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CalendarEventCommentsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalendarEventComments extends TableImpl<CalendarEventCommentsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.calendar_event_comments</code>
     */
    public static final CalendarEventComments CALENDAR_EVENT_COMMENTS = new CalendarEventComments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalendarEventCommentsRecord> getRecordType() {
        return CalendarEventCommentsRecord.class;
    }

    /**
     * The column
     * <code>paradise_forums.calendar_event_comments.comment_id</code>.
     */
    public final TableField<CalendarEventCommentsRecord, Integer> COMMENT_ID = createField(DSL.name("comment_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_event_comments.comment_eid</code>.
     */
    public final TableField<CalendarEventCommentsRecord, Integer> COMMENT_EID = createField(DSL.name("comment_eid"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_event_comments.comment_mid</code>.
     */
    public final TableField<CalendarEventCommentsRecord, ULong> COMMENT_MID = createField(DSL.name("comment_mid"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_event_comments.comment_date</code>.
     */
    public final TableField<CalendarEventCommentsRecord, Integer> COMMENT_DATE = createField(DSL.name("comment_date"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_event_comments.comment_approved</code>.
     */
    public final TableField<CalendarEventCommentsRecord, Byte> COMMENT_APPROVED = createField(DSL.name("comment_approved"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_event_comments.comment_text</code>.
     */
    public final TableField<CalendarEventCommentsRecord, String> COMMENT_TEXT = createField(DSL.name("comment_text"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_event_comments.comment_append_edit</code>.
     */
    public final TableField<CalendarEventCommentsRecord, Byte> COMMENT_APPEND_EDIT = createField(DSL.name("comment_append_edit"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_event_comments.comment_edit_time</code>.
     */
    public final TableField<CalendarEventCommentsRecord, Integer> COMMENT_EDIT_TIME = createField(DSL.name("comment_edit_time"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_event_comments.comment_edit_name</code>.
     */
    public final TableField<CalendarEventCommentsRecord, String> COMMENT_EDIT_NAME = createField(DSL.name("comment_edit_name"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_event_comments.comment_ip_address</code>.
     */
    public final TableField<CalendarEventCommentsRecord, String> COMMENT_IP_ADDRESS = createField(DSL.name("comment_ip_address"), SQLDataType.VARCHAR(46).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_event_comments.comment_author</code>.
     */
    public final TableField<CalendarEventCommentsRecord, String> COMMENT_AUTHOR = createField(DSL.name("comment_author"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_event_comments.comment_is_anon</code>.
     */
    public final TableField<CalendarEventCommentsRecord, UByte> COMMENT_IS_ANON = createField(DSL.name("comment_is_anon"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "");

    private CalendarEventComments(Name alias, Table<CalendarEventCommentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CalendarEventComments(Name alias, Table<CalendarEventCommentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.calendar_event_comments</code>
     * table reference
     */
    public CalendarEventComments(String alias) {
        this(DSL.name(alias), CALENDAR_EVENT_COMMENTS);
    }

    /**
     * Create an aliased <code>paradise_forums.calendar_event_comments</code>
     * table reference
     */
    public CalendarEventComments(Name alias) {
        this(alias, CALENDAR_EVENT_COMMENTS);
    }

    /**
     * Create a <code>paradise_forums.calendar_event_comments</code> table
     * reference
     */
    public CalendarEventComments() {
        this(DSL.name("calendar_event_comments"), null);
    }

    public <O extends Record> CalendarEventComments(Table<O> child, ForeignKey<O, CalendarEventCommentsRecord> key) {
        super(child, key, CALENDAR_EVENT_COMMENTS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CALENDAR_EVENT_COMMENTS_COMMENT_APPROVED, Indexes.CALENDAR_EVENT_COMMENTS_COMMENT_EID, Indexes.CALENDAR_EVENT_COMMENTS_COMMENT_MID, Indexes.CALENDAR_EVENT_COMMENTS_IP_ADDRESS);
    }

    @Override
    public Identity<CalendarEventCommentsRecord, Integer> getIdentity() {
        return (Identity<CalendarEventCommentsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CalendarEventCommentsRecord> getPrimaryKey() {
        return Keys.KEY_CALENDAR_EVENT_COMMENTS_PRIMARY;
    }

    @Override
    public CalendarEventComments as(String alias) {
        return new CalendarEventComments(DSL.name(alias), this);
    }

    @Override
    public CalendarEventComments as(Name alias) {
        return new CalendarEventComments(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CalendarEventComments rename(String name) {
        return new CalendarEventComments(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CalendarEventComments rename(Name name) {
        return new CalendarEventComments(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, Integer, ULong, Integer, Byte, String, Byte, Integer, String, String, String, UByte> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
