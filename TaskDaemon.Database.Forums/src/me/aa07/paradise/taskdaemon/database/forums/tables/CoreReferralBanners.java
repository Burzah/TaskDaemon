/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreReferralBannersRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreReferralBanners extends TableImpl<CoreReferralBannersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_referral_banners</code>
     */
    public static final CoreReferralBanners CORE_REFERRAL_BANNERS = new CoreReferralBanners();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreReferralBannersRecord> getRecordType() {
        return CoreReferralBannersRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_referral_banners.rb_id</code>.
     */
    public final TableField<CoreReferralBannersRecord, Integer> RB_ID = createField(DSL.name("rb_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_referral_banners.rb_url</code>.
     */
    public final TableField<CoreReferralBannersRecord, String> RB_URL = createField(DSL.name("rb_url"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_referral_banners.rb_upload</code>.
     */
    public final TableField<CoreReferralBannersRecord, Byte> RB_UPLOAD = createField(DSL.name("rb_upload"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.core_referral_banners.rb_order</code>.
     */
    public final TableField<CoreReferralBannersRecord, Integer> RB_ORDER = createField(DSL.name("rb_order"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    private CoreReferralBanners(Name alias, Table<CoreReferralBannersRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreReferralBanners(Name alias, Table<CoreReferralBannersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_referral_banners</code>
     * table reference
     */
    public CoreReferralBanners(String alias) {
        this(DSL.name(alias), CORE_REFERRAL_BANNERS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_referral_banners</code>
     * table reference
     */
    public CoreReferralBanners(Name alias) {
        this(alias, CORE_REFERRAL_BANNERS);
    }

    /**
     * Create a <code>paradise_forums.core_referral_banners</code> table
     * reference
     */
    public CoreReferralBanners() {
        this(DSL.name("core_referral_banners"), null);
    }

    public <O extends Record> CoreReferralBanners(Table<O> child, ForeignKey<O, CoreReferralBannersRecord> key) {
        super(child, key, CORE_REFERRAL_BANNERS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public Identity<CoreReferralBannersRecord, Integer> getIdentity() {
        return (Identity<CoreReferralBannersRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreReferralBannersRecord> getPrimaryKey() {
        return Keys.KEY_CORE_REFERRAL_BANNERS_PRIMARY;
    }

    @Override
    public CoreReferralBanners as(String alias) {
        return new CoreReferralBanners(DSL.name(alias), this);
    }

    @Override
    public CoreReferralBanners as(Name alias) {
        return new CoreReferralBanners(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreReferralBanners rename(String name) {
        return new CoreReferralBanners(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreReferralBanners rename(Name name) {
        return new CoreReferralBanners(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Byte, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
