/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMembersKnownDevicesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreMembersKnownDevices extends TableImpl<CoreMembersKnownDevicesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_members_known_devices</code>
     */
    public static final CoreMembersKnownDevices CORE_MEMBERS_KNOWN_DEVICES = new CoreMembersKnownDevices();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreMembersKnownDevicesRecord> getRecordType() {
        return CoreMembersKnownDevicesRecord.class;
    }

    /**
     * The column
     * <code>paradise_forums.core_members_known_devices.device_key</code>. A
     * random string whose value will be set as a permanent cookie to identify a
     * device
     */
    public final TableField<CoreMembersKnownDevicesRecord, String> DEVICE_KEY = createField(DSL.name("device_key"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "A random string whose value will be set as a permanent cookie to identify a device");

    /**
     * The column
     * <code>paradise_forums.core_members_known_devices.member_id</code>. The
     * member ID authenticated on the device
     */
    public final TableField<CoreMembersKnownDevicesRecord, ULong> MEMBER_ID = createField(DSL.name("member_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "The member ID authenticated on the device");

    /**
     * The column
     * <code>paradise_forums.core_members_known_devices.user_agent</code>. The
     * user agent string. Note this is not for identification but just for
     * reference, and will be updated when the user upgrades their browser
     * version
     */
    public final TableField<CoreMembersKnownDevicesRecord, String> USER_AGENT = createField(DSL.name("user_agent"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "The user agent string. Note this is not for identification but just for reference, and will be updated when the user upgrades their browser version");

    /**
     * The column
     * <code>paradise_forums.core_members_known_devices.login_key</code>. If the
     * user has chosen "remember me", a random string whose value is set as a
     * cookie to facilitate automatic login. NULL if they did not choose
     * "remember me".
     */
    public final TableField<CoreMembersKnownDevicesRecord, String> LOGIN_KEY = createField(DSL.name("login_key"), SQLDataType.VARCHAR(32).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "If the user has chosen \"remember me\", a random string whose value is set as a cookie to facilitate automatic login. NULL if they did not choose \"remember me\".");

    /**
     * The column
     * <code>paradise_forums.core_members_known_devices.last_seen</code>. A unix
     * timestamp of when the device was last used. Updated at session start, not
     * on every click
     */
    public final TableField<CoreMembersKnownDevicesRecord, UInteger> LAST_SEEN = createField(DSL.name("last_seen"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "A unix timestamp of when the device was last used. Updated at session start, not on every click");

    /**
     * The column
     * <code>paradise_forums.core_members_known_devices.anonymous</code>. Binary
     * value indicating if, when the user is automatically logged in, their
     * session should be anonymous
     */
    public final TableField<CoreMembersKnownDevicesRecord, UByte> ANONYMOUS = createField(DSL.name("anonymous"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "Binary value indicating if, when the user is automatically logged in, their session should be anonymous");

    /**
     * The column
     * <code>paradise_forums.core_members_known_devices.login_handler</code>.
     * The login handler which processed the most recent login (not updated on
     * automatic log ins).
     */
    public final TableField<CoreMembersKnownDevicesRecord, String> LOGIN_HANDLER = createField(DSL.name("login_handler"), SQLDataType.VARCHAR(32).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "The login handler which processed the most recent login (not updated on automatic log ins).");

    private CoreMembersKnownDevices(Name alias, Table<CoreMembersKnownDevicesRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreMembersKnownDevices(Name alias, Table<CoreMembersKnownDevicesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_members_known_devices</code>
     * table reference
     */
    public CoreMembersKnownDevices(String alias) {
        this(DSL.name(alias), CORE_MEMBERS_KNOWN_DEVICES);
    }

    /**
     * Create an aliased <code>paradise_forums.core_members_known_devices</code>
     * table reference
     */
    public CoreMembersKnownDevices(Name alias) {
        this(alias, CORE_MEMBERS_KNOWN_DEVICES);
    }

    /**
     * Create a <code>paradise_forums.core_members_known_devices</code> table
     * reference
     */
    public CoreMembersKnownDevices() {
        this(DSL.name("core_members_known_devices"), null);
    }

    public <O extends Record> CoreMembersKnownDevices(Table<O> child, ForeignKey<O, CoreMembersKnownDevicesRecord> key) {
        super(child, key, CORE_MEMBERS_KNOWN_DEVICES);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_MEMBERS_KNOWN_DEVICES_LAST_SEEN, Indexes.CORE_MEMBERS_KNOWN_DEVICES_MEMBER_ID);
    }

    @Override
    public UniqueKey<CoreMembersKnownDevicesRecord> getPrimaryKey() {
        return Keys.KEY_CORE_MEMBERS_KNOWN_DEVICES_PRIMARY;
    }

    @Override
    public CoreMembersKnownDevices as(String alias) {
        return new CoreMembersKnownDevices(DSL.name(alias), this);
    }

    @Override
    public CoreMembersKnownDevices as(Name alias) {
        return new CoreMembersKnownDevices(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMembersKnownDevices rename(String name) {
        return new CoreMembersKnownDevices(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMembersKnownDevices rename(Name name) {
        return new CoreMembersKnownDevices(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, ULong, String, String, UInteger, UByte, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
