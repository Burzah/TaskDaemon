/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.enums.CoreMemberPrivacyActionsAction;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMemberPrivacyActionsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreMemberPrivacyActions extends TableImpl<CoreMemberPrivacyActionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_member_privacy_actions</code>
     */
    public static final CoreMemberPrivacyActions CORE_MEMBER_PRIVACY_ACTIONS = new CoreMemberPrivacyActions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreMemberPrivacyActionsRecord> getRecordType() {
        return CoreMemberPrivacyActionsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_member_privacy_actions.id</code>.
     * ID Number
     */
    public final TableField<CoreMemberPrivacyActionsRecord, ULong> ID = createField(DSL.name("id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "ID Number");

    /**
     * The column
     * <code>paradise_forums.core_member_privacy_actions.member_id</code>.
     */
    public final TableField<CoreMemberPrivacyActionsRecord, Long> MEMBER_ID = createField(DSL.name("member_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_privacy_actions.request_date</code>.
     */
    public final TableField<CoreMemberPrivacyActionsRecord, Integer> REQUEST_DATE = createField(DSL.name("request_date"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_privacy_actions.approved</code>.
     */
    public final TableField<CoreMemberPrivacyActionsRecord, Integer> APPROVED = createField(DSL.name("approved"), SQLDataType.INTEGER.defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_privacy_actions.action</code>.
     */
    public final TableField<CoreMemberPrivacyActionsRecord, CoreMemberPrivacyActionsAction> ACTION = createField(DSL.name("action"), SQLDataType.VARCHAR(25).nullable(false).asEnumDataType(me.aa07.paradise.taskdaemon.database.forums.enums.CoreMemberPrivacyActionsAction.class), this, "");

    /**
     * The column <code>paradise_forums.core_member_privacy_actions.vkey</code>.
     */
    public final TableField<CoreMemberPrivacyActionsRecord, String> VKEY = createField(DSL.name("vkey"), SQLDataType.VARCHAR(32).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    private CoreMemberPrivacyActions(Name alias, Table<CoreMemberPrivacyActionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreMemberPrivacyActions(Name alias, Table<CoreMemberPrivacyActionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>paradise_forums.core_member_privacy_actions</code> table reference
     */
    public CoreMemberPrivacyActions(String alias) {
        this(DSL.name(alias), CORE_MEMBER_PRIVACY_ACTIONS);
    }

    /**
     * Create an aliased
     * <code>paradise_forums.core_member_privacy_actions</code> table reference
     */
    public CoreMemberPrivacyActions(Name alias) {
        this(alias, CORE_MEMBER_PRIVACY_ACTIONS);
    }

    /**
     * Create a <code>paradise_forums.core_member_privacy_actions</code> table
     * reference
     */
    public CoreMemberPrivacyActions() {
        this(DSL.name("core_member_privacy_actions"), null);
    }

    public <O extends Record> CoreMemberPrivacyActions(Table<O> child, ForeignKey<O, CoreMemberPrivacyActionsRecord> key) {
        super(child, key, CORE_MEMBER_PRIVACY_ACTIONS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public Identity<CoreMemberPrivacyActionsRecord, ULong> getIdentity() {
        return (Identity<CoreMemberPrivacyActionsRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreMemberPrivacyActionsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_MEMBER_PRIVACY_ACTIONS_PRIMARY;
    }

    @Override
    public CoreMemberPrivacyActions as(String alias) {
        return new CoreMemberPrivacyActions(DSL.name(alias), this);
    }

    @Override
    public CoreMemberPrivacyActions as(Name alias) {
        return new CoreMemberPrivacyActions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMemberPrivacyActions rename(String name) {
        return new CoreMemberPrivacyActions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMemberPrivacyActions rename(Name name) {
        return new CoreMemberPrivacyActions(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<ULong, Long, Integer, Integer, CoreMemberPrivacyActionsAction, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
