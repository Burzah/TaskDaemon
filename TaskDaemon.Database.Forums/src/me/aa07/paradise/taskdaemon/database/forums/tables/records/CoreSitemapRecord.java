/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSitemap;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreSitemapRecord extends UpdatableRecordImpl<CoreSitemapRecord> implements Record4<String, String, Integer, ULong> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_sitemap.sitemap</code>. The sitemap
     * key
     */
    public void setSitemap(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sitemap.sitemap</code>. The sitemap
     * key
     */
    public String getSitemap() {
        return (String) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_sitemap.data</code>. The sitemap
     * XML
     */
    public void setData(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sitemap.data</code>. The sitemap
     * XML
     */
    public String getData() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_sitemap.updated</code>. Unix
     * timestamp of last update
     */
    public void setUpdated(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sitemap.updated</code>. Unix
     * timestamp of last update
     */
    public Integer getUpdated() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_sitemap.last_id</code>. Stores the
     * last ID included in this sitemap
     */
    public void setLastId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sitemap.last_id</code>. Stores the
     * last ID included in this sitemap
     */
    public ULong getLastId() {
        return (ULong) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, Integer, ULong> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, Integer, ULong> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return CoreSitemap.CORE_SITEMAP.SITEMAP;
    }

    @Override
    public Field<String> field2() {
        return CoreSitemap.CORE_SITEMAP.DATA;
    }

    @Override
    public Field<Integer> field3() {
        return CoreSitemap.CORE_SITEMAP.UPDATED;
    }

    @Override
    public Field<ULong> field4() {
        return CoreSitemap.CORE_SITEMAP.LAST_ID;
    }

    @Override
    public String component1() {
        return getSitemap();
    }

    @Override
    public String component2() {
        return getData();
    }

    @Override
    public Integer component3() {
        return getUpdated();
    }

    @Override
    public ULong component4() {
        return getLastId();
    }

    @Override
    public String value1() {
        return getSitemap();
    }

    @Override
    public String value2() {
        return getData();
    }

    @Override
    public Integer value3() {
        return getUpdated();
    }

    @Override
    public ULong value4() {
        return getLastId();
    }

    @Override
    public CoreSitemapRecord value1(String value) {
        setSitemap(value);
        return this;
    }

    @Override
    public CoreSitemapRecord value2(String value) {
        setData(value);
        return this;
    }

    @Override
    public CoreSitemapRecord value3(Integer value) {
        setUpdated(value);
        return this;
    }

    @Override
    public CoreSitemapRecord value4(ULong value) {
        setLastId(value);
        return this;
    }

    @Override
    public CoreSitemapRecord values(String value1, String value2, Integer value3, ULong value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreSitemapRecord
     */
    public CoreSitemapRecord() {
        super(CoreSitemap.CORE_SITEMAP);
    }

    /**
     * Create a detached, initialised CoreSitemapRecord
     */
    public CoreSitemapRecord(String sitemap, String data, Integer updated, ULong lastId) {
        super(CoreSitemap.CORE_SITEMAP);

        setSitemap(sitemap);
        setData(data);
        setUpdated(updated);
        setLastId(lastId);
    }
}
