/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreNotificationDefaultsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreNotificationDefaults extends TableImpl<CoreNotificationDefaultsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_notification_defaults</code>
     */
    public static final CoreNotificationDefaults CORE_NOTIFICATION_DEFAULTS = new CoreNotificationDefaults();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreNotificationDefaultsRecord> getRecordType() {
        return CoreNotificationDefaultsRecord.class;
    }

    /**
     * The column
     * <code>paradise_forums.core_notification_defaults.notification_key</code>.
     * Key
     */
    public final TableField<CoreNotificationDefaultsRecord, String> NOTIFICATION_KEY = createField(DSL.name("notification_key"), SQLDataType.VARCHAR(100).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "Key");

    /**
     * The column
     * <code>paradise_forums.core_notification_defaults.default</code>. Default
     * options
     */
    public final TableField<CoreNotificationDefaultsRecord, String> DEFAULT = createField(DSL.name("default"), SQLDataType.VARCHAR(17).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "Default options");

    /**
     * The column
     * <code>paradise_forums.core_notification_defaults.disabled</code>.
     * Disabled options
     */
    public final TableField<CoreNotificationDefaultsRecord, String> DISABLED = createField(DSL.name("disabled"), SQLDataType.VARCHAR(17).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "Disabled options");

    /**
     * The column
     * <code>paradise_forums.core_notification_defaults.editable</code>. Member
     * can edit
     */
    public final TableField<CoreNotificationDefaultsRecord, Boolean> EDITABLE = createField(DSL.name("editable"), SQLDataType.BIT.nullable(false).defaultValue(DSL.inline("b'1'", SQLDataType.BIT)), this, "Member can edit");

    private CoreNotificationDefaults(Name alias, Table<CoreNotificationDefaultsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreNotificationDefaults(Name alias, Table<CoreNotificationDefaultsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_notification_defaults</code>
     * table reference
     */
    public CoreNotificationDefaults(String alias) {
        this(DSL.name(alias), CORE_NOTIFICATION_DEFAULTS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_notification_defaults</code>
     * table reference
     */
    public CoreNotificationDefaults(Name alias) {
        this(alias, CORE_NOTIFICATION_DEFAULTS);
    }

    /**
     * Create a <code>paradise_forums.core_notification_defaults</code> table
     * reference
     */
    public CoreNotificationDefaults() {
        this(DSL.name("core_notification_defaults"), null);
    }

    public <O extends Record> CoreNotificationDefaults(Table<O> child, ForeignKey<O, CoreNotificationDefaultsRecord> key) {
        super(child, key, CORE_NOTIFICATION_DEFAULTS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public UniqueKey<CoreNotificationDefaultsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_NOTIFICATION_DEFAULTS_PRIMARY;
    }

    @Override
    public CoreNotificationDefaults as(String alias) {
        return new CoreNotificationDefaults(DSL.name(alias), this);
    }

    @Override
    public CoreNotificationDefaults as(Name alias) {
        return new CoreNotificationDefaults(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreNotificationDefaults rename(String name) {
        return new CoreNotificationDefaults(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreNotificationDefaults rename(Name name) {
        return new CoreNotificationDefaults(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
