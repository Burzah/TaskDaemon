/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.enums.CoreClubsMembershipsStatus;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreClubsMemberships;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreClubsMembershipsRecord extends UpdatableRecordImpl<CoreClubsMembershipsRecord> implements Record7<ULong, ULong, UInteger, ULong, ULong, CoreClubsMembershipsStatus, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_clubs_memberships.club_id</code>.
     * Club ID Number
     */
    public void setClubId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_clubs_memberships.club_id</code>.
     * Club ID Number
     */
    public ULong getClubId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_clubs_memberships.member_id</code>.
     * Member ID number
     */
    public void setMemberId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_clubs_memberships.member_id</code>.
     * Member ID number
     */
    public ULong getMemberId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_clubs_memberships.joined</code>.
     * Unix timestamp of when the member joined the club
     */
    public void setJoined(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_clubs_memberships.joined</code>.
     * Unix timestamp of when the member joined the club
     */
    public UInteger getJoined() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_clubs_memberships.added_by</code>.
     * If added by a leader, the leader's member ID. NULL if joined themselves.
     */
    public void setAddedBy(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_clubs_memberships.added_by</code>.
     * If added by a leader, the leader's member ID. NULL if joined themselves.
     */
    public ULong getAddedBy() {
        return (ULong) get(3);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_clubs_memberships.invited_by</code>. If
     * invited by another member, the member id. NULL if joined themselves.
     */
    public void setInvitedBy(ULong value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_clubs_memberships.invited_by</code>. If
     * invited by another member, the member id. NULL if joined themselves.
     */
    public ULong getInvitedBy() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_clubs_memberships.status</code>.
     * The status of the membership. member is normal member, requested/invited
     * are in the process of joining, leader is leader, declined means their
     * request to join was declined, banned is banned by a leader
     */
    public void setStatus(CoreClubsMembershipsStatus value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_clubs_memberships.status</code>.
     * The status of the membership. member is normal member, requested/invited
     * are in the process of joining, leader is leader, declined means their
     * request to join was declined, banned is banned by a leader
     */
    public CoreClubsMembershipsStatus getStatus() {
        return (CoreClubsMembershipsStatus) get(5);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_clubs_memberships.rules_acknowledged</code>.
     */
    public void setRulesAcknowledged(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_clubs_memberships.rules_acknowledged</code>.
     */
    public Boolean getRulesAcknowledged() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<ULong, ULong> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<ULong, ULong, UInteger, ULong, ULong, CoreClubsMembershipsStatus, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<ULong, ULong, UInteger, ULong, ULong, CoreClubsMembershipsStatus, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CoreClubsMemberships.CORE_CLUBS_MEMBERSHIPS.CLUB_ID;
    }

    @Override
    public Field<ULong> field2() {
        return CoreClubsMemberships.CORE_CLUBS_MEMBERSHIPS.MEMBER_ID;
    }

    @Override
    public Field<UInteger> field3() {
        return CoreClubsMemberships.CORE_CLUBS_MEMBERSHIPS.JOINED;
    }

    @Override
    public Field<ULong> field4() {
        return CoreClubsMemberships.CORE_CLUBS_MEMBERSHIPS.ADDED_BY;
    }

    @Override
    public Field<ULong> field5() {
        return CoreClubsMemberships.CORE_CLUBS_MEMBERSHIPS.INVITED_BY;
    }

    @Override
    public Field<CoreClubsMembershipsStatus> field6() {
        return CoreClubsMemberships.CORE_CLUBS_MEMBERSHIPS.STATUS;
    }

    @Override
    public Field<Boolean> field7() {
        return CoreClubsMemberships.CORE_CLUBS_MEMBERSHIPS.RULES_ACKNOWLEDGED;
    }

    @Override
    public ULong component1() {
        return getClubId();
    }

    @Override
    public ULong component2() {
        return getMemberId();
    }

    @Override
    public UInteger component3() {
        return getJoined();
    }

    @Override
    public ULong component4() {
        return getAddedBy();
    }

    @Override
    public ULong component5() {
        return getInvitedBy();
    }

    @Override
    public CoreClubsMembershipsStatus component6() {
        return getStatus();
    }

    @Override
    public Boolean component7() {
        return getRulesAcknowledged();
    }

    @Override
    public ULong value1() {
        return getClubId();
    }

    @Override
    public ULong value2() {
        return getMemberId();
    }

    @Override
    public UInteger value3() {
        return getJoined();
    }

    @Override
    public ULong value4() {
        return getAddedBy();
    }

    @Override
    public ULong value5() {
        return getInvitedBy();
    }

    @Override
    public CoreClubsMembershipsStatus value6() {
        return getStatus();
    }

    @Override
    public Boolean value7() {
        return getRulesAcknowledged();
    }

    @Override
    public CoreClubsMembershipsRecord value1(ULong value) {
        setClubId(value);
        return this;
    }

    @Override
    public CoreClubsMembershipsRecord value2(ULong value) {
        setMemberId(value);
        return this;
    }

    @Override
    public CoreClubsMembershipsRecord value3(UInteger value) {
        setJoined(value);
        return this;
    }

    @Override
    public CoreClubsMembershipsRecord value4(ULong value) {
        setAddedBy(value);
        return this;
    }

    @Override
    public CoreClubsMembershipsRecord value5(ULong value) {
        setInvitedBy(value);
        return this;
    }

    @Override
    public CoreClubsMembershipsRecord value6(CoreClubsMembershipsStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public CoreClubsMembershipsRecord value7(Boolean value) {
        setRulesAcknowledged(value);
        return this;
    }

    @Override
    public CoreClubsMembershipsRecord values(ULong value1, ULong value2, UInteger value3, ULong value4, ULong value5, CoreClubsMembershipsStatus value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreClubsMembershipsRecord
     */
    public CoreClubsMembershipsRecord() {
        super(CoreClubsMemberships.CORE_CLUBS_MEMBERSHIPS);
    }

    /**
     * Create a detached, initialised CoreClubsMembershipsRecord
     */
    public CoreClubsMembershipsRecord(ULong clubId, ULong memberId, UInteger joined, ULong addedBy, ULong invitedBy, CoreClubsMembershipsStatus status, Boolean rulesAcknowledged) {
        super(CoreClubsMemberships.CORE_CLUBS_MEMBERSHIPS);

        setClubId(clubId);
        setMemberId(memberId);
        setJoined(joined);
        setAddedBy(addedBy);
        setInvitedBy(invitedBy);
        setStatus(status);
        setRulesAcknowledged(rulesAcknowledged);
    }
}
