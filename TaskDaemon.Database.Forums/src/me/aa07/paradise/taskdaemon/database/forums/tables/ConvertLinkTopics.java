/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ConvertLinkTopicsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConvertLinkTopics extends TableImpl<ConvertLinkTopicsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.convert_link_topics</code>
     */
    public static final ConvertLinkTopics CONVERT_LINK_TOPICS = new ConvertLinkTopics();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConvertLinkTopicsRecord> getRecordType() {
        return ConvertLinkTopicsRecord.class;
    }

    /**
     * The column <code>paradise_forums.convert_link_topics.link_id</code>.
     */
    public final TableField<ConvertLinkTopicsRecord, UInteger> LINK_ID = createField(DSL.name("link_id"), SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.convert_link_topics.ipb_id</code>.
     */
    public final TableField<ConvertLinkTopicsRecord, Long> IPB_ID = createField(DSL.name("ipb_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>paradise_forums.convert_link_topics.foreign_id</code>.
     */
    public final TableField<ConvertLinkTopicsRecord, String> FOREIGN_ID = createField(DSL.name("foreign_id"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.convert_link_topics.type</code>.
     */
    public final TableField<ConvertLinkTopicsRecord, String> TYPE = createField(DSL.name("type"), SQLDataType.VARCHAR(32).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.convert_link_topics.duplicate</code>.
     */
    public final TableField<ConvertLinkTopicsRecord, Byte> DUPLICATE = createField(DSL.name("duplicate"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.convert_link_topics.app</code>.
     */
    public final TableField<ConvertLinkTopicsRecord, Integer> APP = createField(DSL.name("app"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    private ConvertLinkTopics(Name alias, Table<ConvertLinkTopicsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ConvertLinkTopics(Name alias, Table<ConvertLinkTopicsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.convert_link_topics</code> table
     * reference
     */
    public ConvertLinkTopics(String alias) {
        this(DSL.name(alias), CONVERT_LINK_TOPICS);
    }

    /**
     * Create an aliased <code>paradise_forums.convert_link_topics</code> table
     * reference
     */
    public ConvertLinkTopics(Name alias) {
        this(alias, CONVERT_LINK_TOPICS);
    }

    /**
     * Create a <code>paradise_forums.convert_link_topics</code> table reference
     */
    public ConvertLinkTopics() {
        this(DSL.name("convert_link_topics"), null);
    }

    public <O extends Record> ConvertLinkTopics(Table<O> child, ForeignKey<O, ConvertLinkTopicsRecord> key) {
        super(child, key, CONVERT_LINK_TOPICS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CONVERT_LINK_TOPICS_APP, Indexes.CONVERT_LINK_TOPICS_FOREIGN_ID, Indexes.CONVERT_LINK_TOPICS_LOCAL_LOOKUP, Indexes.CONVERT_LINK_TOPICS_TYPE);
    }

    @Override
    public Identity<ConvertLinkTopicsRecord, UInteger> getIdentity() {
        return (Identity<ConvertLinkTopicsRecord, UInteger>) super.getIdentity();
    }

    @Override
    public UniqueKey<ConvertLinkTopicsRecord> getPrimaryKey() {
        return Keys.KEY_CONVERT_LINK_TOPICS_PRIMARY;
    }

    @Override
    public ConvertLinkTopics as(String alias) {
        return new ConvertLinkTopics(DSL.name(alias), this);
    }

    @Override
    public ConvertLinkTopics as(Name alias) {
        return new ConvertLinkTopics(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ConvertLinkTopics rename(String name) {
        return new ConvertLinkTopics(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ConvertLinkTopics rename(Name name) {
        return new ConvertLinkTopics(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<UInteger, Long, String, String, Byte, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
