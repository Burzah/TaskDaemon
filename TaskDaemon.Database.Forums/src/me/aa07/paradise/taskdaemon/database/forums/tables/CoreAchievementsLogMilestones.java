/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAchievementsLogMilestonesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreAchievementsLogMilestones extends TableImpl<CoreAchievementsLogMilestonesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_achievements_log_milestones</code>
     */
    public static final CoreAchievementsLogMilestones CORE_ACHIEVEMENTS_LOG_MILESTONES = new CoreAchievementsLogMilestones();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreAchievementsLogMilestonesRecord> getRecordType() {
        return CoreAchievementsLogMilestonesRecord.class;
    }

    /**
     * The column
     * <code>paradise_forums.core_achievements_log_milestones.milestone_id</code>.
     */
    public final TableField<CoreAchievementsLogMilestonesRecord, ULong> MILESTONE_ID = createField(DSL.name("milestone_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.core_achievements_log_milestones.milestone_member_id</code>.
     */
    public final TableField<CoreAchievementsLogMilestonesRecord, ULong> MILESTONE_MEMBER_ID = createField(DSL.name("milestone_member_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>paradise_forums.core_achievements_log_milestones.milestone_rule</code>.
     */
    public final TableField<CoreAchievementsLogMilestonesRecord, UInteger> MILESTONE_RULE = createField(DSL.name("milestone_rule"), SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>paradise_forums.core_achievements_log_milestones.milestone_log_id</code>.
     */
    public final TableField<CoreAchievementsLogMilestonesRecord, ULong> MILESTONE_LOG_ID = createField(DSL.name("milestone_log_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column
     * <code>paradise_forums.core_achievements_log_milestones.milestone_type</code>.
     */
    public final TableField<CoreAchievementsLogMilestonesRecord, String> MILESTONE_TYPE = createField(DSL.name("milestone_type"), SQLDataType.VARCHAR(100).defaultValue(DSL.inline("'subject'", SQLDataType.VARCHAR)), this, "");

    private CoreAchievementsLogMilestones(Name alias, Table<CoreAchievementsLogMilestonesRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreAchievementsLogMilestones(Name alias, Table<CoreAchievementsLogMilestonesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>paradise_forums.core_achievements_log_milestones</code> table
     * reference
     */
    public CoreAchievementsLogMilestones(String alias) {
        this(DSL.name(alias), CORE_ACHIEVEMENTS_LOG_MILESTONES);
    }

    /**
     * Create an aliased
     * <code>paradise_forums.core_achievements_log_milestones</code> table
     * reference
     */
    public CoreAchievementsLogMilestones(Name alias) {
        this(alias, CORE_ACHIEVEMENTS_LOG_MILESTONES);
    }

    /**
     * Create a <code>paradise_forums.core_achievements_log_milestones</code>
     * table reference
     */
    public CoreAchievementsLogMilestones() {
        this(DSL.name("core_achievements_log_milestones"), null);
    }

    public <O extends Record> CoreAchievementsLogMilestones(Table<O> child, ForeignKey<O, CoreAchievementsLogMilestonesRecord> key) {
        super(child, key, CORE_ACHIEVEMENTS_LOG_MILESTONES);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public Identity<CoreAchievementsLogMilestonesRecord, ULong> getIdentity() {
        return (Identity<CoreAchievementsLogMilestonesRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreAchievementsLogMilestonesRecord> getPrimaryKey() {
        return Keys.KEY_CORE_ACHIEVEMENTS_LOG_MILESTONES_PRIMARY;
    }

    @Override
    public List<UniqueKey<CoreAchievementsLogMilestonesRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_CORE_ACHIEVEMENTS_LOG_MILESTONES_LOOKUP);
    }

    @Override
    public CoreAchievementsLogMilestones as(String alias) {
        return new CoreAchievementsLogMilestones(DSL.name(alias), this);
    }

    @Override
    public CoreAchievementsLogMilestones as(Name alias) {
        return new CoreAchievementsLogMilestones(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreAchievementsLogMilestones rename(String name) {
        return new CoreAchievementsLogMilestones(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreAchievementsLogMilestones rename(Name name) {
        return new CoreAchievementsLogMilestones(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<ULong, ULong, UInteger, ULong, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
