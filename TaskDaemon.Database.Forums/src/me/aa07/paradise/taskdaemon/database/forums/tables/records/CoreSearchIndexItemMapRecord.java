/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSearchIndexItemMap;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreSearchIndexItemMapRecord extends TableRecordImpl<CoreSearchIndexItemMapRecord> implements Record3<Integer, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>paradise_forums.core_search_index_item_map.index_author_id</code>.
     */
    public void setIndexAuthorId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_search_index_item_map.index_author_id</code>.
     */
    public Integer getIndexAuthorId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_search_index_item_map.index_item_id</code>.
     */
    public void setIndexItemId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_search_index_item_map.index_item_id</code>.
     */
    public Integer getIndexItemId() {
        return (Integer) get(1);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_search_index_item_map.index_class</code>.
     */
    public void setIndexClass(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_search_index_item_map.index_class</code>.
     */
    public String getIndexClass() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CoreSearchIndexItemMap.CORE_SEARCH_INDEX_ITEM_MAP.INDEX_AUTHOR_ID;
    }

    @Override
    public Field<Integer> field2() {
        return CoreSearchIndexItemMap.CORE_SEARCH_INDEX_ITEM_MAP.INDEX_ITEM_ID;
    }

    @Override
    public Field<String> field3() {
        return CoreSearchIndexItemMap.CORE_SEARCH_INDEX_ITEM_MAP.INDEX_CLASS;
    }

    @Override
    public Integer component1() {
        return getIndexAuthorId();
    }

    @Override
    public Integer component2() {
        return getIndexItemId();
    }

    @Override
    public String component3() {
        return getIndexClass();
    }

    @Override
    public Integer value1() {
        return getIndexAuthorId();
    }

    @Override
    public Integer value2() {
        return getIndexItemId();
    }

    @Override
    public String value3() {
        return getIndexClass();
    }

    @Override
    public CoreSearchIndexItemMapRecord value1(Integer value) {
        setIndexAuthorId(value);
        return this;
    }

    @Override
    public CoreSearchIndexItemMapRecord value2(Integer value) {
        setIndexItemId(value);
        return this;
    }

    @Override
    public CoreSearchIndexItemMapRecord value3(String value) {
        setIndexClass(value);
        return this;
    }

    @Override
    public CoreSearchIndexItemMapRecord values(Integer value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreSearchIndexItemMapRecord
     */
    public CoreSearchIndexItemMapRecord() {
        super(CoreSearchIndexItemMap.CORE_SEARCH_INDEX_ITEM_MAP);
    }

    /**
     * Create a detached, initialised CoreSearchIndexItemMapRecord
     */
    public CoreSearchIndexItemMapRecord(Integer indexAuthorId, Integer indexItemId, String indexClass) {
        super(CoreSearchIndexItemMap.CORE_SEARCH_INDEX_ITEM_MAP);

        setIndexAuthorId(indexAuthorId);
        setIndexItemId(indexItemId);
        setIndexClass(indexClass);
    }
}
