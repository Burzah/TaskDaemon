/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreLoginLinks;

import org.jooq.Field;
import org.jooq.Record10;
import org.jooq.Record2;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreLoginLinksRecord extends UpdatableRecordImpl<CoreLoginLinksRecord> implements Record10<ULong, ULong, String, UByte, UInteger, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>paradise_forums.core_login_links.token_login_method</code>. The ID
     * number of the login method
     */
    public void setTokenLoginMethod(ULong value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_login_links.token_login_method</code>. The ID
     * number of the login method
     */
    public ULong getTokenLoginMethod() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_login_links.token_member</code>.
     * The member ID
     */
    public void setTokenMember(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_login_links.token_member</code>.
     * The member ID
     */
    public ULong getTokenMember() {
        return (ULong) get(1);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_login_links.token_identifier</code>. The
     * server's identifier for the user
     */
    public void setTokenIdentifier(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_login_links.token_identifier</code>. The
     * server's identifier for the user
     */
    public String getTokenIdentifier() {
        return (String) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_login_links.token_linked</code>.
     * Boolean value indicating if the account has been successfully linked
     */
    public void setTokenLinked(UByte value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_login_links.token_linked</code>.
     * Boolean value indicating if the account has been successfully linked
     */
    public UByte getTokenLinked() {
        return (UByte) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_login_links.token_expires</code>.
     * Unix timestamp of when the access token expires
     */
    public void setTokenExpires(UInteger value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_login_links.token_expires</code>.
     * Unix timestamp of when the access token expires
     */
    public UInteger getTokenExpires() {
        return (UInteger) get(4);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_login_links.token_refresh_token</code>.
     * Refresh token, if provided
     */
    public void setTokenRefreshToken(String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_login_links.token_refresh_token</code>.
     * Refresh token, if provided
     */
    public String getTokenRefreshToken() {
        return (String) get(5);
    }

    /**
     * Setter for <code>paradise_forums.core_login_links.token_secret</code>.
     * Token secret for OAuth 1.0 implementations
     */
    public void setTokenSecret(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.core_login_links.token_secret</code>.
     * Token secret for OAuth 1.0 implementations
     */
    public String getTokenSecret() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_login_links.token_access_token</code>. Access
     * token
     */
    public void setTokenAccessToken(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_login_links.token_access_token</code>. Access
     * token
     */
    public String getTokenAccessToken() {
        return (String) get(7);
    }

    /**
     * Setter for <code>paradise_forums.core_login_links.token_scope</code>.
     * JSON-encoded array of scopes issued
     */
    public void setTokenScope(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>paradise_forums.core_login_links.token_scope</code>.
     * JSON-encoded array of scopes issued
     */
    public String getTokenScope() {
        return (String) get(8);
    }

    /**
     * Setter for <code>paradise_forums.core_login_links.token_id_token</code>.
     * ID token for Open ID Connect implementations
     */
    public void setTokenIdToken(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>paradise_forums.core_login_links.token_id_token</code>.
     * ID token for Open ID Connect implementations
     */
    public String getTokenIdToken() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<ULong, ULong> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<ULong, ULong, String, UByte, UInteger, String, String, String, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<ULong, ULong, String, UByte, UInteger, String, String, String, String, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CoreLoginLinks.CORE_LOGIN_LINKS.TOKEN_LOGIN_METHOD;
    }

    @Override
    public Field<ULong> field2() {
        return CoreLoginLinks.CORE_LOGIN_LINKS.TOKEN_MEMBER;
    }

    @Override
    public Field<String> field3() {
        return CoreLoginLinks.CORE_LOGIN_LINKS.TOKEN_IDENTIFIER;
    }

    @Override
    public Field<UByte> field4() {
        return CoreLoginLinks.CORE_LOGIN_LINKS.TOKEN_LINKED;
    }

    @Override
    public Field<UInteger> field5() {
        return CoreLoginLinks.CORE_LOGIN_LINKS.TOKEN_EXPIRES;
    }

    @Override
    public Field<String> field6() {
        return CoreLoginLinks.CORE_LOGIN_LINKS.TOKEN_REFRESH_TOKEN;
    }

    @Override
    public Field<String> field7() {
        return CoreLoginLinks.CORE_LOGIN_LINKS.TOKEN_SECRET;
    }

    @Override
    public Field<String> field8() {
        return CoreLoginLinks.CORE_LOGIN_LINKS.TOKEN_ACCESS_TOKEN;
    }

    @Override
    public Field<String> field9() {
        return CoreLoginLinks.CORE_LOGIN_LINKS.TOKEN_SCOPE;
    }

    @Override
    public Field<String> field10() {
        return CoreLoginLinks.CORE_LOGIN_LINKS.TOKEN_ID_TOKEN;
    }

    @Override
    public ULong component1() {
        return getTokenLoginMethod();
    }

    @Override
    public ULong component2() {
        return getTokenMember();
    }

    @Override
    public String component3() {
        return getTokenIdentifier();
    }

    @Override
    public UByte component4() {
        return getTokenLinked();
    }

    @Override
    public UInteger component5() {
        return getTokenExpires();
    }

    @Override
    public String component6() {
        return getTokenRefreshToken();
    }

    @Override
    public String component7() {
        return getTokenSecret();
    }

    @Override
    public String component8() {
        return getTokenAccessToken();
    }

    @Override
    public String component9() {
        return getTokenScope();
    }

    @Override
    public String component10() {
        return getTokenIdToken();
    }

    @Override
    public ULong value1() {
        return getTokenLoginMethod();
    }

    @Override
    public ULong value2() {
        return getTokenMember();
    }

    @Override
    public String value3() {
        return getTokenIdentifier();
    }

    @Override
    public UByte value4() {
        return getTokenLinked();
    }

    @Override
    public UInteger value5() {
        return getTokenExpires();
    }

    @Override
    public String value6() {
        return getTokenRefreshToken();
    }

    @Override
    public String value7() {
        return getTokenSecret();
    }

    @Override
    public String value8() {
        return getTokenAccessToken();
    }

    @Override
    public String value9() {
        return getTokenScope();
    }

    @Override
    public String value10() {
        return getTokenIdToken();
    }

    @Override
    public CoreLoginLinksRecord value1(ULong value) {
        setTokenLoginMethod(value);
        return this;
    }

    @Override
    public CoreLoginLinksRecord value2(ULong value) {
        setTokenMember(value);
        return this;
    }

    @Override
    public CoreLoginLinksRecord value3(String value) {
        setTokenIdentifier(value);
        return this;
    }

    @Override
    public CoreLoginLinksRecord value4(UByte value) {
        setTokenLinked(value);
        return this;
    }

    @Override
    public CoreLoginLinksRecord value5(UInteger value) {
        setTokenExpires(value);
        return this;
    }

    @Override
    public CoreLoginLinksRecord value6(String value) {
        setTokenRefreshToken(value);
        return this;
    }

    @Override
    public CoreLoginLinksRecord value7(String value) {
        setTokenSecret(value);
        return this;
    }

    @Override
    public CoreLoginLinksRecord value8(String value) {
        setTokenAccessToken(value);
        return this;
    }

    @Override
    public CoreLoginLinksRecord value9(String value) {
        setTokenScope(value);
        return this;
    }

    @Override
    public CoreLoginLinksRecord value10(String value) {
        setTokenIdToken(value);
        return this;
    }

    @Override
    public CoreLoginLinksRecord values(ULong value1, ULong value2, String value3, UByte value4, UInteger value5, String value6, String value7, String value8, String value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreLoginLinksRecord
     */
    public CoreLoginLinksRecord() {
        super(CoreLoginLinks.CORE_LOGIN_LINKS);
    }

    /**
     * Create a detached, initialised CoreLoginLinksRecord
     */
    public CoreLoginLinksRecord(ULong tokenLoginMethod, ULong tokenMember, String tokenIdentifier, UByte tokenLinked, UInteger tokenExpires, String tokenRefreshToken, String tokenSecret, String tokenAccessToken, String tokenScope, String tokenIdToken) {
        super(CoreLoginLinks.CORE_LOGIN_LINKS);

        setTokenLoginMethod(tokenLoginMethod);
        setTokenMember(tokenMember);
        setTokenIdentifier(tokenIdentifier);
        setTokenLinked(tokenLinked);
        setTokenExpires(tokenExpires);
        setTokenRefreshToken(tokenRefreshToken);
        setTokenSecret(tokenSecret);
        setTokenAccessToken(tokenAccessToken);
        setTokenScope(tokenScope);
        setTokenIdToken(tokenIdToken);
    }
}
