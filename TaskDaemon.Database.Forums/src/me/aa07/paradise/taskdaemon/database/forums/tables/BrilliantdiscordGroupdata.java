/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.BrilliantdiscordGroupdataRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BrilliantdiscordGroupdata extends TableImpl<BrilliantdiscordGroupdataRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.brilliantdiscord_groupdata</code>
     */
    public static final BrilliantdiscordGroupdata BRILLIANTDISCORD_GROUPDATA = new BrilliantdiscordGroupdata();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BrilliantdiscordGroupdataRecord> getRecordType() {
        return BrilliantdiscordGroupdataRecord.class;
    }

    /**
     * The column <code>paradise_forums.brilliantdiscord_groupdata.id</code>. ID
     * Number
     */
    public final TableField<BrilliantdiscordGroupdataRecord, ULong> ID = createField(DSL.name("id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "ID Number");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_groupdata.discord_roles</code>.
     */
    public final TableField<BrilliantdiscordGroupdataRecord, String> DISCORD_ROLES = createField(DSL.name("discord_roles"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_groupdata.bypass_approval</code>.
     */
    public final TableField<BrilliantdiscordGroupdataRecord, Boolean> BYPASS_APPROVAL = createField(DSL.name("bypass_approval"), SQLDataType.BIT.nullable(false).defaultValue(DSL.inline("b'0'", SQLDataType.BIT)), this, "");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_groupdata.group_id</code>.
     */
    public final TableField<BrilliantdiscordGroupdataRecord, ULong> GROUP_ID = createField(DSL.name("group_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    private BrilliantdiscordGroupdata(Name alias, Table<BrilliantdiscordGroupdataRecord> aliased) {
        this(alias, aliased, null);
    }

    private BrilliantdiscordGroupdata(Name alias, Table<BrilliantdiscordGroupdataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.brilliantdiscord_groupdata</code>
     * table reference
     */
    public BrilliantdiscordGroupdata(String alias) {
        this(DSL.name(alias), BRILLIANTDISCORD_GROUPDATA);
    }

    /**
     * Create an aliased <code>paradise_forums.brilliantdiscord_groupdata</code>
     * table reference
     */
    public BrilliantdiscordGroupdata(Name alias) {
        this(alias, BRILLIANTDISCORD_GROUPDATA);
    }

    /**
     * Create a <code>paradise_forums.brilliantdiscord_groupdata</code> table
     * reference
     */
    public BrilliantdiscordGroupdata() {
        this(DSL.name("brilliantdiscord_groupdata"), null);
    }

    public <O extends Record> BrilliantdiscordGroupdata(Table<O> child, ForeignKey<O, BrilliantdiscordGroupdataRecord> key) {
        super(child, key, BRILLIANTDISCORD_GROUPDATA);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public Identity<BrilliantdiscordGroupdataRecord, ULong> getIdentity() {
        return (Identity<BrilliantdiscordGroupdataRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<BrilliantdiscordGroupdataRecord> getPrimaryKey() {
        return Keys.KEY_BRILLIANTDISCORD_GROUPDATA_PRIMARY;
    }

    @Override
    public List<UniqueKey<BrilliantdiscordGroupdataRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_BRILLIANTDISCORD_GROUPDATA_GROUP);
    }

    @Override
    public BrilliantdiscordGroupdata as(String alias) {
        return new BrilliantdiscordGroupdata(DSL.name(alias), this);
    }

    @Override
    public BrilliantdiscordGroupdata as(Name alias) {
        return new BrilliantdiscordGroupdata(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BrilliantdiscordGroupdata rename(String name) {
        return new BrilliantdiscordGroupdata(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BrilliantdiscordGroupdata rename(Name name) {
        return new BrilliantdiscordGroupdata(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<ULong, String, Boolean, ULong> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
