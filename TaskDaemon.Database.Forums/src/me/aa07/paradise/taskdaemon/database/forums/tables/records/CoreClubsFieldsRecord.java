/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreClubsFields;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreClubsFieldsRecord extends UpdatableRecordImpl<CoreClubsFieldsRecord> implements Record8<ULong, String, UInteger, UByte, UByte, String, UByte, UByte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_clubs_fields.f_id</code>. ID Number
     */
    public void setFId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_clubs_fields.f_id</code>. ID Number
     */
    public ULong getFId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_clubs_fields.f_extra</code>. Extra
     * details such as options
     */
    public void setFExtra(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_clubs_fields.f_extra</code>. Extra
     * details such as options
     */
    public String getFExtra() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_clubs_fields.f_position</code>.
     * Position order
     */
    public void setFPosition(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_clubs_fields.f_position</code>.
     * Position order
     */
    public UInteger getFPosition() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_clubs_fields.f_required</code>.
     * Binary value indicating if the field is required
     */
    public void setFRequired(UByte value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_clubs_fields.f_required</code>.
     * Binary value indicating if the field is required
     */
    public UByte getFRequired() {
        return (UByte) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_clubs_fields.f_multiple</code>. For
     * certain types of fields, if multiple values are supported
     */
    public void setFMultiple(UByte value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_clubs_fields.f_multiple</code>. For
     * certain types of fields, if multiple values are supported
     */
    public UByte getFMultiple() {
        return (UByte) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_clubs_fields.f_type</code>. The
     * field type
     */
    public void setFType(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_clubs_fields.f_type</code>. The
     * field type
     */
    public String getFType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>paradise_forums.core_clubs_fields.f_filterable</code>.
     * Binary value indicating if the field should be included in the filter
     * options
     */
    public void setFFilterable(UByte value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.core_clubs_fields.f_filterable</code>.
     * Binary value indicating if the field should be included in the filter
     * options
     */
    public UByte getFFilterable() {
        return (UByte) get(6);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_clubs_fields.f_allow_attachments</code>.
     */
    public void setFAllowAttachments(UByte value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_clubs_fields.f_allow_attachments</code>.
     */
    public UByte getFAllowAttachments() {
        return (UByte) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<ULong, String, UInteger, UByte, UByte, String, UByte, UByte> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<ULong, String, UInteger, UByte, UByte, String, UByte, UByte> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CoreClubsFields.CORE_CLUBS_FIELDS.F_ID;
    }

    @Override
    public Field<String> field2() {
        return CoreClubsFields.CORE_CLUBS_FIELDS.F_EXTRA;
    }

    @Override
    public Field<UInteger> field3() {
        return CoreClubsFields.CORE_CLUBS_FIELDS.F_POSITION;
    }

    @Override
    public Field<UByte> field4() {
        return CoreClubsFields.CORE_CLUBS_FIELDS.F_REQUIRED;
    }

    @Override
    public Field<UByte> field5() {
        return CoreClubsFields.CORE_CLUBS_FIELDS.F_MULTIPLE;
    }

    @Override
    public Field<String> field6() {
        return CoreClubsFields.CORE_CLUBS_FIELDS.F_TYPE;
    }

    @Override
    public Field<UByte> field7() {
        return CoreClubsFields.CORE_CLUBS_FIELDS.F_FILTERABLE;
    }

    @Override
    public Field<UByte> field8() {
        return CoreClubsFields.CORE_CLUBS_FIELDS.F_ALLOW_ATTACHMENTS;
    }

    @Override
    public ULong component1() {
        return getFId();
    }

    @Override
    public String component2() {
        return getFExtra();
    }

    @Override
    public UInteger component3() {
        return getFPosition();
    }

    @Override
    public UByte component4() {
        return getFRequired();
    }

    @Override
    public UByte component5() {
        return getFMultiple();
    }

    @Override
    public String component6() {
        return getFType();
    }

    @Override
    public UByte component7() {
        return getFFilterable();
    }

    @Override
    public UByte component8() {
        return getFAllowAttachments();
    }

    @Override
    public ULong value1() {
        return getFId();
    }

    @Override
    public String value2() {
        return getFExtra();
    }

    @Override
    public UInteger value3() {
        return getFPosition();
    }

    @Override
    public UByte value4() {
        return getFRequired();
    }

    @Override
    public UByte value5() {
        return getFMultiple();
    }

    @Override
    public String value6() {
        return getFType();
    }

    @Override
    public UByte value7() {
        return getFFilterable();
    }

    @Override
    public UByte value8() {
        return getFAllowAttachments();
    }

    @Override
    public CoreClubsFieldsRecord value1(ULong value) {
        setFId(value);
        return this;
    }

    @Override
    public CoreClubsFieldsRecord value2(String value) {
        setFExtra(value);
        return this;
    }

    @Override
    public CoreClubsFieldsRecord value3(UInteger value) {
        setFPosition(value);
        return this;
    }

    @Override
    public CoreClubsFieldsRecord value4(UByte value) {
        setFRequired(value);
        return this;
    }

    @Override
    public CoreClubsFieldsRecord value5(UByte value) {
        setFMultiple(value);
        return this;
    }

    @Override
    public CoreClubsFieldsRecord value6(String value) {
        setFType(value);
        return this;
    }

    @Override
    public CoreClubsFieldsRecord value7(UByte value) {
        setFFilterable(value);
        return this;
    }

    @Override
    public CoreClubsFieldsRecord value8(UByte value) {
        setFAllowAttachments(value);
        return this;
    }

    @Override
    public CoreClubsFieldsRecord values(ULong value1, String value2, UInteger value3, UByte value4, UByte value5, String value6, UByte value7, UByte value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreClubsFieldsRecord
     */
    public CoreClubsFieldsRecord() {
        super(CoreClubsFields.CORE_CLUBS_FIELDS);
    }

    /**
     * Create a detached, initialised CoreClubsFieldsRecord
     */
    public CoreClubsFieldsRecord(ULong fId, String fExtra, UInteger fPosition, UByte fRequired, UByte fMultiple, String fType, UByte fFilterable, UByte fAllowAttachments) {
        super(CoreClubsFields.CORE_CLUBS_FIELDS);

        setFId(fId);
        setFExtra(fExtra);
        setFPosition(fPosition);
        setFRequired(fRequired);
        setFMultiple(fMultiple);
        setFType(fType);
        setFFilterable(fFilterable);
        setFAllowAttachments(fAllowAttachments);
    }
}
