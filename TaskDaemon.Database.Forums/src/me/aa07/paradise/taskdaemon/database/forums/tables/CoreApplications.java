/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreApplicationsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row19;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreApplications extends TableImpl<CoreApplicationsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_applications</code>
     */
    public static final CoreApplications CORE_APPLICATIONS = new CoreApplications();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreApplicationsRecord> getRecordType() {
        return CoreApplicationsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_applications.app_id</code>.
     */
    public final TableField<CoreApplicationsRecord, Integer> APP_ID = createField(DSL.name("app_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_applications.app_author</code>.
     */
    public final TableField<CoreApplicationsRecord, String> APP_AUTHOR = createField(DSL.name("app_author"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_applications.app_version</code>.
     */
    public final TableField<CoreApplicationsRecord, String> APP_VERSION = createField(DSL.name("app_version"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_applications.app_long_version</code>.
     */
    public final TableField<CoreApplicationsRecord, Integer> APP_LONG_VERSION = createField(DSL.name("app_long_version"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("10000", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_applications.app_directory</code>.
     */
    public final TableField<CoreApplicationsRecord, String> APP_DIRECTORY = createField(DSL.name("app_directory"), SQLDataType.VARCHAR(250).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_applications.app_added</code>.
     */
    public final TableField<CoreApplicationsRecord, Integer> APP_ADDED = createField(DSL.name("app_added"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_applications.app_position</code>.
     */
    public final TableField<CoreApplicationsRecord, Integer> APP_POSITION = createField(DSL.name("app_position"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_applications.app_protected</code>.
     */
    public final TableField<CoreApplicationsRecord, Integer> APP_PROTECTED = createField(DSL.name("app_protected"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_applications.app_enabled</code>.
     */
    public final TableField<CoreApplicationsRecord, Integer> APP_ENABLED = createField(DSL.name("app_enabled"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_applications.app_hide_tab</code>.
     */
    public final TableField<CoreApplicationsRecord, Byte> APP_HIDE_TAB = createField(DSL.name("app_hide_tab"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.core_applications.app_website</code>.
     */
    public final TableField<CoreApplicationsRecord, String> APP_WEBSITE = createField(DSL.name("app_website"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_applications.app_update_check</code>.
     */
    public final TableField<CoreApplicationsRecord, String> APP_UPDATE_CHECK = createField(DSL.name("app_update_check"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_applications.app_update_last_check</code>.
     */
    public final TableField<CoreApplicationsRecord, UInteger> APP_UPDATE_LAST_CHECK = createField(DSL.name("app_update_last_check"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_applications.app_update_version</code>. Json
     * array of the latest version info returned by the update check URL
     */
    public final TableField<CoreApplicationsRecord, String> APP_UPDATE_VERSION = createField(DSL.name("app_update_version"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "Json array of the latest version info returned by the update check URL");

    /**
     * The column
     * <code>paradise_forums.core_applications.app_disabled_groups</code>.
     */
    public final TableField<CoreApplicationsRecord, String> APP_DISABLED_GROUPS = createField(DSL.name("app_disabled_groups"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_applications.app_disabled_message</code>.
     */
    public final TableField<CoreApplicationsRecord, String> APP_DISABLED_MESSAGE = createField(DSL.name("app_disabled_message"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_applications.app_diagnostic_url</code>. The
     * URL to send diagnostic reports to
     */
    public final TableField<CoreApplicationsRecord, String> APP_DIAGNOSTIC_URL = createField(DSL.name("app_diagnostic_url"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "The URL to send diagnostic reports to");

    /**
     * The column <code>paradise_forums.core_applications.app_default</code>.
     */
    public final TableField<CoreApplicationsRecord, UByte> APP_DEFAULT = createField(DSL.name("app_default"), SQLDataType.TINYINTUNSIGNED.defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_applications.app_requires_manual_intervention</code>.
     * If this is set, do NOT enable, the app likely has issues that will cause
     * fatal errors in php8 that the author must address
     */
    public final TableField<CoreApplicationsRecord, UByte> APP_REQUIRES_MANUAL_INTERVENTION = createField(DSL.name("app_requires_manual_intervention"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "If this is set, do NOT enable, the app likely has issues that will cause fatal errors in php8 that the author must address");

    private CoreApplications(Name alias, Table<CoreApplicationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreApplications(Name alias, Table<CoreApplicationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_applications</code> table
     * reference
     */
    public CoreApplications(String alias) {
        this(DSL.name(alias), CORE_APPLICATIONS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_applications</code> table
     * reference
     */
    public CoreApplications(Name alias) {
        this(alias, CORE_APPLICATIONS);
    }

    /**
     * Create a <code>paradise_forums.core_applications</code> table reference
     */
    public CoreApplications() {
        this(DSL.name("core_applications"), null);
    }

    public <O extends Record> CoreApplications(Table<O> child, ForeignKey<O, CoreApplicationsRecord> key) {
        super(child, key, CORE_APPLICATIONS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_APPLICATIONS_APP_DEFAULT, Indexes.CORE_APPLICATIONS_APP_DIRECTORY, Indexes.CORE_APPLICATIONS_APP_POSITION);
    }

    @Override
    public Identity<CoreApplicationsRecord, Integer> getIdentity() {
        return (Identity<CoreApplicationsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreApplicationsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_APPLICATIONS_PRIMARY;
    }

    @Override
    public CoreApplications as(String alias) {
        return new CoreApplications(DSL.name(alias), this);
    }

    @Override
    public CoreApplications as(Name alias) {
        return new CoreApplications(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreApplications rename(String name) {
        return new CoreApplications(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreApplications rename(Name name) {
        return new CoreApplications(name, null);
    }

    // -------------------------------------------------------------------------
    // Row19 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row19<Integer, String, String, Integer, String, Integer, Integer, Integer, Integer, Byte, String, String, UInteger, String, String, String, String, UByte, UByte> fieldsRow() {
        return (Row19) super.fieldsRow();
    }
}
