/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreBulkMailRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreBulkMail extends TableImpl<CoreBulkMailRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_bulk_mail</code>
     */
    public static final CoreBulkMail CORE_BULK_MAIL = new CoreBulkMail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreBulkMailRecord> getRecordType() {
        return CoreBulkMailRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_bulk_mail.mail_id</code>.
     */
    public final TableField<CoreBulkMailRecord, Integer> MAIL_ID = createField(DSL.name("mail_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_bulk_mail.mail_subject</code>.
     */
    public final TableField<CoreBulkMailRecord, String> MAIL_SUBJECT = createField(DSL.name("mail_subject"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_bulk_mail.mail_content</code>.
     */
    public final TableField<CoreBulkMailRecord, String> MAIL_CONTENT = createField(DSL.name("mail_content"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>paradise_forums.core_bulk_mail.mail_opts</code>.
     */
    public final TableField<CoreBulkMailRecord, String> MAIL_OPTS = createField(DSL.name("mail_opts"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_bulk_mail.mail_start</code>.
     * Timestamp the bulk mail was created
     */
    public final TableField<CoreBulkMailRecord, Integer> MAIL_START = createField(DSL.name("mail_start"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "Timestamp the bulk mail was created");

    /**
     * The column <code>paradise_forums.core_bulk_mail.mail_updated</code>.
     * Timestamp last bulk mail batch was sent
     */
    public final TableField<CoreBulkMailRecord, Integer> MAIL_UPDATED = createField(DSL.name("mail_updated"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "Timestamp last bulk mail batch was sent");

    /**
     * The column <code>paradise_forums.core_bulk_mail.mail_sentto</code>. The
     * number of users the bulk mail has been sent to
     */
    public final TableField<CoreBulkMailRecord, Integer> MAIL_SENTTO = createField(DSL.name("mail_sentto"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "The number of users the bulk mail has been sent to");

    /**
     * The column <code>paradise_forums.core_bulk_mail.mail_active</code>.
     * Whether the bulk mail is currently active or not
     */
    public final TableField<CoreBulkMailRecord, Byte> MAIL_ACTIVE = createField(DSL.name("mail_active"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "Whether the bulk mail is currently active or not");

    /**
     * The column <code>paradise_forums.core_bulk_mail.mail_offset</code>. The
     * offset for when the next batch is sent 
     */
    public final TableField<CoreBulkMailRecord, UInteger> MAIL_OFFSET = createField(DSL.name("mail_offset"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "The offset for when the next batch is sent ");

    private CoreBulkMail(Name alias, Table<CoreBulkMailRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreBulkMail(Name alias, Table<CoreBulkMailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_bulk_mail</code> table
     * reference
     */
    public CoreBulkMail(String alias) {
        this(DSL.name(alias), CORE_BULK_MAIL);
    }

    /**
     * Create an aliased <code>paradise_forums.core_bulk_mail</code> table
     * reference
     */
    public CoreBulkMail(Name alias) {
        this(alias, CORE_BULK_MAIL);
    }

    /**
     * Create a <code>paradise_forums.core_bulk_mail</code> table reference
     */
    public CoreBulkMail() {
        this(DSL.name("core_bulk_mail"), null);
    }

    public <O extends Record> CoreBulkMail(Table<O> child, ForeignKey<O, CoreBulkMailRecord> key) {
        super(child, key, CORE_BULK_MAIL);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_BULK_MAIL_MAIL_ACTIVE, Indexes.CORE_BULK_MAIL_MAIL_START);
    }

    @Override
    public Identity<CoreBulkMailRecord, Integer> getIdentity() {
        return (Identity<CoreBulkMailRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreBulkMailRecord> getPrimaryKey() {
        return Keys.KEY_CORE_BULK_MAIL_PRIMARY;
    }

    @Override
    public CoreBulkMail as(String alias) {
        return new CoreBulkMail(DSL.name(alias), this);
    }

    @Override
    public CoreBulkMail as(Name alias) {
        return new CoreBulkMail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreBulkMail rename(String name) {
        return new CoreBulkMail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreBulkMail rename(Name name) {
        return new CoreBulkMail(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, String, String, Integer, Integer, Integer, Byte, UInteger> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
