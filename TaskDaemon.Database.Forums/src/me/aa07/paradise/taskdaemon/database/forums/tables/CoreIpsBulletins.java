/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreIpsBulletinsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreIpsBulletins extends TableImpl<CoreIpsBulletinsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_ips_bulletins</code>
     */
    public static final CoreIpsBulletins CORE_IPS_BULLETINS = new CoreIpsBulletins();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreIpsBulletinsRecord> getRecordType() {
        return CoreIpsBulletinsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_ips_bulletins.id</code>. ID Number
     */
    public final TableField<CoreIpsBulletinsRecord, ULong> ID = createField(DSL.name("id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "ID Number");

    /**
     * The column <code>paradise_forums.core_ips_bulletins.title</code>. The
     * bulletin title
     */
    public final TableField<CoreIpsBulletinsRecord, String> TITLE = createField(DSL.name("title"), SQLDataType.VARCHAR(255).nullable(false), this, "The bulletin title");

    /**
     * The column <code>paradise_forums.core_ips_bulletins.body</code>. The
     * bulletin body
     */
    public final TableField<CoreIpsBulletinsRecord, String> BODY = createField(DSL.name("body"), SQLDataType.CLOB.nullable(false), this, "The bulletin body");

    /**
     * The column <code>paradise_forums.core_ips_bulletins.severity</code>. The
     * bulletin severity
     */
    public final TableField<CoreIpsBulletinsRecord, String> SEVERITY = createField(DSL.name("severity"), SQLDataType.VARCHAR(32).nullable(false), this, "The bulletin severity");

    /**
     * The column <code>paradise_forums.core_ips_bulletins.style</code>. The
     * bulletin style
     */
    public final TableField<CoreIpsBulletinsRecord, String> STYLE = createField(DSL.name("style"), SQLDataType.VARCHAR(32).nullable(false), this, "The bulletin style");

    /**
     * The column <code>paradise_forums.core_ips_bulletins.dismissible</code>.
     * If the bulletin can be dismissed
     */
    public final TableField<CoreIpsBulletinsRecord, String> DISMISSIBLE = createField(DSL.name("dismissible"), SQLDataType.VARCHAR(32).nullable(false), this, "If the bulletin can be dismissed");

    /**
     * The column <code>paradise_forums.core_ips_bulletins.link</code>. Where
     * the notification should link to
     */
    public final TableField<CoreIpsBulletinsRecord, String> LINK = createField(DSL.name("link"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "Where the notification should link to");

    /**
     * The column <code>paradise_forums.core_ips_bulletins.cached</code>. Unix
     * timestamp of when this row was cached
     */
    public final TableField<CoreIpsBulletinsRecord, UInteger> CACHED = createField(DSL.name("cached"), SQLDataType.INTEGERUNSIGNED.nullable(false), this, "Unix timestamp of when this row was cached");

    /**
     * The column <code>paradise_forums.core_ips_bulletins.conditions</code>.
     * PHP code to check if notification should show
     */
    public final TableField<CoreIpsBulletinsRecord, String> CONDITIONS = createField(DSL.name("conditions"), SQLDataType.CLOB.nullable(false), this, "PHP code to check if notification should show");

    /**
     * The column <code>paradise_forums.core_ips_bulletins.min_version</code>.
     */
    public final TableField<CoreIpsBulletinsRecord, UInteger> MIN_VERSION = createField(DSL.name("min_version"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_ips_bulletins.max_version</code>.
     */
    public final TableField<CoreIpsBulletinsRecord, UInteger> MAX_VERSION = createField(DSL.name("max_version"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.INTEGERUNSIGNED)), this, "");

    private CoreIpsBulletins(Name alias, Table<CoreIpsBulletinsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreIpsBulletins(Name alias, Table<CoreIpsBulletinsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_ips_bulletins</code> table
     * reference
     */
    public CoreIpsBulletins(String alias) {
        this(DSL.name(alias), CORE_IPS_BULLETINS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_ips_bulletins</code> table
     * reference
     */
    public CoreIpsBulletins(Name alias) {
        this(alias, CORE_IPS_BULLETINS);
    }

    /**
     * Create a <code>paradise_forums.core_ips_bulletins</code> table reference
     */
    public CoreIpsBulletins() {
        this(DSL.name("core_ips_bulletins"), null);
    }

    public <O extends Record> CoreIpsBulletins(Table<O> child, ForeignKey<O, CoreIpsBulletinsRecord> key) {
        super(child, key, CORE_IPS_BULLETINS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public Identity<CoreIpsBulletinsRecord, ULong> getIdentity() {
        return (Identity<CoreIpsBulletinsRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreIpsBulletinsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_IPS_BULLETINS_PRIMARY;
    }

    @Override
    public CoreIpsBulletins as(String alias) {
        return new CoreIpsBulletins(DSL.name(alias), this);
    }

    @Override
    public CoreIpsBulletins as(Name alias) {
        return new CoreIpsBulletins(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreIpsBulletins rename(String name) {
        return new CoreIpsBulletins(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreIpsBulletins rename(Name name) {
        return new CoreIpsBulletins(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<ULong, String, String, String, String, String, String, UInteger, String, UInteger, UInteger> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
