/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAcpNotificationsPreferencesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreAcpNotificationsPreferences extends TableImpl<CoreAcpNotificationsPreferencesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_acp_notifications_preferences</code>
     */
    public static final CoreAcpNotificationsPreferences CORE_ACP_NOTIFICATIONS_PREFERENCES = new CoreAcpNotificationsPreferences();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreAcpNotificationsPreferencesRecord> getRecordType() {
        return CoreAcpNotificationsPreferencesRecord.class;
    }

    /**
     * The column
     * <code>paradise_forums.core_acp_notifications_preferences.member</code>.
     * Member ID Number
     */
    public final TableField<CoreAcpNotificationsPreferencesRecord, Long> MEMBER = createField(DSL.name("member"), SQLDataType.BIGINT.nullable(false), this, "Member ID Number");

    /**
     * The column
     * <code>paradise_forums.core_acp_notifications_preferences.type</code>. Key
     * representing the notification type
     */
    public final TableField<CoreAcpNotificationsPreferencesRecord, String> TYPE = createField(DSL.name("type"), SQLDataType.VARCHAR(32).nullable(false), this, "Key representing the notification type");

    /**
     * The column
     * <code>paradise_forums.core_acp_notifications_preferences.view</code>.
     * Does the admin want to view this type of notification?
     */
    public final TableField<CoreAcpNotificationsPreferencesRecord, UByte> VIEW = createField(DSL.name("view"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("1", SQLDataType.TINYINTUNSIGNED)), this, "Does the admin want to view this type of notification?");

    /**
     * The column
     * <code>paradise_forums.core_acp_notifications_preferences.email</code>.
     * How frequently to email the admin about this notification
     */
    public final TableField<CoreAcpNotificationsPreferencesRecord, String> EMAIL = createField(DSL.name("email"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("'never'", SQLDataType.VARCHAR)), this, "How frequently to email the admin about this notification");

    private CoreAcpNotificationsPreferences(Name alias, Table<CoreAcpNotificationsPreferencesRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreAcpNotificationsPreferences(Name alias, Table<CoreAcpNotificationsPreferencesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>paradise_forums.core_acp_notifications_preferences</code> table
     * reference
     */
    public CoreAcpNotificationsPreferences(String alias) {
        this(DSL.name(alias), CORE_ACP_NOTIFICATIONS_PREFERENCES);
    }

    /**
     * Create an aliased
     * <code>paradise_forums.core_acp_notifications_preferences</code> table
     * reference
     */
    public CoreAcpNotificationsPreferences(Name alias) {
        this(alias, CORE_ACP_NOTIFICATIONS_PREFERENCES);
    }

    /**
     * Create a <code>paradise_forums.core_acp_notifications_preferences</code>
     * table reference
     */
    public CoreAcpNotificationsPreferences() {
        this(DSL.name("core_acp_notifications_preferences"), null);
    }

    public <O extends Record> CoreAcpNotificationsPreferences(Table<O> child, ForeignKey<O, CoreAcpNotificationsPreferencesRecord> key) {
        super(child, key, CORE_ACP_NOTIFICATIONS_PREFERENCES);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public UniqueKey<CoreAcpNotificationsPreferencesRecord> getPrimaryKey() {
        return Keys.KEY_CORE_ACP_NOTIFICATIONS_PREFERENCES_PRIMARY;
    }

    @Override
    public CoreAcpNotificationsPreferences as(String alias) {
        return new CoreAcpNotificationsPreferences(DSL.name(alias), this);
    }

    @Override
    public CoreAcpNotificationsPreferences as(Name alias) {
        return new CoreAcpNotificationsPreferences(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreAcpNotificationsPreferences rename(String name) {
        return new CoreAcpNotificationsPreferences(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreAcpNotificationsPreferences rename(Name name) {
        return new CoreAcpNotificationsPreferences(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, UByte, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
