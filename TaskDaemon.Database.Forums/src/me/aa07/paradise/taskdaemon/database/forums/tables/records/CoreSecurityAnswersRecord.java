/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSecurityAnswers;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreSecurityAnswersRecord extends TableRecordImpl<CoreSecurityAnswersRecord> implements Record4<ULong, ULong, String, UByte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>paradise_forums.core_security_answers.answer_question_id</code>.
     * The ID number of the question this is an answer for
     */
    public void setAnswerQuestionId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_security_answers.answer_question_id</code>.
     * The ID number of the question this is an answer for
     */
    public ULong getAnswerQuestionId() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_security_answers.answer_member_id</code>. The
     * member ID this answer is for
     */
    public void setAnswerMemberId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_security_answers.answer_member_id</code>. The
     * member ID this answer is for
     */
    public ULong getAnswerMemberId() {
        return (ULong) get(1);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_security_answers.answer_answer</code>. The
     * answer, stored as an \IPS\Text\Encrypt tag
     */
    public void setAnswerAnswer(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_security_answers.answer_answer</code>. The
     * answer, stored as an \IPS\Text\Encrypt tag
     */
    public String getAnswerAnswer() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_security_answers.answer_is_chosen</code>. When
     * the authentication form is chosen, one answer is remembered with this
     * flag so that refreshing produces the same question
     */
    public void setAnswerIsChosen(UByte value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_security_answers.answer_is_chosen</code>. When
     * the authentication form is chosen, one answer is remembered with this
     * flag so that refreshing produces the same question
     */
    public UByte getAnswerIsChosen() {
        return (UByte) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<ULong, ULong, String, UByte> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<ULong, ULong, String, UByte> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CoreSecurityAnswers.CORE_SECURITY_ANSWERS.ANSWER_QUESTION_ID;
    }

    @Override
    public Field<ULong> field2() {
        return CoreSecurityAnswers.CORE_SECURITY_ANSWERS.ANSWER_MEMBER_ID;
    }

    @Override
    public Field<String> field3() {
        return CoreSecurityAnswers.CORE_SECURITY_ANSWERS.ANSWER_ANSWER;
    }

    @Override
    public Field<UByte> field4() {
        return CoreSecurityAnswers.CORE_SECURITY_ANSWERS.ANSWER_IS_CHOSEN;
    }

    @Override
    public ULong component1() {
        return getAnswerQuestionId();
    }

    @Override
    public ULong component2() {
        return getAnswerMemberId();
    }

    @Override
    public String component3() {
        return getAnswerAnswer();
    }

    @Override
    public UByte component4() {
        return getAnswerIsChosen();
    }

    @Override
    public ULong value1() {
        return getAnswerQuestionId();
    }

    @Override
    public ULong value2() {
        return getAnswerMemberId();
    }

    @Override
    public String value3() {
        return getAnswerAnswer();
    }

    @Override
    public UByte value4() {
        return getAnswerIsChosen();
    }

    @Override
    public CoreSecurityAnswersRecord value1(ULong value) {
        setAnswerQuestionId(value);
        return this;
    }

    @Override
    public CoreSecurityAnswersRecord value2(ULong value) {
        setAnswerMemberId(value);
        return this;
    }

    @Override
    public CoreSecurityAnswersRecord value3(String value) {
        setAnswerAnswer(value);
        return this;
    }

    @Override
    public CoreSecurityAnswersRecord value4(UByte value) {
        setAnswerIsChosen(value);
        return this;
    }

    @Override
    public CoreSecurityAnswersRecord values(ULong value1, ULong value2, String value3, UByte value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreSecurityAnswersRecord
     */
    public CoreSecurityAnswersRecord() {
        super(CoreSecurityAnswers.CORE_SECURITY_ANSWERS);
    }

    /**
     * Create a detached, initialised CoreSecurityAnswersRecord
     */
    public CoreSecurityAnswersRecord(ULong answerQuestionId, ULong answerMemberId, String answerAnswer, UByte answerIsChosen) {
        super(CoreSecurityAnswers.CORE_SECURITY_ANSWERS);

        setAnswerQuestionId(answerQuestionId);
        setAnswerMemberId(answerMemberId);
        setAnswerAnswer(answerAnswer);
        setAnswerIsChosen(answerIsChosen);
    }
}
