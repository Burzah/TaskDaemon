/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAutomaticModerationTypes;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreAutomaticModerationTypesRecord extends UpdatableRecordImpl<CoreAutomaticModerationTypesRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>paradise_forums.core_automatic_moderation_types.type_id</code>.
     */
    public void setTypeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_automatic_moderation_types.type_id</code>.
     */
    public Integer getTypeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_automatic_moderation_types.type_position</code>.
     */
    public void setTypePosition(Integer value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_automatic_moderation_types.type_position</code>.
     */
    public Integer getTypePosition() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CoreAutomaticModerationTypes.CORE_AUTOMATIC_MODERATION_TYPES.TYPE_ID;
    }

    @Override
    public Field<Integer> field2() {
        return CoreAutomaticModerationTypes.CORE_AUTOMATIC_MODERATION_TYPES.TYPE_POSITION;
    }

    @Override
    public Integer component1() {
        return getTypeId();
    }

    @Override
    public Integer component2() {
        return getTypePosition();
    }

    @Override
    public Integer value1() {
        return getTypeId();
    }

    @Override
    public Integer value2() {
        return getTypePosition();
    }

    @Override
    public CoreAutomaticModerationTypesRecord value1(Integer value) {
        setTypeId(value);
        return this;
    }

    @Override
    public CoreAutomaticModerationTypesRecord value2(Integer value) {
        setTypePosition(value);
        return this;
    }

    @Override
    public CoreAutomaticModerationTypesRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreAutomaticModerationTypesRecord
     */
    public CoreAutomaticModerationTypesRecord() {
        super(CoreAutomaticModerationTypes.CORE_AUTOMATIC_MODERATION_TYPES);
    }

    /**
     * Create a detached, initialised CoreAutomaticModerationTypesRecord
     */
    public CoreAutomaticModerationTypesRecord(Integer typeId, Integer typePosition) {
        super(CoreAutomaticModerationTypes.CORE_AUTOMATIC_MODERATION_TYPES);

        setTypeId(typeId);
        setTypePosition(typePosition);
    }
}
