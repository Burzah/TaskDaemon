/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreThemeTemplatesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreThemeTemplates extends TableImpl<CoreThemeTemplatesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_theme_templates</code>
     */
    public static final CoreThemeTemplates CORE_THEME_TEMPLATES = new CoreThemeTemplates();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreThemeTemplatesRecord> getRecordType() {
        return CoreThemeTemplatesRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_theme_templates.template_id</code>.
     */
    public final TableField<CoreThemeTemplatesRecord, Integer> TEMPLATE_ID = createField(DSL.name("template_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.core_theme_templates.template_set_id</code>.
     */
    public final TableField<CoreThemeTemplatesRecord, Integer> TEMPLATE_SET_ID = createField(DSL.name("template_set_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_theme_templates.template_group</code>.
     */
    public final TableField<CoreThemeTemplatesRecord, String> TEMPLATE_GROUP = createField(DSL.name("template_group"), SQLDataType.VARCHAR(80).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_theme_templates.template_content</code>.
     */
    public final TableField<CoreThemeTemplatesRecord, String> TEMPLATE_CONTENT = createField(DSL.name("template_content"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_theme_templates.template_name</code>.
     */
    public final TableField<CoreThemeTemplatesRecord, String> TEMPLATE_NAME = createField(DSL.name("template_name"), SQLDataType.VARCHAR(80).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_theme_templates.template_data</code>.
     */
    public final TableField<CoreThemeTemplatesRecord, String> TEMPLATE_DATA = createField(DSL.name("template_data"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_theme_templates.template_updated</code>.
     */
    public final TableField<CoreThemeTemplatesRecord, Integer> TEMPLATE_UPDATED = createField(DSL.name("template_updated"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_theme_templates.template_removable</code>.
     */
    public final TableField<CoreThemeTemplatesRecord, Integer> TEMPLATE_REMOVABLE = createField(DSL.name("template_removable"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_theme_templates.template_added_to</code>.
     */
    public final TableField<CoreThemeTemplatesRecord, Integer> TEMPLATE_ADDED_TO = createField(DSL.name("template_added_to"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_theme_templates.template_user_added</code>.
     */
    public final TableField<CoreThemeTemplatesRecord, Integer> TEMPLATE_USER_ADDED = createField(DSL.name("template_user_added"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_theme_templates.template_user_edited</code>.
     */
    public final TableField<CoreThemeTemplatesRecord, Integer> TEMPLATE_USER_EDITED = createField(DSL.name("template_user_edited"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_theme_templates.template_master_key</code>.
     */
    public final TableField<CoreThemeTemplatesRecord, String> TEMPLATE_MASTER_KEY = createField(DSL.name("template_master_key"), SQLDataType.VARCHAR(100).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_theme_templates.template_location</code>.
     */
    public final TableField<CoreThemeTemplatesRecord, String> TEMPLATE_LOCATION = createField(DSL.name("template_location"), SQLDataType.VARCHAR(80).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_theme_templates.template_app</code>.
     */
    public final TableField<CoreThemeTemplatesRecord, String> TEMPLATE_APP = createField(DSL.name("template_app"), SQLDataType.VARCHAR(50).nullable(false).defaultValue(DSL.inline("'core'", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_theme_templates.template_version</code>.
     */
    public final TableField<CoreThemeTemplatesRecord, String> TEMPLATE_VERSION = createField(DSL.name("template_version"), SQLDataType.VARCHAR(10).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_theme_templates.template_plugin</code>. The
     * plugin ID, if created by a plugin
     */
    public final TableField<CoreThemeTemplatesRecord, ULong> TEMPLATE_PLUGIN = createField(DSL.name("template_plugin"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.BIGINTUNSIGNED)), this, "The plugin ID, if created by a plugin");

    private CoreThemeTemplates(Name alias, Table<CoreThemeTemplatesRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreThemeTemplates(Name alias, Table<CoreThemeTemplatesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_theme_templates</code> table
     * reference
     */
    public CoreThemeTemplates(String alias) {
        this(DSL.name(alias), CORE_THEME_TEMPLATES);
    }

    /**
     * Create an aliased <code>paradise_forums.core_theme_templates</code> table
     * reference
     */
    public CoreThemeTemplates(Name alias) {
        this(alias, CORE_THEME_TEMPLATES);
    }

    /**
     * Create a <code>paradise_forums.core_theme_templates</code> table
     * reference
     */
    public CoreThemeTemplates() {
        this(DSL.name("core_theme_templates"), null);
    }

    public <O extends Record> CoreThemeTemplates(Table<O> child, ForeignKey<O, CoreThemeTemplatesRecord> key) {
        super(child, key, CORE_THEME_TEMPLATES);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_THEME_TEMPLATES_TEMPLATE_APP, Indexes.CORE_THEME_TEMPLATES_TEMPLATE_MASTER_KEY, Indexes.CORE_THEME_TEMPLATES_TEMPLATE_NAME, Indexes.CORE_THEME_TEMPLATES_TEMPLATE_SET_ID);
    }

    @Override
    public Identity<CoreThemeTemplatesRecord, Integer> getIdentity() {
        return (Identity<CoreThemeTemplatesRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreThemeTemplatesRecord> getPrimaryKey() {
        return Keys.KEY_CORE_THEME_TEMPLATES_PRIMARY;
    }

    @Override
    public List<UniqueKey<CoreThemeTemplatesRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_CORE_THEME_TEMPLATES_UNIQUE_KEY);
    }

    @Override
    public CoreThemeTemplates as(String alias) {
        return new CoreThemeTemplates(DSL.name(alias), this);
    }

    @Override
    public CoreThemeTemplates as(Name alias) {
        return new CoreThemeTemplates(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreThemeTemplates rename(String name) {
        return new CoreThemeTemplates(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreThemeTemplates rename(Name name) {
        return new CoreThemeTemplates(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<Integer, Integer, String, String, String, String, Integer, Integer, Integer, Integer, Integer, String, String, String, String, ULong> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
