/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMemberRanksRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreMemberRanks extends TableImpl<CoreMemberRanksRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_member_ranks</code>
     */
    public static final CoreMemberRanks CORE_MEMBER_RANKS = new CoreMemberRanks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreMemberRanksRecord> getRecordType() {
        return CoreMemberRanksRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_member_ranks.id</code>.
     */
    public final TableField<CoreMemberRanksRecord, Short> ID = createField(DSL.name("id"), SQLDataType.SMALLINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_member_ranks.points</code>.
     */
    public final TableField<CoreMemberRanksRecord, Integer> POINTS = createField(DSL.name("points"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_member_ranks.title</code>.
     */
    public final TableField<CoreMemberRanksRecord, String> TITLE = createField(DSL.name("title"), SQLDataType.VARCHAR(128).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_member_ranks.icon</code>.
     */
    public final TableField<CoreMemberRanksRecord, String> ICON = createField(DSL.name("icon"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    private CoreMemberRanks(Name alias, Table<CoreMemberRanksRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreMemberRanks(Name alias, Table<CoreMemberRanksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_member_ranks</code> table
     * reference
     */
    public CoreMemberRanks(String alias) {
        this(DSL.name(alias), CORE_MEMBER_RANKS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_member_ranks</code> table
     * reference
     */
    public CoreMemberRanks(Name alias) {
        this(alias, CORE_MEMBER_RANKS);
    }

    /**
     * Create a <code>paradise_forums.core_member_ranks</code> table reference
     */
    public CoreMemberRanks() {
        this(DSL.name("core_member_ranks"), null);
    }

    public <O extends Record> CoreMemberRanks(Table<O> child, ForeignKey<O, CoreMemberRanksRecord> key) {
        super(child, key, CORE_MEMBER_RANKS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_MEMBER_RANKS_POSTS);
    }

    @Override
    public Identity<CoreMemberRanksRecord, Short> getIdentity() {
        return (Identity<CoreMemberRanksRecord, Short>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreMemberRanksRecord> getPrimaryKey() {
        return Keys.KEY_CORE_MEMBER_RANKS_PRIMARY;
    }

    @Override
    public CoreMemberRanks as(String alias) {
        return new CoreMemberRanks(DSL.name(alias), this);
    }

    @Override
    public CoreMemberRanks as(Name alias) {
        return new CoreMemberRanks(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMemberRanks rename(String name) {
        return new CoreMemberRanks(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMemberRanks rename(Name name) {
        return new CoreMemberRanks(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Short, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
