/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CorePfieldsGroupsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CorePfieldsGroups extends TableImpl<CorePfieldsGroupsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_pfields_groups</code>
     */
    public static final CorePfieldsGroups CORE_PFIELDS_GROUPS = new CorePfieldsGroups();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CorePfieldsGroupsRecord> getRecordType() {
        return CorePfieldsGroupsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_pfields_groups.pf_group_id</code>.
     */
    public final TableField<CorePfieldsGroupsRecord, UInteger> PF_GROUP_ID = createField(DSL.name("pf_group_id"), SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.core_pfields_groups.pf_group_order</code>.
     */
    public final TableField<CorePfieldsGroupsRecord, Integer> PF_GROUP_ORDER = createField(DSL.name("pf_group_order"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    private CorePfieldsGroups(Name alias, Table<CorePfieldsGroupsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CorePfieldsGroups(Name alias, Table<CorePfieldsGroupsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_pfields_groups</code> table
     * reference
     */
    public CorePfieldsGroups(String alias) {
        this(DSL.name(alias), CORE_PFIELDS_GROUPS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_pfields_groups</code> table
     * reference
     */
    public CorePfieldsGroups(Name alias) {
        this(alias, CORE_PFIELDS_GROUPS);
    }

    /**
     * Create a <code>paradise_forums.core_pfields_groups</code> table reference
     */
    public CorePfieldsGroups() {
        this(DSL.name("core_pfields_groups"), null);
    }

    public <O extends Record> CorePfieldsGroups(Table<O> child, ForeignKey<O, CorePfieldsGroupsRecord> key) {
        super(child, key, CORE_PFIELDS_GROUPS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public Identity<CorePfieldsGroupsRecord, UInteger> getIdentity() {
        return (Identity<CorePfieldsGroupsRecord, UInteger>) super.getIdentity();
    }

    @Override
    public UniqueKey<CorePfieldsGroupsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_PFIELDS_GROUPS_PRIMARY;
    }

    @Override
    public CorePfieldsGroups as(String alias) {
        return new CorePfieldsGroups(DSL.name(alias), this);
    }

    @Override
    public CorePfieldsGroups as(Name alias) {
        return new CorePfieldsGroups(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CorePfieldsGroups rename(String name) {
        return new CorePfieldsGroups(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CorePfieldsGroups rename(Name name) {
        return new CorePfieldsGroups(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<UInteger, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
