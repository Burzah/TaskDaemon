/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CorePfieldsData;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CorePfieldsDataRecord extends UpdatableRecordImpl<CorePfieldsDataRecord> implements Record20<Short, String, String, Byte, String, Integer, Byte, Short, Byte, String, String, UInteger, String, Byte, Byte, UByte, String, Byte, String, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_pfields_data.pf_id</code>.
     */
    public void setPfId(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_pfields_data.pf_id</code>.
     */
    public Short getPfId() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_pfields_data.pf_content</code>.
     */
    public void setPfContent(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_pfields_data.pf_content</code>.
     */
    public String getPfContent() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_pfields_data.pf_type</code>.
     */
    public void setPfType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_pfields_data.pf_type</code>.
     */
    public String getPfType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_pfields_data.pf_not_null</code>.
     */
    public void setPfNotNull(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_pfields_data.pf_not_null</code>.
     */
    public Byte getPfNotNull() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_pfields_data.pf_member_hide</code>.
     */
    public void setPfMemberHide(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_pfields_data.pf_member_hide</code>.
     */
    public String getPfMemberHide() {
        return (String) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_pfields_data.pf_max_input</code>.
     */
    public void setPfMaxInput(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_pfields_data.pf_max_input</code>.
     */
    public Integer getPfMaxInput() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>paradise_forums.core_pfields_data.pf_member_edit</code>.
     */
    public void setPfMemberEdit(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.core_pfields_data.pf_member_edit</code>.
     */
    public Byte getPfMemberEdit() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>paradise_forums.core_pfields_data.pf_position</code>.
     */
    public void setPfPosition(Short value) {
        set(7, value);
    }

    /**
     * Getter for <code>paradise_forums.core_pfields_data.pf_position</code>.
     */
    public Short getPfPosition() {
        return (Short) get(7);
    }

    /**
     * Setter for <code>paradise_forums.core_pfields_data.pf_show_on_reg</code>.
     */
    public void setPfShowOnReg(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>paradise_forums.core_pfields_data.pf_show_on_reg</code>.
     */
    public Byte getPfShowOnReg() {
        return (Byte) get(8);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_pfields_data.pf_input_format</code>.
     */
    public void setPfInputFormat(String value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_pfields_data.pf_input_format</code>.
     */
    public String getPfInputFormat() {
        return (String) get(9);
    }

    /**
     * Setter for <code>paradise_forums.core_pfields_data.pf_format</code>.
     * Custom formatting for topic view
     */
    public void setPfFormat(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>paradise_forums.core_pfields_data.pf_format</code>.
     * Custom formatting for topic view
     */
    public String getPfFormat() {
        return (String) get(10);
    }

    /**
     * Setter for <code>paradise_forums.core_pfields_data.pf_group_id</code>.
     */
    public void setPfGroupId(UInteger value) {
        set(11, value);
    }

    /**
     * Getter for <code>paradise_forums.core_pfields_data.pf_group_id</code>.
     */
    public UInteger getPfGroupId() {
        return (UInteger) get(11);
    }

    /**
     * Setter for <code>paradise_forums.core_pfields_data.pf_search_type</code>.
     */
    public void setPfSearchType(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>paradise_forums.core_pfields_data.pf_search_type</code>.
     */
    public String getPfSearchType() {
        return (String) get(12);
    }

    /**
     * Setter for <code>paradise_forums.core_pfields_data.pf_filtering</code>.
     */
    public void setPfFiltering(Byte value) {
        set(13, value);
    }

    /**
     * Getter for <code>paradise_forums.core_pfields_data.pf_filtering</code>.
     */
    public Byte getPfFiltering() {
        return (Byte) get(13);
    }

    /**
     * Setter for <code>paradise_forums.core_pfields_data.pf_multiple</code>.
     */
    public void setPfMultiple(Byte value) {
        set(14, value);
    }

    /**
     * Getter for <code>paradise_forums.core_pfields_data.pf_multiple</code>.
     */
    public Byte getPfMultiple() {
        return (Byte) get(14);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_pfields_data.pf_allow_attachments</code>.
     */
    public void setPfAllowAttachments(UByte value) {
        set(15, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_pfields_data.pf_allow_attachments</code>.
     */
    public UByte getPfAllowAttachments() {
        return (UByte) get(15);
    }

    /**
     * Setter for <code>paradise_forums.core_pfields_data.pf_topic_hide</code>.
     */
    public void setPfTopicHide(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>paradise_forums.core_pfields_data.pf_topic_hide</code>.
     */
    public String getPfTopicHide() {
        return (String) get(16);
    }

    /**
     * Setter for <code>paradise_forums.core_pfields_data.pf_admin_only</code>.
     */
    public void setPfAdminOnly(Byte value) {
        set(17, value);
    }

    /**
     * Getter for <code>paradise_forums.core_pfields_data.pf_admin_only</code>.
     */
    public Byte getPfAdminOnly() {
        return (Byte) get(17);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_pfields_data.pf_profile_format</code>. Custom
     * formatting for profiles
     */
    public void setPfProfileFormat(String value) {
        set(18, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_pfields_data.pf_profile_format</code>. Custom
     * formatting for profiles
     */
    public String getPfProfileFormat() {
        return (String) get(18);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_pfields_data.pf_contains_pii</code>. Can be
     * used to use it while the pii data export
     */
    public void setPfContainsPii(Byte value) {
        set(19, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_pfields_data.pf_contains_pii</code>. Can be
     * used to use it while the pii data export
     */
    public Byte getPfContainsPii() {
        return (Byte) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Short> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row20<Short, String, String, Byte, String, Integer, Byte, Short, Byte, String, String, UInteger, String, Byte, Byte, UByte, String, Byte, String, Byte> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    @Override
    public Row20<Short, String, String, Byte, String, Integer, Byte, Short, Byte, String, String, UInteger, String, Byte, Byte, UByte, String, Byte, String, Byte> valuesRow() {
        return (Row20) super.valuesRow();
    }

    @Override
    public Field<Short> field1() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_ID;
    }

    @Override
    public Field<String> field2() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_CONTENT;
    }

    @Override
    public Field<String> field3() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_TYPE;
    }

    @Override
    public Field<Byte> field4() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_NOT_NULL;
    }

    @Override
    public Field<String> field5() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_MEMBER_HIDE;
    }

    @Override
    public Field<Integer> field6() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_MAX_INPUT;
    }

    @Override
    public Field<Byte> field7() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_MEMBER_EDIT;
    }

    @Override
    public Field<Short> field8() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_POSITION;
    }

    @Override
    public Field<Byte> field9() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_SHOW_ON_REG;
    }

    @Override
    public Field<String> field10() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_INPUT_FORMAT;
    }

    @Override
    public Field<String> field11() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_FORMAT;
    }

    @Override
    public Field<UInteger> field12() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_GROUP_ID;
    }

    @Override
    public Field<String> field13() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_SEARCH_TYPE;
    }

    @Override
    public Field<Byte> field14() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_FILTERING;
    }

    @Override
    public Field<Byte> field15() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_MULTIPLE;
    }

    @Override
    public Field<UByte> field16() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_ALLOW_ATTACHMENTS;
    }

    @Override
    public Field<String> field17() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_TOPIC_HIDE;
    }

    @Override
    public Field<Byte> field18() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_ADMIN_ONLY;
    }

    @Override
    public Field<String> field19() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_PROFILE_FORMAT;
    }

    @Override
    public Field<Byte> field20() {
        return CorePfieldsData.CORE_PFIELDS_DATA.PF_CONTAINS_PII;
    }

    @Override
    public Short component1() {
        return getPfId();
    }

    @Override
    public String component2() {
        return getPfContent();
    }

    @Override
    public String component3() {
        return getPfType();
    }

    @Override
    public Byte component4() {
        return getPfNotNull();
    }

    @Override
    public String component5() {
        return getPfMemberHide();
    }

    @Override
    public Integer component6() {
        return getPfMaxInput();
    }

    @Override
    public Byte component7() {
        return getPfMemberEdit();
    }

    @Override
    public Short component8() {
        return getPfPosition();
    }

    @Override
    public Byte component9() {
        return getPfShowOnReg();
    }

    @Override
    public String component10() {
        return getPfInputFormat();
    }

    @Override
    public String component11() {
        return getPfFormat();
    }

    @Override
    public UInteger component12() {
        return getPfGroupId();
    }

    @Override
    public String component13() {
        return getPfSearchType();
    }

    @Override
    public Byte component14() {
        return getPfFiltering();
    }

    @Override
    public Byte component15() {
        return getPfMultiple();
    }

    @Override
    public UByte component16() {
        return getPfAllowAttachments();
    }

    @Override
    public String component17() {
        return getPfTopicHide();
    }

    @Override
    public Byte component18() {
        return getPfAdminOnly();
    }

    @Override
    public String component19() {
        return getPfProfileFormat();
    }

    @Override
    public Byte component20() {
        return getPfContainsPii();
    }

    @Override
    public Short value1() {
        return getPfId();
    }

    @Override
    public String value2() {
        return getPfContent();
    }

    @Override
    public String value3() {
        return getPfType();
    }

    @Override
    public Byte value4() {
        return getPfNotNull();
    }

    @Override
    public String value5() {
        return getPfMemberHide();
    }

    @Override
    public Integer value6() {
        return getPfMaxInput();
    }

    @Override
    public Byte value7() {
        return getPfMemberEdit();
    }

    @Override
    public Short value8() {
        return getPfPosition();
    }

    @Override
    public Byte value9() {
        return getPfShowOnReg();
    }

    @Override
    public String value10() {
        return getPfInputFormat();
    }

    @Override
    public String value11() {
        return getPfFormat();
    }

    @Override
    public UInteger value12() {
        return getPfGroupId();
    }

    @Override
    public String value13() {
        return getPfSearchType();
    }

    @Override
    public Byte value14() {
        return getPfFiltering();
    }

    @Override
    public Byte value15() {
        return getPfMultiple();
    }

    @Override
    public UByte value16() {
        return getPfAllowAttachments();
    }

    @Override
    public String value17() {
        return getPfTopicHide();
    }

    @Override
    public Byte value18() {
        return getPfAdminOnly();
    }

    @Override
    public String value19() {
        return getPfProfileFormat();
    }

    @Override
    public Byte value20() {
        return getPfContainsPii();
    }

    @Override
    public CorePfieldsDataRecord value1(Short value) {
        setPfId(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value2(String value) {
        setPfContent(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value3(String value) {
        setPfType(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value4(Byte value) {
        setPfNotNull(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value5(String value) {
        setPfMemberHide(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value6(Integer value) {
        setPfMaxInput(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value7(Byte value) {
        setPfMemberEdit(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value8(Short value) {
        setPfPosition(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value9(Byte value) {
        setPfShowOnReg(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value10(String value) {
        setPfInputFormat(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value11(String value) {
        setPfFormat(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value12(UInteger value) {
        setPfGroupId(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value13(String value) {
        setPfSearchType(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value14(Byte value) {
        setPfFiltering(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value15(Byte value) {
        setPfMultiple(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value16(UByte value) {
        setPfAllowAttachments(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value17(String value) {
        setPfTopicHide(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value18(Byte value) {
        setPfAdminOnly(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value19(String value) {
        setPfProfileFormat(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord value20(Byte value) {
        setPfContainsPii(value);
        return this;
    }

    @Override
    public CorePfieldsDataRecord values(Short value1, String value2, String value3, Byte value4, String value5, Integer value6, Byte value7, Short value8, Byte value9, String value10, String value11, UInteger value12, String value13, Byte value14, Byte value15, UByte value16, String value17, Byte value18, String value19, Byte value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CorePfieldsDataRecord
     */
    public CorePfieldsDataRecord() {
        super(CorePfieldsData.CORE_PFIELDS_DATA);
    }

    /**
     * Create a detached, initialised CorePfieldsDataRecord
     */
    public CorePfieldsDataRecord(Short pfId, String pfContent, String pfType, Byte pfNotNull, String pfMemberHide, Integer pfMaxInput, Byte pfMemberEdit, Short pfPosition, Byte pfShowOnReg, String pfInputFormat, String pfFormat, UInteger pfGroupId, String pfSearchType, Byte pfFiltering, Byte pfMultiple, UByte pfAllowAttachments, String pfTopicHide, Byte pfAdminOnly, String pfProfileFormat, Byte pfContainsPii) {
        super(CorePfieldsData.CORE_PFIELDS_DATA);

        setPfId(pfId);
        setPfContent(pfContent);
        setPfType(pfType);
        setPfNotNull(pfNotNull);
        setPfMemberHide(pfMemberHide);
        setPfMaxInput(pfMaxInput);
        setPfMemberEdit(pfMemberEdit);
        setPfPosition(pfPosition);
        setPfShowOnReg(pfShowOnReg);
        setPfInputFormat(pfInputFormat);
        setPfFormat(pfFormat);
        setPfGroupId(pfGroupId);
        setPfSearchType(pfSearchType);
        setPfFiltering(pfFiltering);
        setPfMultiple(pfMultiple);
        setPfAllowAttachments(pfAllowAttachments);
        setPfTopicHide(pfTopicHide);
        setPfAdminOnly(pfAdminOnly);
        setPfProfileFormat(pfProfileFormat);
        setPfContainsPii(pfContainsPii);
    }
}
