/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreRcReportsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreRcReports extends TableImpl<CoreRcReportsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_rc_reports</code>
     */
    public static final CoreRcReports CORE_RC_REPORTS = new CoreRcReports();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreRcReportsRecord> getRecordType() {
        return CoreRcReportsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_rc_reports.id</code>.
     */
    public final TableField<CoreRcReportsRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_rc_reports.rid</code>.
     */
    public final TableField<CoreRcReportsRecord, Integer> RID = createField(DSL.name("rid"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_rc_reports.report</code>.
     */
    public final TableField<CoreRcReportsRecord, String> REPORT = createField(DSL.name("report"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>paradise_forums.core_rc_reports.report_by</code>.
     */
    public final TableField<CoreRcReportsRecord, ULong> REPORT_BY = createField(DSL.name("report_by"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_rc_reports.date_reported</code>.
     */
    public final TableField<CoreRcReportsRecord, Integer> DATE_REPORTED = createField(DSL.name("date_reported"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_rc_reports.ip_address</code>. The
     * IP address of the user reporting the content
     */
    public final TableField<CoreRcReportsRecord, String> IP_ADDRESS = createField(DSL.name("ip_address"), SQLDataType.VARCHAR(46).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "The IP address of the user reporting the content");

    /**
     * The column <code>paradise_forums.core_rc_reports.report_type</code>.
     */
    public final TableField<CoreRcReportsRecord, UInteger> REPORT_TYPE = createField(DSL.name("report_type"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_rc_reports.guest_name</code>.
     */
    public final TableField<CoreRcReportsRecord, String> GUEST_NAME = createField(DSL.name("guest_name"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_rc_reports.guest_email</code>.
     */
    public final TableField<CoreRcReportsRecord, String> GUEST_EMAIL = createField(DSL.name("guest_email"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    private CoreRcReports(Name alias, Table<CoreRcReportsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreRcReports(Name alias, Table<CoreRcReportsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_rc_reports</code> table
     * reference
     */
    public CoreRcReports(String alias) {
        this(DSL.name(alias), CORE_RC_REPORTS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_rc_reports</code> table
     * reference
     */
    public CoreRcReports(Name alias) {
        this(alias, CORE_RC_REPORTS);
    }

    /**
     * Create a <code>paradise_forums.core_rc_reports</code> table reference
     */
    public CoreRcReports() {
        this(DSL.name("core_rc_reports"), null);
    }

    public <O extends Record> CoreRcReports(Table<O> child, ForeignKey<O, CoreRcReportsRecord> key) {
        super(child, key, CORE_RC_REPORTS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_RC_REPORTS_IP_ADDRESS, Indexes.CORE_RC_REPORTS_REPORT_BY, Indexes.CORE_RC_REPORTS_RID);
    }

    @Override
    public Identity<CoreRcReportsRecord, Integer> getIdentity() {
        return (Identity<CoreRcReportsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreRcReportsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_RC_REPORTS_PRIMARY;
    }

    @Override
    public CoreRcReports as(String alias) {
        return new CoreRcReports(DSL.name(alias), this);
    }

    @Override
    public CoreRcReports as(Name alias) {
        return new CoreRcReports(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreRcReports rename(String name) {
        return new CoreRcReports(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreRcReports rename(Name name) {
        return new CoreRcReports(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, String, ULong, Integer, String, UInteger, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
