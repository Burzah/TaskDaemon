/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreRssExportRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreRssExport extends TableImpl<CoreRssExportRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_rss_export</code>
     */
    public static final CoreRssExport CORE_RSS_EXPORT = new CoreRssExport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreRssExportRecord> getRecordType() {
        return CoreRssExportRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_rss_export.rss_id</code>. ID Number
     */
    public final TableField<CoreRssExportRecord, ULong> RSS_ID = createField(DSL.name("rss_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "ID Number");

    /**
     * The column <code>paradise_forums.core_rss_export.rss_enabled</code>.
     */
    public final TableField<CoreRssExportRecord, Byte> RSS_ENABLED = createField(DSL.name("rss_enabled"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("1", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.core_rss_export.rss_seo_title</code>.
     */
    public final TableField<CoreRssExportRecord, String> RSS_SEO_TITLE = createField(DSL.name("rss_seo_title"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_rss_export.rss_configuration</code>.
     */
    public final TableField<CoreRssExportRecord, String> RSS_CONFIGURATION = createField(DSL.name("rss_configuration"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>paradise_forums.core_rss_export.rss_count</code>.
     */
    public final TableField<CoreRssExportRecord, Integer> RSS_COUNT = createField(DSL.name("rss_count"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_rss_export.rss_position</code>.
     */
    public final TableField<CoreRssExportRecord, Integer> RSS_POSITION = createField(DSL.name("rss_position"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_rss_export.rss_groups</code>.
     */
    public final TableField<CoreRssExportRecord, String> RSS_GROUPS = createField(DSL.name("rss_groups"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    private CoreRssExport(Name alias, Table<CoreRssExportRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreRssExport(Name alias, Table<CoreRssExportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_rss_export</code> table
     * reference
     */
    public CoreRssExport(String alias) {
        this(DSL.name(alias), CORE_RSS_EXPORT);
    }

    /**
     * Create an aliased <code>paradise_forums.core_rss_export</code> table
     * reference
     */
    public CoreRssExport(Name alias) {
        this(alias, CORE_RSS_EXPORT);
    }

    /**
     * Create a <code>paradise_forums.core_rss_export</code> table reference
     */
    public CoreRssExport() {
        this(DSL.name("core_rss_export"), null);
    }

    public <O extends Record> CoreRssExport(Table<O> child, ForeignKey<O, CoreRssExportRecord> key) {
        super(child, key, CORE_RSS_EXPORT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public Identity<CoreRssExportRecord, ULong> getIdentity() {
        return (Identity<CoreRssExportRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreRssExportRecord> getPrimaryKey() {
        return Keys.KEY_CORE_RSS_EXPORT_PRIMARY;
    }

    @Override
    public CoreRssExport as(String alias) {
        return new CoreRssExport(DSL.name(alias), this);
    }

    @Override
    public CoreRssExport as(Name alias) {
        return new CoreRssExport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreRssExport rename(String name) {
        return new CoreRssExport(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreRssExport rename(Name name) {
        return new CoreRssExport(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<ULong, Byte, String, String, Integer, Integer, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
