/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreFollowCountCacheRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreFollowCountCache extends TableImpl<CoreFollowCountCacheRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_follow_count_cache</code>
     */
    public static final CoreFollowCountCache CORE_FOLLOW_COUNT_CACHE = new CoreFollowCountCache();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreFollowCountCacheRecord> getRecordType() {
        return CoreFollowCountCacheRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_follow_count_cache.id</code>.
     */
    public final TableField<CoreFollowCountCacheRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>paradise_forums.core_follow_count_cache.class</code>.
     */
    public final TableField<CoreFollowCountCacheRecord, String> CLASS = createField(DSL.name("class"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_follow_count_cache.count</code>.
     */
    public final TableField<CoreFollowCountCacheRecord, Integer> COUNT = createField(DSL.name("count"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_follow_count_cache.added</code>.
     */
    public final TableField<CoreFollowCountCacheRecord, UInteger> ADDED = createField(DSL.name("added"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    private CoreFollowCountCache(Name alias, Table<CoreFollowCountCacheRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreFollowCountCache(Name alias, Table<CoreFollowCountCacheRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_follow_count_cache</code>
     * table reference
     */
    public CoreFollowCountCache(String alias) {
        this(DSL.name(alias), CORE_FOLLOW_COUNT_CACHE);
    }

    /**
     * Create an aliased <code>paradise_forums.core_follow_count_cache</code>
     * table reference
     */
    public CoreFollowCountCache(Name alias) {
        this(alias, CORE_FOLLOW_COUNT_CACHE);
    }

    /**
     * Create a <code>paradise_forums.core_follow_count_cache</code> table
     * reference
     */
    public CoreFollowCountCache() {
        this(DSL.name("core_follow_count_cache"), null);
    }

    public <O extends Record> CoreFollowCountCache(Table<O> child, ForeignKey<O, CoreFollowCountCacheRecord> key) {
        super(child, key, CORE_FOLLOW_COUNT_CACHE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_FOLLOW_COUNT_CACHE_ADDED);
    }

    @Override
    public List<UniqueKey<CoreFollowCountCacheRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_CORE_FOLLOW_COUNT_CACHE_ID_CLASS);
    }

    @Override
    public CoreFollowCountCache as(String alias) {
        return new CoreFollowCountCache(DSL.name(alias), this);
    }

    @Override
    public CoreFollowCountCache as(Name alias) {
        return new CoreFollowCountCache(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreFollowCountCache rename(String name) {
        return new CoreFollowCountCache(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreFollowCountCache rename(Name name) {
        return new CoreFollowCountCache(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, Integer, UInteger> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
