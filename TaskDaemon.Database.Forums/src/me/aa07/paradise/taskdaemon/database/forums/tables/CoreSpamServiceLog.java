/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSpamServiceLogRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreSpamServiceLog extends TableImpl<CoreSpamServiceLogRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_spam_service_log</code>
     */
    public static final CoreSpamServiceLog CORE_SPAM_SERVICE_LOG = new CoreSpamServiceLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreSpamServiceLogRecord> getRecordType() {
        return CoreSpamServiceLogRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_spam_service_log.id</code>.
     */
    public final TableField<CoreSpamServiceLogRecord, UInteger> ID = createField(DSL.name("id"), SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_spam_service_log.log_date</code>.
     */
    public final TableField<CoreSpamServiceLogRecord, UInteger> LOG_DATE = createField(DSL.name("log_date"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_spam_service_log.log_code</code>.
     */
    public final TableField<CoreSpamServiceLogRecord, UShort> LOG_CODE = createField(DSL.name("log_code"), SQLDataType.SMALLINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.SMALLINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_spam_service_log.log_msg</code>.
     */
    public final TableField<CoreSpamServiceLogRecord, String> LOG_MSG = createField(DSL.name("log_msg"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_spam_service_log.email_address</code>.
     */
    public final TableField<CoreSpamServiceLogRecord, String> EMAIL_ADDRESS = createField(DSL.name("email_address"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_spam_service_log.ip_address</code>.
     */
    public final TableField<CoreSpamServiceLogRecord, String> IP_ADDRESS = createField(DSL.name("ip_address"), SQLDataType.VARCHAR(46).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    private CoreSpamServiceLog(Name alias, Table<CoreSpamServiceLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreSpamServiceLog(Name alias, Table<CoreSpamServiceLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_spam_service_log</code>
     * table reference
     */
    public CoreSpamServiceLog(String alias) {
        this(DSL.name(alias), CORE_SPAM_SERVICE_LOG);
    }

    /**
     * Create an aliased <code>paradise_forums.core_spam_service_log</code>
     * table reference
     */
    public CoreSpamServiceLog(Name alias) {
        this(alias, CORE_SPAM_SERVICE_LOG);
    }

    /**
     * Create a <code>paradise_forums.core_spam_service_log</code> table
     * reference
     */
    public CoreSpamServiceLog() {
        this(DSL.name("core_spam_service_log"), null);
    }

    public <O extends Record> CoreSpamServiceLog(Table<O> child, ForeignKey<O, CoreSpamServiceLogRecord> key) {
        super(child, key, CORE_SPAM_SERVICE_LOG);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_SPAM_SERVICE_LOG_LOG_DATE);
    }

    @Override
    public Identity<CoreSpamServiceLogRecord, UInteger> getIdentity() {
        return (Identity<CoreSpamServiceLogRecord, UInteger>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreSpamServiceLogRecord> getPrimaryKey() {
        return Keys.KEY_CORE_SPAM_SERVICE_LOG_PRIMARY;
    }

    @Override
    public CoreSpamServiceLog as(String alias) {
        return new CoreSpamServiceLog(DSL.name(alias), this);
    }

    @Override
    public CoreSpamServiceLog as(Name alias) {
        return new CoreSpamServiceLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreSpamServiceLog rename(String name) {
        return new CoreSpamServiceLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreSpamServiceLog rename(Name name) {
        return new CoreSpamServiceLog(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<UInteger, UInteger, UShort, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
