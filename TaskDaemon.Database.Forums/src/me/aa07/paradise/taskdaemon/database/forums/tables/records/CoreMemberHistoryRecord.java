/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import java.math.BigDecimal;

import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMemberHistory;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreMemberHistoryRecord extends UpdatableRecordImpl<CoreMemberHistoryRecord> implements Record8<ULong, String, ULong, ULong, String, String, BigDecimal, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_member_history.log_id</code>. ID
     * Number
     */
    public void setLogId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_member_history.log_id</code>. ID
     * Number
     */
    public ULong getLogId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_member_history.log_app</code>.
     * Application
     */
    public void setLogApp(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_member_history.log_app</code>.
     * Application
     */
    public String getLogApp() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_member_history.log_member</code>.
     * Member ID
     */
    public void setLogMember(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_member_history.log_member</code>.
     * Member ID
     */
    public ULong getLogMember() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_member_history.log_by</code>.
     * Action performed by
     */
    public void setLogBy(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_member_history.log_by</code>.
     * Action performed by
     */
    public ULong getLogBy() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_member_history.log_type</code>. Log
     * Type
     */
    public void setLogType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_member_history.log_type</code>. Log
     * Type
     */
    public String getLogType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_member_history.log_data</code>.
     */
    public void setLogData(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_member_history.log_data</code>.
     */
    public String getLogData() {
        return (String) get(5);
    }

    /**
     * Setter for <code>paradise_forums.core_member_history.log_date</code>.
     */
    public void setLogDate(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.core_member_history.log_date</code>.
     */
    public BigDecimal getLogDate() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_member_history.log_ip_address</code>.
     */
    public void setLogIpAddress(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_member_history.log_ip_address</code>.
     */
    public String getLogIpAddress() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<ULong, String, ULong, ULong, String, String, BigDecimal, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<ULong, String, ULong, ULong, String, String, BigDecimal, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CoreMemberHistory.CORE_MEMBER_HISTORY.LOG_ID;
    }

    @Override
    public Field<String> field2() {
        return CoreMemberHistory.CORE_MEMBER_HISTORY.LOG_APP;
    }

    @Override
    public Field<ULong> field3() {
        return CoreMemberHistory.CORE_MEMBER_HISTORY.LOG_MEMBER;
    }

    @Override
    public Field<ULong> field4() {
        return CoreMemberHistory.CORE_MEMBER_HISTORY.LOG_BY;
    }

    @Override
    public Field<String> field5() {
        return CoreMemberHistory.CORE_MEMBER_HISTORY.LOG_TYPE;
    }

    @Override
    public Field<String> field6() {
        return CoreMemberHistory.CORE_MEMBER_HISTORY.LOG_DATA;
    }

    @Override
    public Field<BigDecimal> field7() {
        return CoreMemberHistory.CORE_MEMBER_HISTORY.LOG_DATE;
    }

    @Override
    public Field<String> field8() {
        return CoreMemberHistory.CORE_MEMBER_HISTORY.LOG_IP_ADDRESS;
    }

    @Override
    public ULong component1() {
        return getLogId();
    }

    @Override
    public String component2() {
        return getLogApp();
    }

    @Override
    public ULong component3() {
        return getLogMember();
    }

    @Override
    public ULong component4() {
        return getLogBy();
    }

    @Override
    public String component5() {
        return getLogType();
    }

    @Override
    public String component6() {
        return getLogData();
    }

    @Override
    public BigDecimal component7() {
        return getLogDate();
    }

    @Override
    public String component8() {
        return getLogIpAddress();
    }

    @Override
    public ULong value1() {
        return getLogId();
    }

    @Override
    public String value2() {
        return getLogApp();
    }

    @Override
    public ULong value3() {
        return getLogMember();
    }

    @Override
    public ULong value4() {
        return getLogBy();
    }

    @Override
    public String value5() {
        return getLogType();
    }

    @Override
    public String value6() {
        return getLogData();
    }

    @Override
    public BigDecimal value7() {
        return getLogDate();
    }

    @Override
    public String value8() {
        return getLogIpAddress();
    }

    @Override
    public CoreMemberHistoryRecord value1(ULong value) {
        setLogId(value);
        return this;
    }

    @Override
    public CoreMemberHistoryRecord value2(String value) {
        setLogApp(value);
        return this;
    }

    @Override
    public CoreMemberHistoryRecord value3(ULong value) {
        setLogMember(value);
        return this;
    }

    @Override
    public CoreMemberHistoryRecord value4(ULong value) {
        setLogBy(value);
        return this;
    }

    @Override
    public CoreMemberHistoryRecord value5(String value) {
        setLogType(value);
        return this;
    }

    @Override
    public CoreMemberHistoryRecord value6(String value) {
        setLogData(value);
        return this;
    }

    @Override
    public CoreMemberHistoryRecord value7(BigDecimal value) {
        setLogDate(value);
        return this;
    }

    @Override
    public CoreMemberHistoryRecord value8(String value) {
        setLogIpAddress(value);
        return this;
    }

    @Override
    public CoreMemberHistoryRecord values(ULong value1, String value2, ULong value3, ULong value4, String value5, String value6, BigDecimal value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreMemberHistoryRecord
     */
    public CoreMemberHistoryRecord() {
        super(CoreMemberHistory.CORE_MEMBER_HISTORY);
    }

    /**
     * Create a detached, initialised CoreMemberHistoryRecord
     */
    public CoreMemberHistoryRecord(ULong logId, String logApp, ULong logMember, ULong logBy, String logType, String logData, BigDecimal logDate, String logIpAddress) {
        super(CoreMemberHistory.CORE_MEMBER_HISTORY);

        setLogId(logId);
        setLogApp(logApp);
        setLogMember(logMember);
        setLogBy(logBy);
        setLogType(logType);
        setLogData(logData);
        setLogDate(logDate);
        setLogIpAddress(logIpAddress);
    }
}
