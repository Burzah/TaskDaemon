/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreTasksLogRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreTasksLog extends TableImpl<CoreTasksLogRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_tasks_log</code>
     */
    public static final CoreTasksLog CORE_TASKS_LOG = new CoreTasksLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreTasksLogRecord> getRecordType() {
        return CoreTasksLogRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_tasks_log.task</code>. Task ID
     * number
     */
    public final TableField<CoreTasksLogRecord, ULong> TASK = createField(DSL.name("task"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.BIGINTUNSIGNED)), this, "Task ID number");

    /**
     * The column <code>paradise_forums.core_tasks_log.error</code>.
     */
    public final TableField<CoreTasksLogRecord, Boolean> ERROR = createField(DSL.name("error"), SQLDataType.BIT.nullable(false).defaultValue(DSL.inline("b'0'", SQLDataType.BIT)), this, "");

    /**
     * The column <code>paradise_forums.core_tasks_log.log</code>.
     */
    public final TableField<CoreTasksLogRecord, String> LOG = createField(DSL.name("log"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_tasks_log.time</code>.
     */
    public final TableField<CoreTasksLogRecord, UInteger> TIME = createField(DSL.name("time"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    private CoreTasksLog(Name alias, Table<CoreTasksLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreTasksLog(Name alias, Table<CoreTasksLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_tasks_log</code> table
     * reference
     */
    public CoreTasksLog(String alias) {
        this(DSL.name(alias), CORE_TASKS_LOG);
    }

    /**
     * Create an aliased <code>paradise_forums.core_tasks_log</code> table
     * reference
     */
    public CoreTasksLog(Name alias) {
        this(alias, CORE_TASKS_LOG);
    }

    /**
     * Create a <code>paradise_forums.core_tasks_log</code> table reference
     */
    public CoreTasksLog() {
        this(DSL.name("core_tasks_log"), null);
    }

    public <O extends Record> CoreTasksLog(Table<O> child, ForeignKey<O, CoreTasksLogRecord> key) {
        super(child, key, CORE_TASKS_LOG);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_TASKS_LOG_LOOKUP, Indexes.CORE_TASKS_LOG_TIME);
    }

    @Override
    public CoreTasksLog as(String alias) {
        return new CoreTasksLog(DSL.name(alias), this);
    }

    @Override
    public CoreTasksLog as(Name alias) {
        return new CoreTasksLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreTasksLog rename(String name) {
        return new CoreTasksLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreTasksLog rename(Name name) {
        return new CoreTasksLog(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<ULong, Boolean, String, UInteger> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
