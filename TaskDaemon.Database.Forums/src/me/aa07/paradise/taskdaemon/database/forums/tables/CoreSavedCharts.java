/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.enums.CoreSavedChartsChartTimescale;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSavedChartsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreSavedCharts extends TableImpl<CoreSavedChartsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_saved_charts</code>
     */
    public static final CoreSavedCharts CORE_SAVED_CHARTS = new CoreSavedCharts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreSavedChartsRecord> getRecordType() {
        return CoreSavedChartsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_saved_charts.chart_id</code>. ID
     * Number
     */
    public final TableField<CoreSavedChartsRecord, ULong> CHART_ID = createField(DSL.name("chart_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "ID Number");

    /**
     * The column <code>paradise_forums.core_saved_charts.chart_member</code>.
     */
    public final TableField<CoreSavedChartsRecord, ULong> CHART_MEMBER = createField(DSL.name("chart_member"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_saved_charts.chart_controller</code>.
     */
    public final TableField<CoreSavedChartsRecord, String> CHART_CONTROLLER = createField(DSL.name("chart_controller"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column
     * <code>paradise_forums.core_saved_charts.chart_configuration</code>.
     */
    public final TableField<CoreSavedChartsRecord, String> CHART_CONFIGURATION = createField(DSL.name("chart_configuration"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_saved_charts.chart_title</code>.
     */
    public final TableField<CoreSavedChartsRecord, String> CHART_TITLE = createField(DSL.name("chart_title"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_saved_charts.chart_favorite</code>.
     */
    public final TableField<CoreSavedChartsRecord, Byte> CHART_FAVORITE = createField(DSL.name("chart_favorite"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_saved_charts.chart_timescale</code>.
     */
    public final TableField<CoreSavedChartsRecord, CoreSavedChartsChartTimescale> CHART_TIMESCALE = createField(DSL.name("chart_timescale"), SQLDataType.VARCHAR(7).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)).asEnumDataType(me.aa07.paradise.taskdaemon.database.forums.enums.CoreSavedChartsChartTimescale.class), this, "");

    private CoreSavedCharts(Name alias, Table<CoreSavedChartsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreSavedCharts(Name alias, Table<CoreSavedChartsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_saved_charts</code> table
     * reference
     */
    public CoreSavedCharts(String alias) {
        this(DSL.name(alias), CORE_SAVED_CHARTS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_saved_charts</code> table
     * reference
     */
    public CoreSavedCharts(Name alias) {
        this(alias, CORE_SAVED_CHARTS);
    }

    /**
     * Create a <code>paradise_forums.core_saved_charts</code> table reference
     */
    public CoreSavedCharts() {
        this(DSL.name("core_saved_charts"), null);
    }

    public <O extends Record> CoreSavedCharts(Table<O> child, ForeignKey<O, CoreSavedChartsRecord> key) {
        super(child, key, CORE_SAVED_CHARTS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_SAVED_CHARTS_CHART_MEMBER);
    }

    @Override
    public Identity<CoreSavedChartsRecord, ULong> getIdentity() {
        return (Identity<CoreSavedChartsRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreSavedChartsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_SAVED_CHARTS_PRIMARY;
    }

    @Override
    public CoreSavedCharts as(String alias) {
        return new CoreSavedCharts(DSL.name(alias), this);
    }

    @Override
    public CoreSavedCharts as(Name alias) {
        return new CoreSavedCharts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreSavedCharts rename(String name) {
        return new CoreSavedCharts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreSavedCharts rename(Name name) {
        return new CoreSavedCharts(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<ULong, ULong, String, String, String, Byte, CoreSavedChartsChartTimescale> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
