/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreQueue;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreQueueRecord extends UpdatableRecordImpl<CoreQueueRecord> implements Record7<ULong, String, Long, Integer, String, String, UByte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_queue.id</code>. ID Number
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_queue.id</code>. ID Number
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_queue.data</code>.
     */
    public void setData(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_queue.data</code>.
     */
    public String getData() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_queue.offset</code>.
     */
    public void setOffset(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_queue.offset</code>.
     */
    public Long getOffset() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_queue.date</code>.
     */
    public void setDate(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_queue.date</code>.
     */
    public Integer getDate() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_queue.app</code>.
     */
    public void setApp(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_queue.app</code>.
     */
    public String getApp() {
        return (String) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_queue.key</code>.
     */
    public void setKey(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_queue.key</code>.
     */
    public String getKey() {
        return (String) get(5);
    }

    /**
     * Setter for <code>paradise_forums.core_queue.priority</code>. Order to
     * run. Values 1 to 5 are allowed, 1 being highest priority.
     */
    public void setPriority(UByte value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.core_queue.priority</code>. Order to
     * run. Values 1 to 5 are allowed, 1 being highest priority.
     */
    public UByte getPriority() {
        return (UByte) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<ULong, String, Long, Integer, String, String, UByte> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<ULong, String, Long, Integer, String, String, UByte> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CoreQueue.CORE_QUEUE.ID;
    }

    @Override
    public Field<String> field2() {
        return CoreQueue.CORE_QUEUE.DATA;
    }

    @Override
    public Field<Long> field3() {
        return CoreQueue.CORE_QUEUE.OFFSET;
    }

    @Override
    public Field<Integer> field4() {
        return CoreQueue.CORE_QUEUE.DATE;
    }

    @Override
    public Field<String> field5() {
        return CoreQueue.CORE_QUEUE.APP;
    }

    @Override
    public Field<String> field6() {
        return CoreQueue.CORE_QUEUE.KEY;
    }

    @Override
    public Field<UByte> field7() {
        return CoreQueue.CORE_QUEUE.PRIORITY;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getData();
    }

    @Override
    public Long component3() {
        return getOffset();
    }

    @Override
    public Integer component4() {
        return getDate();
    }

    @Override
    public String component5() {
        return getApp();
    }

    @Override
    public String component6() {
        return getKey();
    }

    @Override
    public UByte component7() {
        return getPriority();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getData();
    }

    @Override
    public Long value3() {
        return getOffset();
    }

    @Override
    public Integer value4() {
        return getDate();
    }

    @Override
    public String value5() {
        return getApp();
    }

    @Override
    public String value6() {
        return getKey();
    }

    @Override
    public UByte value7() {
        return getPriority();
    }

    @Override
    public CoreQueueRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public CoreQueueRecord value2(String value) {
        setData(value);
        return this;
    }

    @Override
    public CoreQueueRecord value3(Long value) {
        setOffset(value);
        return this;
    }

    @Override
    public CoreQueueRecord value4(Integer value) {
        setDate(value);
        return this;
    }

    @Override
    public CoreQueueRecord value5(String value) {
        setApp(value);
        return this;
    }

    @Override
    public CoreQueueRecord value6(String value) {
        setKey(value);
        return this;
    }

    @Override
    public CoreQueueRecord value7(UByte value) {
        setPriority(value);
        return this;
    }

    @Override
    public CoreQueueRecord values(ULong value1, String value2, Long value3, Integer value4, String value5, String value6, UByte value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreQueueRecord
     */
    public CoreQueueRecord() {
        super(CoreQueue.CORE_QUEUE);
    }

    /**
     * Create a detached, initialised CoreQueueRecord
     */
    public CoreQueueRecord(ULong id, String data, Long offset, Integer date, String app, String key, UByte priority) {
        super(CoreQueue.CORE_QUEUE);

        setId(id);
        setData(data);
        setOffset(offset);
        setDate(date);
        setApp(app);
        setKey(key);
        setPriority(priority);
    }
}
