/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreRssImportedRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreRssImported extends TableImpl<CoreRssImportedRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_rss_imported</code>
     */
    public static final CoreRssImported CORE_RSS_IMPORTED = new CoreRssImported();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreRssImportedRecord> getRecordType() {
        return CoreRssImportedRecord.class;
    }

    /**
     * The column
     * <code>paradise_forums.core_rss_imported.rss_imported_guid</code>.
     */
    public final TableField<CoreRssImportedRecord, String> RSS_IMPORTED_GUID = createField(DSL.name("rss_imported_guid"), SQLDataType.CHAR(32).nullable(false).defaultValue(DSL.inline("'0'", SQLDataType.CHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_rss_imported.rss_imported_content_id</code>.
     */
    public final TableField<CoreRssImportedRecord, Integer> RSS_IMPORTED_CONTENT_ID = createField(DSL.name("rss_imported_content_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_rss_imported.rss_imported_import_id</code>.
     */
    public final TableField<CoreRssImportedRecord, Integer> RSS_IMPORTED_IMPORT_ID = createField(DSL.name("rss_imported_import_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    private CoreRssImported(Name alias, Table<CoreRssImportedRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreRssImported(Name alias, Table<CoreRssImportedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_rss_imported</code> table
     * reference
     */
    public CoreRssImported(String alias) {
        this(DSL.name(alias), CORE_RSS_IMPORTED);
    }

    /**
     * Create an aliased <code>paradise_forums.core_rss_imported</code> table
     * reference
     */
    public CoreRssImported(Name alias) {
        this(alias, CORE_RSS_IMPORTED);
    }

    /**
     * Create a <code>paradise_forums.core_rss_imported</code> table reference
     */
    public CoreRssImported() {
        this(DSL.name("core_rss_imported"), null);
    }

    public <O extends Record> CoreRssImported(Table<O> child, ForeignKey<O, CoreRssImportedRecord> key) {
        super(child, key, CORE_RSS_IMPORTED);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_RSS_IMPORTED_RSS_IMPORTED_IMPORT_ID);
    }

    @Override
    public UniqueKey<CoreRssImportedRecord> getPrimaryKey() {
        return Keys.KEY_CORE_RSS_IMPORTED_PRIMARY;
    }

    @Override
    public CoreRssImported as(String alias) {
        return new CoreRssImported(DSL.name(alias), this);
    }

    @Override
    public CoreRssImported as(Name alias) {
        return new CoreRssImported(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreRssImported rename(String name) {
        return new CoreRssImported(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreRssImported rename(Name name) {
        return new CoreRssImported(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
