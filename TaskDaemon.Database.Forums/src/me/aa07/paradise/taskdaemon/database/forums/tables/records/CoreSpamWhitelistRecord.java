/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSpamWhitelist;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreSpamWhitelistRecord extends UpdatableRecordImpl<CoreSpamWhitelistRecord> implements Record5<ULong, String, String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_spam_whitelist.whitelist_id</code>.
     * ID Number
     */
    public void setWhitelistId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_spam_whitelist.whitelist_id</code>.
     * ID Number
     */
    public ULong getWhitelistId() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_spam_whitelist.whitelist_type</code>.
     */
    public void setWhitelistType(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_spam_whitelist.whitelist_type</code>.
     */
    public String getWhitelistType() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_spam_whitelist.whitelist_content</code>.
     */
    public void setWhitelistContent(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_spam_whitelist.whitelist_content</code>.
     */
    public String getWhitelistContent() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_spam_whitelist.whitelist_date</code>.
     */
    public void setWhitelistDate(Integer value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_spam_whitelist.whitelist_date</code>.
     */
    public Integer getWhitelistDate() {
        return (Integer) get(3);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_spam_whitelist.whitelist_reason</code>.
     */
    public void setWhitelistReason(String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_spam_whitelist.whitelist_reason</code>.
     */
    public String getWhitelistReason() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<ULong, String, String, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<ULong, String, String, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CoreSpamWhitelist.CORE_SPAM_WHITELIST.WHITELIST_ID;
    }

    @Override
    public Field<String> field2() {
        return CoreSpamWhitelist.CORE_SPAM_WHITELIST.WHITELIST_TYPE;
    }

    @Override
    public Field<String> field3() {
        return CoreSpamWhitelist.CORE_SPAM_WHITELIST.WHITELIST_CONTENT;
    }

    @Override
    public Field<Integer> field4() {
        return CoreSpamWhitelist.CORE_SPAM_WHITELIST.WHITELIST_DATE;
    }

    @Override
    public Field<String> field5() {
        return CoreSpamWhitelist.CORE_SPAM_WHITELIST.WHITELIST_REASON;
    }

    @Override
    public ULong component1() {
        return getWhitelistId();
    }

    @Override
    public String component2() {
        return getWhitelistType();
    }

    @Override
    public String component3() {
        return getWhitelistContent();
    }

    @Override
    public Integer component4() {
        return getWhitelistDate();
    }

    @Override
    public String component5() {
        return getWhitelistReason();
    }

    @Override
    public ULong value1() {
        return getWhitelistId();
    }

    @Override
    public String value2() {
        return getWhitelistType();
    }

    @Override
    public String value3() {
        return getWhitelistContent();
    }

    @Override
    public Integer value4() {
        return getWhitelistDate();
    }

    @Override
    public String value5() {
        return getWhitelistReason();
    }

    @Override
    public CoreSpamWhitelistRecord value1(ULong value) {
        setWhitelistId(value);
        return this;
    }

    @Override
    public CoreSpamWhitelistRecord value2(String value) {
        setWhitelistType(value);
        return this;
    }

    @Override
    public CoreSpamWhitelistRecord value3(String value) {
        setWhitelistContent(value);
        return this;
    }

    @Override
    public CoreSpamWhitelistRecord value4(Integer value) {
        setWhitelistDate(value);
        return this;
    }

    @Override
    public CoreSpamWhitelistRecord value5(String value) {
        setWhitelistReason(value);
        return this;
    }

    @Override
    public CoreSpamWhitelistRecord values(ULong value1, String value2, String value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreSpamWhitelistRecord
     */
    public CoreSpamWhitelistRecord() {
        super(CoreSpamWhitelist.CORE_SPAM_WHITELIST);
    }

    /**
     * Create a detached, initialised CoreSpamWhitelistRecord
     */
    public CoreSpamWhitelistRecord(ULong whitelistId, String whitelistType, String whitelistContent, Integer whitelistDate, String whitelistReason) {
        super(CoreSpamWhitelist.CORE_SPAM_WHITELIST);

        setWhitelistId(whitelistId);
        setWhitelistType(whitelistType);
        setWhitelistContent(whitelistContent);
        setWhitelistDate(whitelistDate);
        setWhitelistReason(whitelistReason);
    }
}
