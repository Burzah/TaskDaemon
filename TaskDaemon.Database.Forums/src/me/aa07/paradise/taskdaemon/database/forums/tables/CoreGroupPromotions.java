/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreGroupPromotionsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreGroupPromotions extends TableImpl<CoreGroupPromotionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_group_promotions</code>
     */
    public static final CoreGroupPromotions CORE_GROUP_PROMOTIONS = new CoreGroupPromotions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreGroupPromotionsRecord> getRecordType() {
        return CoreGroupPromotionsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_group_promotions.promote_id</code>.
     * ID Number
     */
    public final TableField<CoreGroupPromotionsRecord, ULong> PROMOTE_ID = createField(DSL.name("promote_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "ID Number");

    /**
     * The column
     * <code>paradise_forums.core_group_promotions.promote_position</code>.
     * Position of promotion rule
     */
    public final TableField<CoreGroupPromotionsRecord, ULong> PROMOTE_POSITION = createField(DSL.name("promote_position"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "Position of promotion rule");

    /**
     * The column
     * <code>paradise_forums.core_group_promotions.promote_enabled</code>.
     * Whether the rule is enabled or not
     */
    public final TableField<CoreGroupPromotionsRecord, Byte> PROMOTE_ENABLED = createField(DSL.name("promote_enabled"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "Whether the rule is enabled or not");

    /**
     * The column
     * <code>paradise_forums.core_group_promotions.promote_filters</code>.
     * Json-encoded array of filters that a member must meet in order for this
     * rule to apply
     */
    public final TableField<CoreGroupPromotionsRecord, String> PROMOTE_FILTERS = createField(DSL.name("promote_filters"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "Json-encoded array of filters that a member must meet in order for this rule to apply");

    /**
     * The column
     * <code>paradise_forums.core_group_promotions.promote_actions</code>.
     * Json-encoded array of actions taken when this rule applies
     */
    public final TableField<CoreGroupPromotionsRecord, String> PROMOTE_ACTIONS = createField(DSL.name("promote_actions"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "Json-encoded array of actions taken when this rule applies");

    private CoreGroupPromotions(Name alias, Table<CoreGroupPromotionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreGroupPromotions(Name alias, Table<CoreGroupPromotionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_group_promotions</code>
     * table reference
     */
    public CoreGroupPromotions(String alias) {
        this(DSL.name(alias), CORE_GROUP_PROMOTIONS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_group_promotions</code>
     * table reference
     */
    public CoreGroupPromotions(Name alias) {
        this(alias, CORE_GROUP_PROMOTIONS);
    }

    /**
     * Create a <code>paradise_forums.core_group_promotions</code> table
     * reference
     */
    public CoreGroupPromotions() {
        this(DSL.name("core_group_promotions"), null);
    }

    public <O extends Record> CoreGroupPromotions(Table<O> child, ForeignKey<O, CoreGroupPromotionsRecord> key) {
        super(child, key, CORE_GROUP_PROMOTIONS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_GROUP_PROMOTIONS_PROMOTIONS);
    }

    @Override
    public Identity<CoreGroupPromotionsRecord, ULong> getIdentity() {
        return (Identity<CoreGroupPromotionsRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreGroupPromotionsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_GROUP_PROMOTIONS_PRIMARY;
    }

    @Override
    public CoreGroupPromotions as(String alias) {
        return new CoreGroupPromotions(DSL.name(alias), this);
    }

    @Override
    public CoreGroupPromotions as(Name alias) {
        return new CoreGroupPromotions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreGroupPromotions rename(String name) {
        return new CoreGroupPromotions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreGroupPromotions rename(Name name) {
        return new CoreGroupPromotions(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<ULong, ULong, Byte, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
