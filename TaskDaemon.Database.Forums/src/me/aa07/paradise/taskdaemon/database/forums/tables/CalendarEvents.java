/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CalendarEventsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalendarEvents extends TableImpl<CalendarEventsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.calendar_events</code>
     */
    public static final CalendarEvents CALENDAR_EVENTS = new CalendarEvents();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalendarEventsRecord> getRecordType() {
        return CalendarEventsRecord.class;
    }

    /**
     * The column <code>paradise_forums.calendar_events.event_id</code>.
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_ID = createField(DSL.name("event_id"), SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_calendar_id</code>.
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_CALENDAR_ID = createField(DSL.name("event_calendar_id"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_member_id</code>.
     */
    public final TableField<CalendarEventsRecord, ULong> EVENT_MEMBER_ID = createField(DSL.name("event_member_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_content</code>.
     */
    public final TableField<CalendarEventsRecord, String> EVENT_CONTENT = createField(DSL.name("event_content"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_title</code>.
     */
    public final TableField<CalendarEventsRecord, String> EVENT_TITLE = createField(DSL.name("event_title"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_comments</code>.
     */
    public final TableField<CalendarEventsRecord, Integer> EVENT_COMMENTS = createField(DSL.name("event_comments"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_rsvp</code>.
     */
    public final TableField<CalendarEventsRecord, Byte> EVENT_RSVP = createField(DSL.name("event_rsvp"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_approved</code>.
     */
    public final TableField<CalendarEventsRecord, Byte> EVENT_APPROVED = createField(DSL.name("event_approved"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_saved</code>.
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_SAVED = createField(DSL.name("event_saved"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_lastupdated</code>.
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_LASTUPDATED = createField(DSL.name("event_lastupdated"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_recurring</code>.
     * Holds an RRULE value to indicate how the event recurs
     */
    public final TableField<CalendarEventsRecord, String> EVENT_RECURRING = createField(DSL.name("event_recurring"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "Holds an RRULE value to indicate how the event recurs");

    /**
     * The column <code>paradise_forums.calendar_events.event_start_date</code>.
     */
    public final TableField<CalendarEventsRecord, LocalDateTime> EVENT_START_DATE = createField(DSL.name("event_start_date"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_end_date</code>.
     */
    public final TableField<CalendarEventsRecord, LocalDateTime> EVENT_END_DATE = createField(DSL.name("event_end_date"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.inline("NULL", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_title_seo</code>.
     */
    public final TableField<CalendarEventsRecord, String> EVENT_TITLE_SEO = createField(DSL.name("event_title_seo"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_rating</code>.
     */
    public final TableField<CalendarEventsRecord, UShort> EVENT_RATING = createField(DSL.name("event_rating"), SQLDataType.SMALLINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.SMALLINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_post_key</code>.
     */
    public final TableField<CalendarEventsRecord, String> EVENT_POST_KEY = createField(DSL.name("event_post_key"), SQLDataType.VARCHAR(32).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_sequence</code>.
     */
    public final TableField<CalendarEventsRecord, Integer> EVENT_SEQUENCE = createField(DSL.name("event_sequence"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_all_day</code>.
     */
    public final TableField<CalendarEventsRecord, Byte> EVENT_ALL_DAY = createField(DSL.name("event_all_day"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_reviews</code>.
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_REVIEWS = createField(DSL.name("event_reviews"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_ip_address</code>.
     */
    public final TableField<CalendarEventsRecord, String> EVENT_IP_ADDRESS = createField(DSL.name("event_ip_address"), SQLDataType.VARCHAR(46).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_locked</code>.
     * Whether the event is locked (for new comments/reviews) or not
     */
    public final TableField<CalendarEventsRecord, UByte> EVENT_LOCKED = createField(DSL.name("event_locked"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "Whether the event is locked (for new comments/reviews) or not");

    /**
     * The column <code>paradise_forums.calendar_events.event_featured</code>.
     * Whether the event is featured or not
     */
    public final TableField<CalendarEventsRecord, UByte> EVENT_FEATURED = createField(DSL.name("event_featured"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "Whether the event is featured or not");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_last_comment</code>.
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_LAST_COMMENT = createField(DSL.name("event_last_comment"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_last_review</code>.
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_LAST_REVIEW = createField(DSL.name("event_last_review"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_approved_by</code>. Member ID
     * who approved the event
     */
    public final TableField<CalendarEventsRecord, ULong> EVENT_APPROVED_BY = createField(DSL.name("event_approved_by"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.BIGINTUNSIGNED)), this, "Member ID who approved the event");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_approved_on</code>. Date the
     * event was approved on
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_APPROVED_ON = createField(DSL.name("event_approved_on"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.INTEGERUNSIGNED)), this, "Date the event was approved on");

    /**
     * The column <code>paradise_forums.calendar_events.event_location</code>.
     * Stores location data for the event, used to create a map
     */
    public final TableField<CalendarEventsRecord, String> EVENT_LOCATION = createField(DSL.name("event_location"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "Stores location data for the event, used to create a map");

    /**
     * The column <code>paradise_forums.calendar_events.event_rsvp_limit</code>.
     * Maximum number of attendees allowed for the event
     */
    public final TableField<CalendarEventsRecord, Integer> EVENT_RSVP_LIMIT = createField(DSL.name("event_rsvp_limit"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "Maximum number of attendees allowed for the event");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_cover_photo</code>. Header
     * background image for the event
     */
    public final TableField<CalendarEventsRecord, String> EVENT_COVER_PHOTO = createField(DSL.name("event_cover_photo"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "Header background image for the event");

    /**
     * The column <code>paradise_forums.calendar_events.event_album</code>.
     * Holds album ID associated with this event
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_ALBUM = createField(DSL.name("event_album"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.INTEGERUNSIGNED)), this, "Holds album ID associated with this event");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_cover_offset</code>.
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_COVER_OFFSET = createField(DSL.name("event_cover_offset"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_queued_comments</code>.
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_QUEUED_COMMENTS = createField(DSL.name("event_queued_comments"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_hidden_comments</code>.
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_HIDDEN_COMMENTS = createField(DSL.name("event_hidden_comments"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_unapproved_reviews</code>.
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_UNAPPROVED_REVIEWS = createField(DSL.name("event_unapproved_reviews"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_hidden_reviews</code>.
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_HIDDEN_REVIEWS = createField(DSL.name("event_hidden_reviews"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_venue</code>.
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_VENUE = createField(DSL.name("event_venue"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_meta_data</code>.
     */
    public final TableField<CalendarEventsRecord, UByte> EVENT_META_DATA = createField(DSL.name("event_meta_data"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_recurring_end_date</code>.
     * End date if this is a recurring event which ends
     */
    public final TableField<CalendarEventsRecord, LocalDateTime> EVENT_RECURRING_END_DATE = createField(DSL.name("event_recurring_end_date"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.inline("NULL", SQLDataType.LOCALDATETIME)), this, "End date if this is a recurring event which ends");

    /**
     * The column <code>paradise_forums.calendar_events.event_timezone</code>.
     */
    public final TableField<CalendarEventsRecord, String> EVENT_TIMEZONE = createField(DSL.name("event_timezone"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_edit_time</code>.
     */
    public final TableField<CalendarEventsRecord, Integer> EVENT_EDIT_TIME = createField(DSL.name("event_edit_time"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_edit_member_name</code>.
     */
    public final TableField<CalendarEventsRecord, String> EVENT_EDIT_MEMBER_NAME = createField(DSL.name("event_edit_member_name"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_append_edit</code>.
     */
    public final TableField<CalendarEventsRecord, Byte> EVENT_APPEND_EDIT = createField(DSL.name("event_append_edit"), SQLDataType.TINYINT.defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_edit_reason</code>.
     */
    public final TableField<CalendarEventsRecord, String> EVENT_EDIT_REASON = createField(DSL.name("event_edit_reason"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_author_name</code>.
     */
    public final TableField<CalendarEventsRecord, String> EVENT_AUTHOR_NAME = createField(DSL.name("event_author_name"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_is_anon</code>.
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_IS_ANON = createField(DSL.name("event_is_anon"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_online</code>.
     */
    public final TableField<CalendarEventsRecord, UByte> EVENT_ONLINE = createField(DSL.name("event_online"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_url</code>.
     */
    public final TableField<CalendarEventsRecord, String> EVENT_URL = createField(DSL.name("event_url"), SQLDataType.VARCHAR(250).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_online_type</code>.
     */
    public final TableField<CalendarEventsRecord, String> EVENT_ONLINE_TYPE = createField(DSL.name("event_online_type"), SQLDataType.VARCHAR(250).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_external_url</code>.
     */
    public final TableField<CalendarEventsRecord, String> EVENT_EXTERNAL_URL = createField(DSL.name("event_external_url"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_latitude</code>.
     */
    public final TableField<CalendarEventsRecord, BigDecimal> EVENT_LATITUDE = createField(DSL.name("event_latitude"), SQLDataType.DECIMAL(10, 8).defaultValue(DSL.inline("NULL", SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_longitude</code>.
     */
    public final TableField<CalendarEventsRecord, BigDecimal> EVENT_LONGITUDE = createField(DSL.name("event_longitude"), SQLDataType.DECIMAL(11, 8).defaultValue(DSL.inline("NULL", SQLDataType.DECIMAL)), this, "");

    /**
     * The column
     * <code>paradise_forums.calendar_events.event_livetopic_id</code>.
     */
    public final TableField<CalendarEventsRecord, UInteger> EVENT_LIVETOPIC_ID = createField(DSL.name("event_livetopic_id"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.calendar_events.event_views</code>.
     */
    public final TableField<CalendarEventsRecord, Integer> EVENT_VIEWS = createField(DSL.name("event_views"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    private CalendarEvents(Name alias, Table<CalendarEventsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CalendarEvents(Name alias, Table<CalendarEventsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.calendar_events</code> table
     * reference
     */
    public CalendarEvents(String alias) {
        this(DSL.name(alias), CALENDAR_EVENTS);
    }

    /**
     * Create an aliased <code>paradise_forums.calendar_events</code> table
     * reference
     */
    public CalendarEvents(Name alias) {
        this(alias, CALENDAR_EVENTS);
    }

    /**
     * Create a <code>paradise_forums.calendar_events</code> table reference
     */
    public CalendarEvents() {
        this(DSL.name("calendar_events"), null);
    }

    public <O extends Record> CalendarEvents(Table<O> child, ForeignKey<O, CalendarEventsRecord> key) {
        super(child, key, CALENDAR_EVENTS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CALENDAR_EVENTS_APPROVED, Indexes.CALENDAR_EVENTS_EVENT_ALBUM, Indexes.CALENDAR_EVENTS_EVENT_FEATURED, Indexes.CALENDAR_EVENTS_EVENT_MEMBER_ID, Indexes.CALENDAR_EVENTS_EVENT_VENUE, Indexes.CALENDAR_EVENTS_IP_LOOKUP, Indexes.CALENDAR_EVENTS_RECURRING_EVENTS);
    }

    @Override
    public Identity<CalendarEventsRecord, UInteger> getIdentity() {
        return (Identity<CalendarEventsRecord, UInteger>) super.getIdentity();
    }

    @Override
    public UniqueKey<CalendarEventsRecord> getPrimaryKey() {
        return Keys.KEY_CALENDAR_EVENTS_PRIMARY;
    }

    @Override
    public CalendarEvents as(String alias) {
        return new CalendarEvents(DSL.name(alias), this);
    }

    @Override
    public CalendarEvents as(Name alias) {
        return new CalendarEvents(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CalendarEvents rename(String name) {
        return new CalendarEvents(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CalendarEvents rename(Name name) {
        return new CalendarEvents(name, null);
    }
}
