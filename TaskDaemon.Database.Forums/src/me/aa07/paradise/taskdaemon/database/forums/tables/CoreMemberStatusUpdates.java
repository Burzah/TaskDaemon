/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMemberStatusUpdatesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreMemberStatusUpdates extends TableImpl<CoreMemberStatusUpdatesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_member_status_updates</code>
     */
    public static final CoreMemberStatusUpdates CORE_MEMBER_STATUS_UPDATES = new CoreMemberStatusUpdates();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreMemberStatusUpdatesRecord> getRecordType() {
        return CoreMemberStatusUpdatesRecord.class;
    }

    /**
     * The column
     * <code>paradise_forums.core_member_status_updates.status_id</code>.
     */
    public final TableField<CoreMemberStatusUpdatesRecord, Integer> STATUS_ID = createField(DSL.name("status_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_status_updates.status_member_id</code>.
     */
    public final TableField<CoreMemberStatusUpdatesRecord, ULong> STATUS_MEMBER_ID = createField(DSL.name("status_member_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_status_updates.status_date</code>.
     */
    public final TableField<CoreMemberStatusUpdatesRecord, UInteger> STATUS_DATE = createField(DSL.name("status_date"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_status_updates.status_content</code>.
     */
    public final TableField<CoreMemberStatusUpdatesRecord, String> STATUS_CONTENT = createField(DSL.name("status_content"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_status_updates.status_replies</code>.
     */
    public final TableField<CoreMemberStatusUpdatesRecord, UInteger> STATUS_REPLIES = createField(DSL.name("status_replies"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_status_updates.status_last_ids</code>.
     */
    public final TableField<CoreMemberStatusUpdatesRecord, String> STATUS_LAST_IDS = createField(DSL.name("status_last_ids"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_status_updates.status_is_latest</code>.
     */
    public final TableField<CoreMemberStatusUpdatesRecord, Integer> STATUS_IS_LATEST = createField(DSL.name("status_is_latest"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_status_updates.status_is_locked</code>.
     */
    public final TableField<CoreMemberStatusUpdatesRecord, Integer> STATUS_IS_LOCKED = createField(DSL.name("status_is_locked"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_status_updates.status_hash</code>.
     */
    public final TableField<CoreMemberStatusUpdatesRecord, String> STATUS_HASH = createField(DSL.name("status_hash"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_status_updates.status_imported</code>.
     */
    public final TableField<CoreMemberStatusUpdatesRecord, Integer> STATUS_IMPORTED = createField(DSL.name("status_imported"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_status_updates.status_author_id</code>.
     */
    public final TableField<CoreMemberStatusUpdatesRecord, Integer> STATUS_AUTHOR_ID = createField(DSL.name("status_author_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_status_updates.status_author_ip</code>.
     */
    public final TableField<CoreMemberStatusUpdatesRecord, String> STATUS_AUTHOR_IP = createField(DSL.name("status_author_ip"), SQLDataType.VARCHAR(46).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_member_status_updates.status_approved</code>.
     */
    public final TableField<CoreMemberStatusUpdatesRecord, Integer> STATUS_APPROVED = createField(DSL.name("status_approved"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("1", SQLDataType.INTEGER)), this, "");

    private CoreMemberStatusUpdates(Name alias, Table<CoreMemberStatusUpdatesRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreMemberStatusUpdates(Name alias, Table<CoreMemberStatusUpdatesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_member_status_updates</code>
     * table reference
     */
    public CoreMemberStatusUpdates(String alias) {
        this(DSL.name(alias), CORE_MEMBER_STATUS_UPDATES);
    }

    /**
     * Create an aliased <code>paradise_forums.core_member_status_updates</code>
     * table reference
     */
    public CoreMemberStatusUpdates(Name alias) {
        this(alias, CORE_MEMBER_STATUS_UPDATES);
    }

    /**
     * Create a <code>paradise_forums.core_member_status_updates</code> table
     * reference
     */
    public CoreMemberStatusUpdates() {
        this(DSL.name("core_member_status_updates"), null);
    }

    public <O extends Record> CoreMemberStatusUpdates(Table<O> child, ForeignKey<O, CoreMemberStatusUpdatesRecord> key) {
        super(child, key, CORE_MEMBER_STATUS_UPDATES);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_MEMBER_STATUS_UPDATES_IP_LOOKUP, Indexes.CORE_MEMBER_STATUS_UPDATES_S_HASH, Indexes.CORE_MEMBER_STATUS_UPDATES_STATUS_AUTHOR_LOOKUP, Indexes.CORE_MEMBER_STATUS_UPDATES_STATUS_DATE, Indexes.CORE_MEMBER_STATUS_UPDATES_STATUS_IS_LATEST, Indexes.CORE_MEMBER_STATUS_UPDATES_STATUS_MEMBER_ID);
    }

    @Override
    public Identity<CoreMemberStatusUpdatesRecord, Integer> getIdentity() {
        return (Identity<CoreMemberStatusUpdatesRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreMemberStatusUpdatesRecord> getPrimaryKey() {
        return Keys.KEY_CORE_MEMBER_STATUS_UPDATES_PRIMARY;
    }

    @Override
    public CoreMemberStatusUpdates as(String alias) {
        return new CoreMemberStatusUpdates(DSL.name(alias), this);
    }

    @Override
    public CoreMemberStatusUpdates as(Name alias) {
        return new CoreMemberStatusUpdates(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMemberStatusUpdates rename(String name) {
        return new CoreMemberStatusUpdates(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMemberStatusUpdates rename(Name name) {
        return new CoreMemberStatusUpdates(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, ULong, UInteger, String, UInteger, String, Integer, Integer, String, Integer, Integer, String, Integer> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
