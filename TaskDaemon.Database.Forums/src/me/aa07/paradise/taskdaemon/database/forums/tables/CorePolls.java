/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CorePollsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CorePolls extends TableImpl<CorePollsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_polls</code>
     */
    public static final CorePolls CORE_POLLS = new CorePolls();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CorePollsRecord> getRecordType() {
        return CorePollsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_polls.pid</code>.
     */
    public final TableField<CorePollsRecord, Integer> PID = createField(DSL.name("pid"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_polls.start_date</code>.
     */
    public final TableField<CorePollsRecord, Integer> START_DATE = createField(DSL.name("start_date"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_polls.choices</code>.
     */
    public final TableField<CorePollsRecord, String> CHOICES = createField(DSL.name("choices"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_polls.starter_id</code>.
     */
    public final TableField<CorePollsRecord, ULong> STARTER_ID = createField(DSL.name("starter_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_polls.votes</code>.
     */
    public final TableField<CorePollsRecord, Long> VOTES = createField(DSL.name("votes"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>paradise_forums.core_polls.poll_question</code>.
     */
    public final TableField<CorePollsRecord, String> POLL_QUESTION = createField(DSL.name("poll_question"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_polls.poll_only</code>.
     */
    public final TableField<CorePollsRecord, Byte> POLL_ONLY = createField(DSL.name("poll_only"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.core_polls.poll_view_voters</code>.
     */
    public final TableField<CorePollsRecord, Integer> POLL_VIEW_VOTERS = createField(DSL.name("poll_view_voters"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_polls.poll_closed</code>.
     */
    public final TableField<CorePollsRecord, UInteger> POLL_CLOSED = createField(DSL.name("poll_closed"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_polls.poll_close_date</code>.
     */
    public final TableField<CorePollsRecord, Integer> POLL_CLOSE_DATE = createField(DSL.name("poll_close_date"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("-1", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_polls.poll_item_class</code>.
     */
    public final TableField<CorePollsRecord, String> POLL_ITEM_CLASS = createField(DSL.name("poll_item_class"), SQLDataType.VARCHAR(100).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    private CorePolls(Name alias, Table<CorePollsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CorePolls(Name alias, Table<CorePollsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_polls</code> table reference
     */
    public CorePolls(String alias) {
        this(DSL.name(alias), CORE_POLLS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_polls</code> table reference
     */
    public CorePolls(Name alias) {
        this(alias, CORE_POLLS);
    }

    /**
     * Create a <code>paradise_forums.core_polls</code> table reference
     */
    public CorePolls() {
        this(DSL.name("core_polls"), null);
    }

    public <O extends Record> CorePolls(Table<O> child, ForeignKey<O, CorePollsRecord> key) {
        super(child, key, CORE_POLLS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_POLLS_MEMBER, Indexes.CORE_POLLS_POLL_CLOSE_DATE);
    }

    @Override
    public Identity<CorePollsRecord, Integer> getIdentity() {
        return (Identity<CorePollsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CorePollsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_POLLS_PRIMARY;
    }

    @Override
    public CorePolls as(String alias) {
        return new CorePolls(DSL.name(alias), this);
    }

    @Override
    public CorePolls as(Name alias) {
        return new CorePolls(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CorePolls rename(String name) {
        return new CorePolls(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CorePolls rename(Name name) {
        return new CorePolls(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, Integer, String, ULong, Long, String, Byte, Integer, UInteger, Integer, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
