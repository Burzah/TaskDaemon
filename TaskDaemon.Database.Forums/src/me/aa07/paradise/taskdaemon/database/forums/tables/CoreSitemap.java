/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSitemapRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreSitemap extends TableImpl<CoreSitemapRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_sitemap</code>
     */
    public static final CoreSitemap CORE_SITEMAP = new CoreSitemap();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreSitemapRecord> getRecordType() {
        return CoreSitemapRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_sitemap.sitemap</code>. The sitemap
     * key
     */
    public final TableField<CoreSitemapRecord, String> SITEMAP = createField(DSL.name("sitemap"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "The sitemap key");

    /**
     * The column <code>paradise_forums.core_sitemap.data</code>. The sitemap
     * XML
     */
    public final TableField<CoreSitemapRecord, String> DATA = createField(DSL.name("data"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "The sitemap XML");

    /**
     * The column <code>paradise_forums.core_sitemap.updated</code>. Unix
     * timestamp of last update
     */
    public final TableField<CoreSitemapRecord, Integer> UPDATED = createField(DSL.name("updated"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "Unix timestamp of last update");

    /**
     * The column <code>paradise_forums.core_sitemap.last_id</code>. Stores the
     * last ID included in this sitemap
     */
    public final TableField<CoreSitemapRecord, ULong> LAST_ID = createField(DSL.name("last_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "Stores the last ID included in this sitemap");

    private CoreSitemap(Name alias, Table<CoreSitemapRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreSitemap(Name alias, Table<CoreSitemapRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_sitemap</code> table
     * reference
     */
    public CoreSitemap(String alias) {
        this(DSL.name(alias), CORE_SITEMAP);
    }

    /**
     * Create an aliased <code>paradise_forums.core_sitemap</code> table
     * reference
     */
    public CoreSitemap(Name alias) {
        this(alias, CORE_SITEMAP);
    }

    /**
     * Create a <code>paradise_forums.core_sitemap</code> table reference
     */
    public CoreSitemap() {
        this(DSL.name("core_sitemap"), null);
    }

    public <O extends Record> CoreSitemap(Table<O> child, ForeignKey<O, CoreSitemapRecord> key) {
        super(child, key, CORE_SITEMAP);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public UniqueKey<CoreSitemapRecord> getPrimaryKey() {
        return Keys.KEY_CORE_SITEMAP_PRIMARY;
    }

    @Override
    public CoreSitemap as(String alias) {
        return new CoreSitemap(DSL.name(alias), this);
    }

    @Override
    public CoreSitemap as(Name alias) {
        return new CoreSitemap(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreSitemap rename(String name) {
        return new CoreSitemap(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreSitemap rename(Name name) {
        return new CoreSitemap(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, Integer, ULong> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
