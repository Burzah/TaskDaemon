/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.ForumsAnswerRatingsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ForumsAnswerRatings extends TableImpl<ForumsAnswerRatingsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.forums_answer_ratings</code>
     */
    public static final ForumsAnswerRatings FORUMS_ANSWER_RATINGS = new ForumsAnswerRatings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ForumsAnswerRatingsRecord> getRecordType() {
        return ForumsAnswerRatingsRecord.class;
    }

    /**
     * The column <code>paradise_forums.forums_answer_ratings.id</code>. ID
     * Number
     */
    public final TableField<ForumsAnswerRatingsRecord, ULong> ID = createField(DSL.name("id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "ID Number");

    /**
     * The column <code>paradise_forums.forums_answer_ratings.post</code>. The
     * post ID
     */
    public final TableField<ForumsAnswerRatingsRecord, UInteger> POST = createField(DSL.name("post"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "The post ID");

    /**
     * The column <code>paradise_forums.forums_answer_ratings.member</code>. The
     * member giving the rating
     */
    public final TableField<ForumsAnswerRatingsRecord, ULong> MEMBER = createField(DSL.name("member"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "The member giving the rating");

    /**
     * The column <code>paradise_forums.forums_answer_ratings.rating</code>. The
     * rating; 1 for positive or -1 for negative
     */
    public final TableField<ForumsAnswerRatingsRecord, Byte> RATING = createField(DSL.name("rating"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "The rating; 1 for positive or -1 for negative");

    /**
     * The column <code>paradise_forums.forums_answer_ratings.date</code>. Unix
     * timestamp of when the rating was given
     */
    public final TableField<ForumsAnswerRatingsRecord, UInteger> DATE = createField(DSL.name("date"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "Unix timestamp of when the rating was given");

    /**
     * The column <code>paradise_forums.forums_answer_ratings.topic</code>. The
     * topic ID
     */
    public final TableField<ForumsAnswerRatingsRecord, UInteger> TOPIC = createField(DSL.name("topic"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.INTEGERUNSIGNED)), this, "The topic ID");

    private ForumsAnswerRatings(Name alias, Table<ForumsAnswerRatingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ForumsAnswerRatings(Name alias, Table<ForumsAnswerRatingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.forums_answer_ratings</code>
     * table reference
     */
    public ForumsAnswerRatings(String alias) {
        this(DSL.name(alias), FORUMS_ANSWER_RATINGS);
    }

    /**
     * Create an aliased <code>paradise_forums.forums_answer_ratings</code>
     * table reference
     */
    public ForumsAnswerRatings(Name alias) {
        this(alias, FORUMS_ANSWER_RATINGS);
    }

    /**
     * Create a <code>paradise_forums.forums_answer_ratings</code> table
     * reference
     */
    public ForumsAnswerRatings() {
        this(DSL.name("forums_answer_ratings"), null);
    }

    public <O extends Record> ForumsAnswerRatings(Table<O> child, ForeignKey<O, ForumsAnswerRatingsRecord> key) {
        super(child, key, FORUMS_ANSWER_RATINGS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.FORUMS_ANSWER_RATINGS_MEMBER_TOPIC_RATING, Indexes.FORUMS_ANSWER_RATINGS_POST);
    }

    @Override
    public Identity<ForumsAnswerRatingsRecord, ULong> getIdentity() {
        return (Identity<ForumsAnswerRatingsRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<ForumsAnswerRatingsRecord> getPrimaryKey() {
        return Keys.KEY_FORUMS_ANSWER_RATINGS_PRIMARY;
    }

    @Override
    public List<UniqueKey<ForumsAnswerRatingsRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_FORUMS_ANSWER_RATINGS_MEMBER_RATING);
    }

    @Override
    public ForumsAnswerRatings as(String alias) {
        return new ForumsAnswerRatings(DSL.name(alias), this);
    }

    @Override
    public ForumsAnswerRatings as(Name alias) {
        return new ForumsAnswerRatings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ForumsAnswerRatings rename(String name) {
        return new ForumsAnswerRatings(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ForumsAnswerRatings rename(Name name) {
        return new ForumsAnswerRatings(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<ULong, UInteger, ULong, Byte, UInteger, UInteger> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
