/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreEmailTemplatesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreEmailTemplates extends TableImpl<CoreEmailTemplatesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_email_templates</code>
     */
    public static final CoreEmailTemplates CORE_EMAIL_TEMPLATES = new CoreEmailTemplates();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreEmailTemplatesRecord> getRecordType() {
        return CoreEmailTemplatesRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_email_templates.template_id</code>.
     * ID Number
     */
    public final TableField<CoreEmailTemplatesRecord, ULong> TEMPLATE_ID = createField(DSL.name("template_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "ID Number");

    /**
     * The column
     * <code>paradise_forums.core_email_templates.template_app</code>.
     */
    public final TableField<CoreEmailTemplatesRecord, String> TEMPLATE_APP = createField(DSL.name("template_app"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_email_templates.template_name</code>.
     */
    public final TableField<CoreEmailTemplatesRecord, String> TEMPLATE_NAME = createField(DSL.name("template_name"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_email_templates.template_content_html</code>.
     */
    public final TableField<CoreEmailTemplatesRecord, String> TEMPLATE_CONTENT_HTML = createField(DSL.name("template_content_html"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_email_templates.template_parent</code>. This
     * column holds the template_id of the original un-edited version of the
     * template
     */
    public final TableField<CoreEmailTemplatesRecord, Long> TEMPLATE_PARENT = createField(DSL.name("template_parent"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "This column holds the template_id of the original un-edited version of the template");

    /**
     * The column
     * <code>paradise_forums.core_email_templates.template_data</code>.
     */
    public final TableField<CoreEmailTemplatesRecord, String> TEMPLATE_DATA = createField(DSL.name("template_data"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_email_templates.template_key</code>.
     */
    public final TableField<CoreEmailTemplatesRecord, String> TEMPLATE_KEY = createField(DSL.name("template_key"), SQLDataType.CHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.CHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_email_templates.template_content_plaintext</code>.
     */
    public final TableField<CoreEmailTemplatesRecord, String> TEMPLATE_CONTENT_PLAINTEXT = createField(DSL.name("template_content_plaintext"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_email_templates.template_edited</code>. Flag
     * to indicate if there is a customized version of the template
     */
    public final TableField<CoreEmailTemplatesRecord, Boolean> TEMPLATE_EDITED = createField(DSL.name("template_edited"), SQLDataType.BIT.defaultValue(DSL.inline("b'0'", SQLDataType.BIT)), this, "Flag to indicate if there is a customized version of the template");

    /**
     * The column
     * <code>paradise_forums.core_email_templates.template_pinned</code>.
     */
    public final TableField<CoreEmailTemplatesRecord, Byte> TEMPLATE_PINNED = createField(DSL.name("template_pinned"), SQLDataType.TINYINT.defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "");

    private CoreEmailTemplates(Name alias, Table<CoreEmailTemplatesRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreEmailTemplates(Name alias, Table<CoreEmailTemplatesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_email_templates</code> table
     * reference
     */
    public CoreEmailTemplates(String alias) {
        this(DSL.name(alias), CORE_EMAIL_TEMPLATES);
    }

    /**
     * Create an aliased <code>paradise_forums.core_email_templates</code> table
     * reference
     */
    public CoreEmailTemplates(Name alias) {
        this(alias, CORE_EMAIL_TEMPLATES);
    }

    /**
     * Create a <code>paradise_forums.core_email_templates</code> table
     * reference
     */
    public CoreEmailTemplates() {
        this(DSL.name("core_email_templates"), null);
    }

    public <O extends Record> CoreEmailTemplates(Table<O> child, ForeignKey<O, CoreEmailTemplatesRecord> key) {
        super(child, key, CORE_EMAIL_TEMPLATES);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_EMAIL_TEMPLATES_TEMPLATE_APP, Indexes.CORE_EMAIL_TEMPLATES_TEMPLATE_PARENT);
    }

    @Override
    public Identity<CoreEmailTemplatesRecord, ULong> getIdentity() {
        return (Identity<CoreEmailTemplatesRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreEmailTemplatesRecord> getPrimaryKey() {
        return Keys.KEY_CORE_EMAIL_TEMPLATES_PRIMARY;
    }

    @Override
    public List<UniqueKey<CoreEmailTemplatesRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_CORE_EMAIL_TEMPLATES_TEMPLATE_KEY);
    }

    @Override
    public CoreEmailTemplates as(String alias) {
        return new CoreEmailTemplates(DSL.name(alias), this);
    }

    @Override
    public CoreEmailTemplates as(Name alias) {
        return new CoreEmailTemplates(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreEmailTemplates rename(String name) {
        return new CoreEmailTemplates(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreEmailTemplates rename(Name name) {
        return new CoreEmailTemplates(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<ULong, String, String, String, Long, String, String, String, Boolean, Byte> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
