/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreAnnouncementsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreAnnouncements extends TableImpl<CoreAnnouncementsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_announcements</code>
     */
    public static final CoreAnnouncements CORE_ANNOUNCEMENTS = new CoreAnnouncements();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreAnnouncementsRecord> getRecordType() {
        return CoreAnnouncementsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_announcements.announce_id</code>.
     */
    public final TableField<CoreAnnouncementsRecord, UInteger> ANNOUNCE_ID = createField(DSL.name("announce_id"), SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.core_announcements.announce_title</code>.
     */
    public final TableField<CoreAnnouncementsRecord, String> ANNOUNCE_TITLE = createField(DSL.name("announce_title"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_announcements.announce_content</code>.
     */
    public final TableField<CoreAnnouncementsRecord, String> ANNOUNCE_CONTENT = createField(DSL.name("announce_content"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_announcements.announce_member_id</code>.
     */
    public final TableField<CoreAnnouncementsRecord, ULong> ANNOUNCE_MEMBER_ID = createField(DSL.name("announce_member_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_announcements.announce_views</code>.
     */
    public final TableField<CoreAnnouncementsRecord, UInteger> ANNOUNCE_VIEWS = createField(DSL.name("announce_views"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_announcements.announce_start</code>.
     */
    public final TableField<CoreAnnouncementsRecord, Integer> ANNOUNCE_START = createField(DSL.name("announce_start"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_announcements.announce_end</code>.
     */
    public final TableField<CoreAnnouncementsRecord, Integer> ANNOUNCE_END = createField(DSL.name("announce_end"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_announcements.announce_active</code>.
     */
    public final TableField<CoreAnnouncementsRecord, Byte> ANNOUNCE_ACTIVE = createField(DSL.name("announce_active"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("1", SQLDataType.TINYINT)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_announcements.announce_seo_title</code>.
     */
    public final TableField<CoreAnnouncementsRecord, String> ANNOUNCE_SEO_TITLE = createField(DSL.name("announce_seo_title"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_announcements.announce_ids</code>.
     */
    public final TableField<CoreAnnouncementsRecord, String> ANNOUNCE_IDS = createField(DSL.name("announce_ids"), SQLDataType.VARCHAR(245).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_announcements.announce_app</code>.
     */
    public final TableField<CoreAnnouncementsRecord, String> ANNOUNCE_APP = createField(DSL.name("announce_app"), SQLDataType.VARCHAR(45).nullable(false).defaultValue(DSL.inline("'*'", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_announcements.announce_location</code>.
     */
    public final TableField<CoreAnnouncementsRecord, String> ANNOUNCE_LOCATION = createField(DSL.name("announce_location"), SQLDataType.VARCHAR(45).nullable(false).defaultValue(DSL.inline("'*'", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_announcements.announce_permissions</code>.
     * Comma-delimited list of Group IDs, or * for all
     */
    public final TableField<CoreAnnouncementsRecord, String> ANNOUNCE_PERMISSIONS = createField(DSL.name("announce_permissions"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "Comma-delimited list of Group IDs, or * for all");

    /**
     * The column
     * <code>paradise_forums.core_announcements.announce_page_location</code>.
     * Page location to show announcement
     */
    public final TableField<CoreAnnouncementsRecord, String> ANNOUNCE_PAGE_LOCATION = createField(DSL.name("announce_page_location"), SQLDataType.VARCHAR(45).nullable(false), this, "Page location to show announcement");

    /**
     * The column
     * <code>paradise_forums.core_announcements.announce_color</code>. Page top
     * announcement color
     */
    public final TableField<CoreAnnouncementsRecord, String> ANNOUNCE_COLOR = createField(DSL.name("announce_color"), SQLDataType.VARCHAR(45).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "Page top announcement color");

    /**
     * The column <code>paradise_forums.core_announcements.announce_type</code>.
     * Announcement type 0=None, 1=Content, 2=Url
     */
    public final TableField<CoreAnnouncementsRecord, Byte> ANNOUNCE_TYPE = createField(DSL.name("announce_type"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("1", SQLDataType.TINYINT)), this, "Announcement type 0=None, 1=Content, 2=Url");

    /**
     * The column <code>paradise_forums.core_announcements.announce_url</code>.
     * Announcement URL
     */
    public final TableField<CoreAnnouncementsRecord, String> ANNOUNCE_URL = createField(DSL.name("announce_url"), SQLDataType.VARCHAR(2048).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "Announcement URL");

    private CoreAnnouncements(Name alias, Table<CoreAnnouncementsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreAnnouncements(Name alias, Table<CoreAnnouncementsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_announcements</code> table
     * reference
     */
    public CoreAnnouncements(String alias) {
        this(DSL.name(alias), CORE_ANNOUNCEMENTS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_announcements</code> table
     * reference
     */
    public CoreAnnouncements(Name alias) {
        this(alias, CORE_ANNOUNCEMENTS);
    }

    /**
     * Create a <code>paradise_forums.core_announcements</code> table reference
     */
    public CoreAnnouncements() {
        this(DSL.name("core_announcements"), null);
    }

    public <O extends Record> CoreAnnouncements(Table<O> child, ForeignKey<O, CoreAnnouncementsRecord> key) {
        super(child, key, CORE_ANNOUNCEMENTS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_ANNOUNCEMENTS_ANNOUNCE_END, Indexes.CORE_ANNOUNCEMENTS_ANNOUNCE_START, Indexes.CORE_ANNOUNCEMENTS_MEMBER);
    }

    @Override
    public Identity<CoreAnnouncementsRecord, UInteger> getIdentity() {
        return (Identity<CoreAnnouncementsRecord, UInteger>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreAnnouncementsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_ANNOUNCEMENTS_PRIMARY;
    }

    @Override
    public CoreAnnouncements as(String alias) {
        return new CoreAnnouncements(DSL.name(alias), this);
    }

    @Override
    public CoreAnnouncements as(Name alias) {
        return new CoreAnnouncements(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreAnnouncements rename(String name) {
        return new CoreAnnouncements(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreAnnouncements rename(Name name) {
        return new CoreAnnouncements(name, null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<UInteger, String, String, ULong, UInteger, Integer, Integer, Byte, String, String, String, String, String, String, String, Byte, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }
}
