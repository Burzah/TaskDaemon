/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreFileStorage;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreFileStorageRecord extends UpdatableRecordImpl<CoreFileStorageRecord> implements Record3<ULong, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_file_storage.id</code>. ID Number
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_file_storage.id</code>. ID Number
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_file_storage.method</code>. The
     * storage method
     */
    public void setMethod(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_file_storage.method</code>. The
     * storage method
     */
    public String getMethod() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_file_storage.configuration</code>.
     * JSON object of configuration options
     */
    public void setConfiguration(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_file_storage.configuration</code>.
     * JSON object of configuration options
     */
    public String getConfiguration() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<ULong, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<ULong, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CoreFileStorage.CORE_FILE_STORAGE.ID;
    }

    @Override
    public Field<String> field2() {
        return CoreFileStorage.CORE_FILE_STORAGE.METHOD;
    }

    @Override
    public Field<String> field3() {
        return CoreFileStorage.CORE_FILE_STORAGE.CONFIGURATION;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getMethod();
    }

    @Override
    public String component3() {
        return getConfiguration();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getMethod();
    }

    @Override
    public String value3() {
        return getConfiguration();
    }

    @Override
    public CoreFileStorageRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value2(String value) {
        setMethod(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord value3(String value) {
        setConfiguration(value);
        return this;
    }

    @Override
    public CoreFileStorageRecord values(ULong value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreFileStorageRecord
     */
    public CoreFileStorageRecord() {
        super(CoreFileStorage.CORE_FILE_STORAGE);
    }

    /**
     * Create a detached, initialised CoreFileStorageRecord
     */
    public CoreFileStorageRecord(ULong id, String method, String configuration) {
        super(CoreFileStorage.CORE_FILE_STORAGE);

        setId(id);
        setMethod(method);
        setConfiguration(configuration);
    }
}
