/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreIgnoredUsersRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreIgnoredUsers extends TableImpl<CoreIgnoredUsersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_ignored_users</code>
     */
    public static final CoreIgnoredUsers CORE_IGNORED_USERS = new CoreIgnoredUsers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreIgnoredUsersRecord> getRecordType() {
        return CoreIgnoredUsersRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_ignored_users.ignore_id</code>.
     */
    public final TableField<CoreIgnoredUsersRecord, Integer> IGNORE_ID = createField(DSL.name("ignore_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.core_ignored_users.ignore_owner_id</code>.
     */
    public final TableField<CoreIgnoredUsersRecord, Integer> IGNORE_OWNER_ID = createField(DSL.name("ignore_owner_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_ignored_users.ignore_ignore_id</code>.
     */
    public final TableField<CoreIgnoredUsersRecord, Integer> IGNORE_IGNORE_ID = createField(DSL.name("ignore_ignore_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_ignored_users.ignore_messages</code>.
     */
    public final TableField<CoreIgnoredUsersRecord, Integer> IGNORE_MESSAGES = createField(DSL.name("ignore_messages"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_ignored_users.ignore_topics</code>.
     */
    public final TableField<CoreIgnoredUsersRecord, Integer> IGNORE_TOPICS = createField(DSL.name("ignore_topics"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_ignored_users.ignore_signatures</code>.
     */
    public final TableField<CoreIgnoredUsersRecord, Integer> IGNORE_SIGNATURES = createField(DSL.name("ignore_signatures"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_ignored_users.ignore_mentions</code>.
     */
    public final TableField<CoreIgnoredUsersRecord, UByte> IGNORE_MENTIONS = createField(DSL.name("ignore_mentions"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "");

    private CoreIgnoredUsers(Name alias, Table<CoreIgnoredUsersRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreIgnoredUsers(Name alias, Table<CoreIgnoredUsersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_ignored_users</code> table
     * reference
     */
    public CoreIgnoredUsers(String alias) {
        this(DSL.name(alias), CORE_IGNORED_USERS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_ignored_users</code> table
     * reference
     */
    public CoreIgnoredUsers(Name alias) {
        this(alias, CORE_IGNORED_USERS);
    }

    /**
     * Create a <code>paradise_forums.core_ignored_users</code> table reference
     */
    public CoreIgnoredUsers() {
        this(DSL.name("core_ignored_users"), null);
    }

    public <O extends Record> CoreIgnoredUsers(Table<O> child, ForeignKey<O, CoreIgnoredUsersRecord> key) {
        super(child, key, CORE_IGNORED_USERS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_IGNORED_USERS_IGNORE_IGNORE_ID, Indexes.CORE_IGNORED_USERS_IGNORE_OWNER_ID);
    }

    @Override
    public Identity<CoreIgnoredUsersRecord, Integer> getIdentity() {
        return (Identity<CoreIgnoredUsersRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreIgnoredUsersRecord> getPrimaryKey() {
        return Keys.KEY_CORE_IGNORED_USERS_PRIMARY;
    }

    @Override
    public CoreIgnoredUsers as(String alias) {
        return new CoreIgnoredUsers(DSL.name(alias), this);
    }

    @Override
    public CoreIgnoredUsers as(Name alias) {
        return new CoreIgnoredUsers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreIgnoredUsers rename(String name) {
        return new CoreIgnoredUsers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreIgnoredUsers rename(Name name) {
        return new CoreIgnoredUsers(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, Integer, Integer, Integer, Integer, UByte> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
