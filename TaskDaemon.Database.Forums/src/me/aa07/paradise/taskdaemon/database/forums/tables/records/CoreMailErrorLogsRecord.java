/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMailErrorLogs;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreMailErrorLogsRecord extends UpdatableRecordImpl<CoreMailErrorLogsRecord> implements Record10<Integer, Integer, String, String, String, String, String, String, String, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_mail_error_logs.mlog_id</code>.
     */
    public void setMlogId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_mail_error_logs.mlog_id</code>.
     */
    public Integer getMlogId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_mail_error_logs.mlog_date</code>.
     */
    public void setMlogDate(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_mail_error_logs.mlog_date</code>.
     */
    public Integer getMlogDate() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_mail_error_logs.mlog_to</code>.
     */
    public void setMlogTo(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_mail_error_logs.mlog_to</code>.
     */
    public String getMlogTo() {
        return (String) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_mail_error_logs.mlog_from</code>.
     */
    public void setMlogFrom(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_mail_error_logs.mlog_from</code>.
     */
    public String getMlogFrom() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_mail_error_logs.mlog_subject</code>.
     */
    public void setMlogSubject(String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_mail_error_logs.mlog_subject</code>.
     */
    public String getMlogSubject() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_mail_error_logs.mlog_content</code>.
     */
    public void setMlogContent(String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_mail_error_logs.mlog_content</code>.
     */
    public String getMlogContent() {
        return (String) get(5);
    }

    /**
     * Setter for <code>paradise_forums.core_mail_error_logs.mlog_msg</code>.
     */
    public void setMlogMsg(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.core_mail_error_logs.mlog_msg</code>.
     */
    public String getMlogMsg() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_mail_error_logs.mlog_smtp_log</code>.
     */
    public void setMlogSmtpLog(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_mail_error_logs.mlog_smtp_log</code>.
     */
    public String getMlogSmtpLog() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_mail_error_logs.mlog_resend_data</code>.
     */
    public void setMlogResendData(String value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_mail_error_logs.mlog_resend_data</code>.
     */
    public String getMlogResendData() {
        return (String) get(8);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_mail_error_logs.mlog_notification_sent</code>.
     * Whether this has been sent in an AdminCP notification
     */
    public void setMlogNotificationSent(Byte value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_mail_error_logs.mlog_notification_sent</code>.
     * Whether this has been sent in an AdminCP notification
     */
    public Byte getMlogNotificationSent() {
        return (Byte) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, Integer, String, String, String, String, String, String, String, Byte> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, Integer, String, String, String, String, String, String, String, Byte> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CoreMailErrorLogs.CORE_MAIL_ERROR_LOGS.MLOG_ID;
    }

    @Override
    public Field<Integer> field2() {
        return CoreMailErrorLogs.CORE_MAIL_ERROR_LOGS.MLOG_DATE;
    }

    @Override
    public Field<String> field3() {
        return CoreMailErrorLogs.CORE_MAIL_ERROR_LOGS.MLOG_TO;
    }

    @Override
    public Field<String> field4() {
        return CoreMailErrorLogs.CORE_MAIL_ERROR_LOGS.MLOG_FROM;
    }

    @Override
    public Field<String> field5() {
        return CoreMailErrorLogs.CORE_MAIL_ERROR_LOGS.MLOG_SUBJECT;
    }

    @Override
    public Field<String> field6() {
        return CoreMailErrorLogs.CORE_MAIL_ERROR_LOGS.MLOG_CONTENT;
    }

    @Override
    public Field<String> field7() {
        return CoreMailErrorLogs.CORE_MAIL_ERROR_LOGS.MLOG_MSG;
    }

    @Override
    public Field<String> field8() {
        return CoreMailErrorLogs.CORE_MAIL_ERROR_LOGS.MLOG_SMTP_LOG;
    }

    @Override
    public Field<String> field9() {
        return CoreMailErrorLogs.CORE_MAIL_ERROR_LOGS.MLOG_RESEND_DATA;
    }

    @Override
    public Field<Byte> field10() {
        return CoreMailErrorLogs.CORE_MAIL_ERROR_LOGS.MLOG_NOTIFICATION_SENT;
    }

    @Override
    public Integer component1() {
        return getMlogId();
    }

    @Override
    public Integer component2() {
        return getMlogDate();
    }

    @Override
    public String component3() {
        return getMlogTo();
    }

    @Override
    public String component4() {
        return getMlogFrom();
    }

    @Override
    public String component5() {
        return getMlogSubject();
    }

    @Override
    public String component6() {
        return getMlogContent();
    }

    @Override
    public String component7() {
        return getMlogMsg();
    }

    @Override
    public String component8() {
        return getMlogSmtpLog();
    }

    @Override
    public String component9() {
        return getMlogResendData();
    }

    @Override
    public Byte component10() {
        return getMlogNotificationSent();
    }

    @Override
    public Integer value1() {
        return getMlogId();
    }

    @Override
    public Integer value2() {
        return getMlogDate();
    }

    @Override
    public String value3() {
        return getMlogTo();
    }

    @Override
    public String value4() {
        return getMlogFrom();
    }

    @Override
    public String value5() {
        return getMlogSubject();
    }

    @Override
    public String value6() {
        return getMlogContent();
    }

    @Override
    public String value7() {
        return getMlogMsg();
    }

    @Override
    public String value8() {
        return getMlogSmtpLog();
    }

    @Override
    public String value9() {
        return getMlogResendData();
    }

    @Override
    public Byte value10() {
        return getMlogNotificationSent();
    }

    @Override
    public CoreMailErrorLogsRecord value1(Integer value) {
        setMlogId(value);
        return this;
    }

    @Override
    public CoreMailErrorLogsRecord value2(Integer value) {
        setMlogDate(value);
        return this;
    }

    @Override
    public CoreMailErrorLogsRecord value3(String value) {
        setMlogTo(value);
        return this;
    }

    @Override
    public CoreMailErrorLogsRecord value4(String value) {
        setMlogFrom(value);
        return this;
    }

    @Override
    public CoreMailErrorLogsRecord value5(String value) {
        setMlogSubject(value);
        return this;
    }

    @Override
    public CoreMailErrorLogsRecord value6(String value) {
        setMlogContent(value);
        return this;
    }

    @Override
    public CoreMailErrorLogsRecord value7(String value) {
        setMlogMsg(value);
        return this;
    }

    @Override
    public CoreMailErrorLogsRecord value8(String value) {
        setMlogSmtpLog(value);
        return this;
    }

    @Override
    public CoreMailErrorLogsRecord value9(String value) {
        setMlogResendData(value);
        return this;
    }

    @Override
    public CoreMailErrorLogsRecord value10(Byte value) {
        setMlogNotificationSent(value);
        return this;
    }

    @Override
    public CoreMailErrorLogsRecord values(Integer value1, Integer value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, Byte value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreMailErrorLogsRecord
     */
    public CoreMailErrorLogsRecord() {
        super(CoreMailErrorLogs.CORE_MAIL_ERROR_LOGS);
    }

    /**
     * Create a detached, initialised CoreMailErrorLogsRecord
     */
    public CoreMailErrorLogsRecord(Integer mlogId, Integer mlogDate, String mlogTo, String mlogFrom, String mlogSubject, String mlogContent, String mlogMsg, String mlogSmtpLog, String mlogResendData, Byte mlogNotificationSent) {
        super(CoreMailErrorLogs.CORE_MAIL_ERROR_LOGS);

        setMlogId(mlogId);
        setMlogDate(mlogDate);
        setMlogTo(mlogTo);
        setMlogFrom(mlogFrom);
        setMlogSubject(mlogSubject);
        setMlogContent(mlogContent);
        setMlogMsg(mlogMsg);
        setMlogSmtpLog(mlogSmtpLog);
        setMlogResendData(mlogResendData);
        setMlogNotificationSent(mlogNotificationSent);
    }
}
