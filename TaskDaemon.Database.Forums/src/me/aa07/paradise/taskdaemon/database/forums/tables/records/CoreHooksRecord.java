/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreHooks;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreHooksRecord extends UpdatableRecordImpl<CoreHooksRecord> implements Record6<ULong, ULong, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_hooks.id</code>. ID Number
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_hooks.id</code>. ID Number
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_hooks.plugin</code>. Plugin ID, if
     * belongs to a plugin
     */
    public void setPlugin(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_hooks.plugin</code>. Plugin ID, if
     * belongs to a plugin
     */
    public ULong getPlugin() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_hooks.app</code>. Application key,
     * if belongs to app
     */
    public void setApp(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_hooks.app</code>. Application key,
     * if belongs to app
     */
    public String getApp() {
        return (String) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_hooks.type</code>. C for code, S
     * for skin
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_hooks.type</code>. C for code, S
     * for skin
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_hooks.class</code>. The class the
     * hook overrides
     */
    public void setClass_(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_hooks.class</code>. The class the
     * hook overrides
     */
    public String getClass_() {
        return (String) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_hooks.filename</code>. The filename
     * on disk
     */
    public void setFilename(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_hooks.filename</code>. The filename
     * on disk
     */
    public String getFilename() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<ULong, ULong, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<ULong, ULong, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CoreHooks.CORE_HOOKS.ID;
    }

    @Override
    public Field<ULong> field2() {
        return CoreHooks.CORE_HOOKS.PLUGIN;
    }

    @Override
    public Field<String> field3() {
        return CoreHooks.CORE_HOOKS.APP;
    }

    @Override
    public Field<String> field4() {
        return CoreHooks.CORE_HOOKS.TYPE;
    }

    @Override
    public Field<String> field5() {
        return CoreHooks.CORE_HOOKS.CLASS;
    }

    @Override
    public Field<String> field6() {
        return CoreHooks.CORE_HOOKS.FILENAME;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public ULong component2() {
        return getPlugin();
    }

    @Override
    public String component3() {
        return getApp();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getClass_();
    }

    @Override
    public String component6() {
        return getFilename();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public ULong value2() {
        return getPlugin();
    }

    @Override
    public String value3() {
        return getApp();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getClass_();
    }

    @Override
    public String value6() {
        return getFilename();
    }

    @Override
    public CoreHooksRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public CoreHooksRecord value2(ULong value) {
        setPlugin(value);
        return this;
    }

    @Override
    public CoreHooksRecord value3(String value) {
        setApp(value);
        return this;
    }

    @Override
    public CoreHooksRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public CoreHooksRecord value5(String value) {
        setClass_(value);
        return this;
    }

    @Override
    public CoreHooksRecord value6(String value) {
        setFilename(value);
        return this;
    }

    @Override
    public CoreHooksRecord values(ULong value1, ULong value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreHooksRecord
     */
    public CoreHooksRecord() {
        super(CoreHooks.CORE_HOOKS);
    }

    /**
     * Create a detached, initialised CoreHooksRecord
     */
    public CoreHooksRecord(ULong id, ULong plugin, String app, String type, String class_, String filename) {
        super(CoreHooks.CORE_HOOKS);

        setId(id);
        setPlugin(plugin);
        setApp(app);
        setType(type);
        setClass_(class_);
        setFilename(filename);
    }
}
