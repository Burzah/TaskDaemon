/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CalendarEventRemindersRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalendarEventReminders extends TableImpl<CalendarEventRemindersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.calendar_event_reminders</code>
     */
    public static final CalendarEventReminders CALENDAR_EVENT_REMINDERS = new CalendarEventReminders();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalendarEventRemindersRecord> getRecordType() {
        return CalendarEventRemindersRecord.class;
    }

    /**
     * The column
     * <code>paradise_forums.calendar_event_reminders.reminder_id</code>. ID
     * Number
     */
    public final TableField<CalendarEventRemindersRecord, ULong> REMINDER_ID = createField(DSL.name("reminder_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "ID Number");

    /**
     * The column
     * <code>paradise_forums.calendar_event_reminders.reminder_event_id</code>.
     * Event to remind about
     */
    public final TableField<CalendarEventRemindersRecord, ULong> REMINDER_EVENT_ID = createField(DSL.name("reminder_event_id"), SQLDataType.BIGINTUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.BIGINTUNSIGNED)), this, "Event to remind about");

    /**
     * The column
     * <code>paradise_forums.calendar_event_reminders.reminder_member_id</code>.
     * Member to notify
     */
    public final TableField<CalendarEventRemindersRecord, ULong> REMINDER_MEMBER_ID = createField(DSL.name("reminder_member_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "Member to notify");

    /**
     * The column
     * <code>paradise_forums.calendar_event_reminders.reminder_date</code>.
     * Timestamp after which to send notification
     */
    public final TableField<CalendarEventRemindersRecord, UInteger> REMINDER_DATE = createField(DSL.name("reminder_date"), SQLDataType.INTEGERUNSIGNED.nullable(false), this, "Timestamp after which to send notification");

    /**
     * The column
     * <code>paradise_forums.calendar_event_reminders.reminder_days_before</code>.
     */
    public final TableField<CalendarEventRemindersRecord, UInteger> REMINDER_DAYS_BEFORE = createField(DSL.name("reminder_days_before"), SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    private CalendarEventReminders(Name alias, Table<CalendarEventRemindersRecord> aliased) {
        this(alias, aliased, null);
    }

    private CalendarEventReminders(Name alias, Table<CalendarEventRemindersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.calendar_event_reminders</code>
     * table reference
     */
    public CalendarEventReminders(String alias) {
        this(DSL.name(alias), CALENDAR_EVENT_REMINDERS);
    }

    /**
     * Create an aliased <code>paradise_forums.calendar_event_reminders</code>
     * table reference
     */
    public CalendarEventReminders(Name alias) {
        this(alias, CALENDAR_EVENT_REMINDERS);
    }

    /**
     * Create a <code>paradise_forums.calendar_event_reminders</code> table
     * reference
     */
    public CalendarEventReminders() {
        this(DSL.name("calendar_event_reminders"), null);
    }

    public <O extends Record> CalendarEventReminders(Table<O> child, ForeignKey<O, CalendarEventRemindersRecord> key) {
        super(child, key, CALENDAR_EVENT_REMINDERS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CALENDAR_EVENT_REMINDERS_DATE, Indexes.CALENDAR_EVENT_REMINDERS_MEMBER, Indexes.CALENDAR_EVENT_REMINDERS_REMINDER);
    }

    @Override
    public Identity<CalendarEventRemindersRecord, ULong> getIdentity() {
        return (Identity<CalendarEventRemindersRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CalendarEventRemindersRecord> getPrimaryKey() {
        return Keys.KEY_CALENDAR_EVENT_REMINDERS_PRIMARY;
    }

    @Override
    public CalendarEventReminders as(String alias) {
        return new CalendarEventReminders(DSL.name(alias), this);
    }

    @Override
    public CalendarEventReminders as(Name alias) {
        return new CalendarEventReminders(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CalendarEventReminders rename(String name) {
        return new CalendarEventReminders(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CalendarEventReminders rename(Name name) {
        return new CalendarEventReminders(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<ULong, ULong, ULong, UInteger, UInteger> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
