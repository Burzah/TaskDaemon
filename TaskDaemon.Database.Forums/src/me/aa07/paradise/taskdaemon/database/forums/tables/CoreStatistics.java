/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreStatisticsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreStatistics extends TableImpl<CoreStatisticsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_statistics</code>
     */
    public static final CoreStatistics CORE_STATISTICS = new CoreStatistics();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreStatisticsRecord> getRecordType() {
        return CoreStatisticsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_statistics.id</code>. ID Number
     */
    public final TableField<CoreStatisticsRecord, ULong> ID = createField(DSL.name("id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "ID Number");

    /**
     * The column <code>paradise_forums.core_statistics.type</code>. Type of
     * statistic
     */
    public final TableField<CoreStatisticsRecord, String> TYPE = createField(DSL.name("type"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "Type of statistic");

    /**
     * The column <code>paradise_forums.core_statistics.value_1</code>.
     */
    public final TableField<CoreStatisticsRecord, Long> VALUE_1 = createField(DSL.name("value_1"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>paradise_forums.core_statistics.value_2</code>.
     */
    public final TableField<CoreStatisticsRecord, Long> VALUE_2 = createField(DSL.name("value_2"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>paradise_forums.core_statistics.value_3</code>.
     */
    public final TableField<CoreStatisticsRecord, Long> VALUE_3 = createField(DSL.name("value_3"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>paradise_forums.core_statistics.value_4</code>.
     */
    public final TableField<CoreStatisticsRecord, String> VALUE_4 = createField(DSL.name("value_4"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_statistics.extra_data</code>.
     */
    public final TableField<CoreStatisticsRecord, String> EXTRA_DATA = createField(DSL.name("extra_data"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_statistics.time</code>.
     */
    public final TableField<CoreStatisticsRecord, UInteger> TIME = createField(DSL.name("time"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    private CoreStatistics(Name alias, Table<CoreStatisticsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreStatistics(Name alias, Table<CoreStatisticsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_statistics</code> table
     * reference
     */
    public CoreStatistics(String alias) {
        this(DSL.name(alias), CORE_STATISTICS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_statistics</code> table
     * reference
     */
    public CoreStatistics(Name alias) {
        this(alias, CORE_STATISTICS);
    }

    /**
     * Create a <code>paradise_forums.core_statistics</code> table reference
     */
    public CoreStatistics() {
        this(DSL.name("core_statistics"), null);
    }

    public <O extends Record> CoreStatistics(Table<O> child, ForeignKey<O, CoreStatisticsRecord> key) {
        super(child, key, CORE_STATISTICS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_STATISTICS_TYPE_INT_VALUE, Indexes.CORE_STATISTICS_TYPE_TEXT_VALUE);
    }

    @Override
    public Identity<CoreStatisticsRecord, ULong> getIdentity() {
        return (Identity<CoreStatisticsRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreStatisticsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_STATISTICS_PRIMARY;
    }

    @Override
    public CoreStatistics as(String alias) {
        return new CoreStatistics(DSL.name(alias), this);
    }

    @Override
    public CoreStatistics as(Name alias) {
        return new CoreStatistics(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreStatistics rename(String name) {
        return new CoreStatistics(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreStatistics rename(Name name) {
        return new CoreStatistics(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<ULong, String, Long, Long, Long, String, String, UInteger> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
