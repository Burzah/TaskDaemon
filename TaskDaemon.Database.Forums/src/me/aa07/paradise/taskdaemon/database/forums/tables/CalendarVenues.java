/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CalendarVenuesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalendarVenues extends TableImpl<CalendarVenuesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.calendar_venues</code>
     */
    public static final CalendarVenues CALENDAR_VENUES = new CalendarVenues();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalendarVenuesRecord> getRecordType() {
        return CalendarVenuesRecord.class;
    }

    /**
     * The column <code>paradise_forums.calendar_venues.venue_id</code>. ID
     * Number
     */
    public final TableField<CalendarVenuesRecord, ULong> VENUE_ID = createField(DSL.name("venue_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "ID Number");

    /**
     * The column <code>paradise_forums.calendar_venues.venue_position</code>.
     */
    public final TableField<CalendarVenuesRecord, UInteger> VENUE_POSITION = createField(DSL.name("venue_position"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("NULL", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.calendar_venues.venue_enabled</code>.
     */
    public final TableField<CalendarVenuesRecord, UByte> VENUE_ENABLED = createField(DSL.name("venue_enabled"), SQLDataType.TINYINTUNSIGNED.defaultValue(DSL.inline("1", SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.calendar_venues.venue_title_seo</code>.
     */
    public final TableField<CalendarVenuesRecord, String> VENUE_TITLE_SEO = createField(DSL.name("venue_title_seo"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.calendar_venues.venue_address</code>.
     * Physical Address
     */
    public final TableField<CalendarVenuesRecord, String> VENUE_ADDRESS = createField(DSL.name("venue_address"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "Physical Address");

    private CalendarVenues(Name alias, Table<CalendarVenuesRecord> aliased) {
        this(alias, aliased, null);
    }

    private CalendarVenues(Name alias, Table<CalendarVenuesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.calendar_venues</code> table
     * reference
     */
    public CalendarVenues(String alias) {
        this(DSL.name(alias), CALENDAR_VENUES);
    }

    /**
     * Create an aliased <code>paradise_forums.calendar_venues</code> table
     * reference
     */
    public CalendarVenues(Name alias) {
        this(alias, CALENDAR_VENUES);
    }

    /**
     * Create a <code>paradise_forums.calendar_venues</code> table reference
     */
    public CalendarVenues() {
        this(DSL.name("calendar_venues"), null);
    }

    public <O extends Record> CalendarVenues(Table<O> child, ForeignKey<O, CalendarVenuesRecord> key) {
        super(child, key, CALENDAR_VENUES);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public Identity<CalendarVenuesRecord, ULong> getIdentity() {
        return (Identity<CalendarVenuesRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CalendarVenuesRecord> getPrimaryKey() {
        return Keys.KEY_CALENDAR_VENUES_PRIMARY;
    }

    @Override
    public CalendarVenues as(String alias) {
        return new CalendarVenues(DSL.name(alias), this);
    }

    @Override
    public CalendarVenues as(Name alias) {
        return new CalendarVenues(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CalendarVenues rename(String name) {
        return new CalendarVenues(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CalendarVenues rename(Name name) {
        return new CalendarVenues(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<ULong, UInteger, UByte, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
