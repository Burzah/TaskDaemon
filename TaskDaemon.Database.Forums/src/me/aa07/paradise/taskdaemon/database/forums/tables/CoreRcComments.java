/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreRcCommentsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreRcComments extends TableImpl<CoreRcCommentsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_rc_comments</code>
     */
    public static final CoreRcComments CORE_RC_COMMENTS = new CoreRcComments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreRcCommentsRecord> getRecordType() {
        return CoreRcCommentsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_rc_comments.id</code>.
     */
    public final TableField<CoreRcCommentsRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_rc_comments.rid</code>.
     */
    public final TableField<CoreRcCommentsRecord, Integer> RID = createField(DSL.name("rid"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_rc_comments.comment</code>.
     */
    public final TableField<CoreRcCommentsRecord, String> COMMENT = createField(DSL.name("comment"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>paradise_forums.core_rc_comments.comment_by</code>.
     */
    public final TableField<CoreRcCommentsRecord, ULong> COMMENT_BY = createField(DSL.name("comment_by"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_rc_comments.comment_date</code>.
     */
    public final TableField<CoreRcCommentsRecord, Integer> COMMENT_DATE = createField(DSL.name("comment_date"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_rc_comments.approved</code>.
     */
    public final TableField<CoreRcCommentsRecord, Byte> APPROVED = createField(DSL.name("approved"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("1", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>paradise_forums.core_rc_comments.edit_date</code>.
     */
    public final TableField<CoreRcCommentsRecord, Integer> EDIT_DATE = createField(DSL.name("edit_date"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.core_rc_comments.author_name</code>.
     */
    public final TableField<CoreRcCommentsRecord, String> AUTHOR_NAME = createField(DSL.name("author_name"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_rc_comments.ip_address</code>.
     */
    public final TableField<CoreRcCommentsRecord, String> IP_ADDRESS = createField(DSL.name("ip_address"), SQLDataType.VARCHAR(46).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    private CoreRcComments(Name alias, Table<CoreRcCommentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreRcComments(Name alias, Table<CoreRcCommentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_rc_comments</code> table
     * reference
     */
    public CoreRcComments(String alias) {
        this(DSL.name(alias), CORE_RC_COMMENTS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_rc_comments</code> table
     * reference
     */
    public CoreRcComments(Name alias) {
        this(alias, CORE_RC_COMMENTS);
    }

    /**
     * Create a <code>paradise_forums.core_rc_comments</code> table reference
     */
    public CoreRcComments() {
        this(DSL.name("core_rc_comments"), null);
    }

    public <O extends Record> CoreRcComments(Table<O> child, ForeignKey<O, CoreRcCommentsRecord> key) {
        super(child, key, CORE_RC_COMMENTS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_RC_COMMENTS_IP_ADDRESS, Indexes.CORE_RC_COMMENTS_MEMBER, Indexes.CORE_RC_COMMENTS_REPORT_COMMENTS);
    }

    @Override
    public Identity<CoreRcCommentsRecord, Integer> getIdentity() {
        return (Identity<CoreRcCommentsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreRcCommentsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_RC_COMMENTS_PRIMARY;
    }

    @Override
    public CoreRcComments as(String alias) {
        return new CoreRcComments(DSL.name(alias), this);
    }

    @Override
    public CoreRcComments as(Name alias) {
        return new CoreRcComments(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreRcComments rename(String name) {
        return new CoreRcComments(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreRcComments rename(Name name) {
        return new CoreRcComments(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, String, ULong, Integer, Byte, Integer, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
