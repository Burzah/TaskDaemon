/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreWidgetAreasRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreWidgetAreas extends TableImpl<CoreWidgetAreasRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_widget_areas</code>
     */
    public static final CoreWidgetAreas CORE_WIDGET_AREAS = new CoreWidgetAreas();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreWidgetAreasRecord> getRecordType() {
        return CoreWidgetAreasRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_widget_areas.id</code>. ID Number
     */
    public final TableField<CoreWidgetAreasRecord, ULong> ID = createField(DSL.name("id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "ID Number");

    /**
     * The column <code>paradise_forums.core_widget_areas.app</code>.
     */
    public final TableField<CoreWidgetAreasRecord, String> APP = createField(DSL.name("app"), SQLDataType.VARCHAR(80).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_widget_areas.module</code>.
     */
    public final TableField<CoreWidgetAreasRecord, String> MODULE = createField(DSL.name("module"), SQLDataType.VARCHAR(80).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_widget_areas.controller</code>.
     */
    public final TableField<CoreWidgetAreasRecord, String> CONTROLLER = createField(DSL.name("controller"), SQLDataType.VARCHAR(80).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_widget_areas.widgets</code>.
     */
    public final TableField<CoreWidgetAreasRecord, String> WIDGETS = createField(DSL.name("widgets"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>paradise_forums.core_widget_areas.area</code>.
     */
    public final TableField<CoreWidgetAreasRecord, String> AREA = createField(DSL.name("area"), SQLDataType.VARCHAR(80).nullable(false).defaultValue(DSL.inline("'sidebar'", SQLDataType.VARCHAR)), this, "");

    private CoreWidgetAreas(Name alias, Table<CoreWidgetAreasRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreWidgetAreas(Name alias, Table<CoreWidgetAreasRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_widget_areas</code> table
     * reference
     */
    public CoreWidgetAreas(String alias) {
        this(DSL.name(alias), CORE_WIDGET_AREAS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_widget_areas</code> table
     * reference
     */
    public CoreWidgetAreas(Name alias) {
        this(alias, CORE_WIDGET_AREAS);
    }

    /**
     * Create a <code>paradise_forums.core_widget_areas</code> table reference
     */
    public CoreWidgetAreas() {
        this(DSL.name("core_widget_areas"), null);
    }

    public <O extends Record> CoreWidgetAreas(Table<O> child, ForeignKey<O, CoreWidgetAreasRecord> key) {
        super(child, key, CORE_WIDGET_AREAS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public Identity<CoreWidgetAreasRecord, ULong> getIdentity() {
        return (Identity<CoreWidgetAreasRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreWidgetAreasRecord> getPrimaryKey() {
        return Keys.KEY_CORE_WIDGET_AREAS_PRIMARY;
    }

    @Override
    public List<UniqueKey<CoreWidgetAreasRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_CORE_WIDGET_AREAS_CONTROLLER);
    }

    @Override
    public CoreWidgetAreas as(String alias) {
        return new CoreWidgetAreas(DSL.name(alias), this);
    }

    @Override
    public CoreWidgetAreas as(Name alias) {
        return new CoreWidgetAreas(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreWidgetAreas rename(String name) {
        return new CoreWidgetAreas(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreWidgetAreas rename(Name name) {
        return new CoreWidgetAreas(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<ULong, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
