/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreS3Deletions;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreS3DeletionsRecord extends UpdatableRecordImpl<CoreS3DeletionsRecord> implements Record4<String, Integer, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_s3_deletions.s3_container</code>.
     */
    public void setS3Container(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_s3_deletions.s3_container</code>.
     */
    public String getS3Container() {
        return (String) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_s3_deletions.s3_added</code>.
     */
    public void setS3Added(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_s3_deletions.s3_added</code>.
     */
    public Integer getS3Added() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_s3_deletions.s3_last_cycle</code>.
     */
    public void setS3LastCycle(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_s3_deletions.s3_last_cycle</code>.
     */
    public Integer getS3LastCycle() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_s3_deletions.s3_marker</code>. Last
     * key seen, so it can be used to get the next result set from AWS
     */
    public void setS3Marker(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_s3_deletions.s3_marker</code>. Last
     * key seen, so it can be used to get the next result set from AWS
     */
    public String getS3Marker() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, Integer, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, Integer, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return CoreS3Deletions.CORE_S3_DELETIONS.S3_CONTAINER;
    }

    @Override
    public Field<Integer> field2() {
        return CoreS3Deletions.CORE_S3_DELETIONS.S3_ADDED;
    }

    @Override
    public Field<Integer> field3() {
        return CoreS3Deletions.CORE_S3_DELETIONS.S3_LAST_CYCLE;
    }

    @Override
    public Field<String> field4() {
        return CoreS3Deletions.CORE_S3_DELETIONS.S3_MARKER;
    }

    @Override
    public String component1() {
        return getS3Container();
    }

    @Override
    public Integer component2() {
        return getS3Added();
    }

    @Override
    public Integer component3() {
        return getS3LastCycle();
    }

    @Override
    public String component4() {
        return getS3Marker();
    }

    @Override
    public String value1() {
        return getS3Container();
    }

    @Override
    public Integer value2() {
        return getS3Added();
    }

    @Override
    public Integer value3() {
        return getS3LastCycle();
    }

    @Override
    public String value4() {
        return getS3Marker();
    }

    @Override
    public CoreS3DeletionsRecord value1(String value) {
        setS3Container(value);
        return this;
    }

    @Override
    public CoreS3DeletionsRecord value2(Integer value) {
        setS3Added(value);
        return this;
    }

    @Override
    public CoreS3DeletionsRecord value3(Integer value) {
        setS3LastCycle(value);
        return this;
    }

    @Override
    public CoreS3DeletionsRecord value4(String value) {
        setS3Marker(value);
        return this;
    }

    @Override
    public CoreS3DeletionsRecord values(String value1, Integer value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreS3DeletionsRecord
     */
    public CoreS3DeletionsRecord() {
        super(CoreS3Deletions.CORE_S3_DELETIONS);
    }

    /**
     * Create a detached, initialised CoreS3DeletionsRecord
     */
    public CoreS3DeletionsRecord(String s3Container, Integer s3Added, Integer s3LastCycle, String s3Marker) {
        super(CoreS3Deletions.CORE_S3_DELETIONS);

        setS3Container(s3Container);
        setS3Added(s3Added);
        setS3LastCycle(s3LastCycle);
        setS3Marker(s3Marker);
    }
}
