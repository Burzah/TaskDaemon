/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreReferralsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreReferrals extends TableImpl<CoreReferralsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_referrals</code>
     */
    public static final CoreReferrals CORE_REFERRALS = new CoreReferrals();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreReferralsRecord> getRecordType() {
        return CoreReferralsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_referrals.member_id</code>.
     */
    public final TableField<CoreReferralsRecord, ULong> MEMBER_ID = createField(DSL.name("member_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_referrals.referred_by</code>.
     */
    public final TableField<CoreReferralsRecord, ULong> REFERRED_BY = createField(DSL.name("referred_by"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_referrals.amount</code>.
     */
    public final TableField<CoreReferralsRecord, String> AMOUNT = createField(DSL.name("amount"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    private CoreReferrals(Name alias, Table<CoreReferralsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreReferrals(Name alias, Table<CoreReferralsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_referrals</code> table
     * reference
     */
    public CoreReferrals(String alias) {
        this(DSL.name(alias), CORE_REFERRALS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_referrals</code> table
     * reference
     */
    public CoreReferrals(Name alias) {
        this(alias, CORE_REFERRALS);
    }

    /**
     * Create a <code>paradise_forums.core_referrals</code> table reference
     */
    public CoreReferrals() {
        this(DSL.name("core_referrals"), null);
    }

    public <O extends Record> CoreReferrals(Table<O> child, ForeignKey<O, CoreReferralsRecord> key) {
        super(child, key, CORE_REFERRALS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_REFERRALS_REFERRED_BY);
    }

    @Override
    public UniqueKey<CoreReferralsRecord> getPrimaryKey() {
        return Keys.KEY_CORE_REFERRALS_PRIMARY;
    }

    @Override
    public CoreReferrals as(String alias) {
        return new CoreReferrals(DSL.name(alias), this);
    }

    @Override
    public CoreReferrals as(Name alias) {
        return new CoreReferrals(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreReferrals rename(String name) {
        return new CoreReferrals(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreReferrals rename(Name name) {
        return new CoreReferrals(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<ULong, ULong, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
