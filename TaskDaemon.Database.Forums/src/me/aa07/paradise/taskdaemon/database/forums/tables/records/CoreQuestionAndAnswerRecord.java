/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreQuestionAndAnswer;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreQuestionAndAnswerRecord extends UpdatableRecordImpl<CoreQuestionAndAnswerRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_question_and_answer.qa_id</code>.
     */
    public void setQaId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_question_and_answer.qa_id</code>.
     */
    public Integer getQaId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_question_and_answer.qa_answers</code>.
     */
    public void setQaAnswers(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_question_and_answer.qa_answers</code>.
     */
    public String getQaAnswers() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CoreQuestionAndAnswer.CORE_QUESTION_AND_ANSWER.QA_ID;
    }

    @Override
    public Field<String> field2() {
        return CoreQuestionAndAnswer.CORE_QUESTION_AND_ANSWER.QA_ANSWERS;
    }

    @Override
    public Integer component1() {
        return getQaId();
    }

    @Override
    public String component2() {
        return getQaAnswers();
    }

    @Override
    public Integer value1() {
        return getQaId();
    }

    @Override
    public String value2() {
        return getQaAnswers();
    }

    @Override
    public CoreQuestionAndAnswerRecord value1(Integer value) {
        setQaId(value);
        return this;
    }

    @Override
    public CoreQuestionAndAnswerRecord value2(String value) {
        setQaAnswers(value);
        return this;
    }

    @Override
    public CoreQuestionAndAnswerRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreQuestionAndAnswerRecord
     */
    public CoreQuestionAndAnswerRecord() {
        super(CoreQuestionAndAnswer.CORE_QUESTION_AND_ANSWER);
    }

    /**
     * Create a detached, initialised CoreQuestionAndAnswerRecord
     */
    public CoreQuestionAndAnswerRecord(Integer qaId, String qaAnswers) {
        super(CoreQuestionAndAnswer.CORE_QUESTION_AND_ANSWER);

        setQaId(qaId);
        setQaAnswers(qaAnswers);
    }
}
