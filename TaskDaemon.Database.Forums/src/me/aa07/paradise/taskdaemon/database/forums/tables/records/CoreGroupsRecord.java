/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreGroups;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreGroupsRecord extends UpdatableRecordImpl<CoreGroupsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_groups.g_id</code>.
     */
    public void setGId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_id</code>.
     */
    public UInteger getGId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_view_board</code>.
     */
    public void setGViewBoard(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_view_board</code>.
     */
    public Byte getGViewBoard() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_mem_info</code>.
     */
    public void setGMemInfo(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_mem_info</code>.
     */
    public Byte getGMemInfo() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_use_search</code>.
     */
    public void setGUseSearch(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_use_search</code>.
     */
    public Byte getGUseSearch() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_edit_profile</code>.
     */
    public void setGEditProfile(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_edit_profile</code>.
     */
    public Byte getGEditProfile() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_edit_posts</code>.
     */
    public void setGEditPosts(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_edit_posts</code>.
     */
    public String getGEditPosts() {
        return (String) get(5);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_delete_own_posts</code>.
     */
    public void setGDeleteOwnPosts(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_delete_own_posts</code>.
     */
    public String getGDeleteOwnPosts() {
        return (String) get(6);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_use_pm</code>.
     */
    public void setGUsePm(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_use_pm</code>.
     */
    public Byte getGUsePm() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_append_edit</code>.
     */
    public void setGAppendEdit(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_append_edit</code>.
     */
    public Byte getGAppendEdit() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_access_offline</code>.
     */
    public void setGAccessOffline(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_access_offline</code>.
     */
    public Byte getGAccessOffline() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_avoid_q</code>.
     */
    public void setGAvoidQ(Byte value) {
        set(10, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_avoid_q</code>.
     */
    public Byte getGAvoidQ() {
        return (Byte) get(10);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_avoid_flood</code>.
     */
    public void setGAvoidFlood(Byte value) {
        set(11, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_avoid_flood</code>.
     */
    public Byte getGAvoidFlood() {
        return (Byte) get(11);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_icon</code>.
     */
    public void setGIcon(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_icon</code>.
     */
    public String getGIcon() {
        return (String) get(12);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_attach_max</code>.
     */
    public void setGAttachMax(Long value) {
        set(13, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_attach_max</code>.
     */
    public Long getGAttachMax() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.prefix</code>.
     */
    public void setPrefix(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.prefix</code>.
     */
    public String getPrefix() {
        return (String) get(14);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.suffix</code>.
     */
    public void setSuffix(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.suffix</code>.
     */
    public String getSuffix() {
        return (String) get(15);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_max_messages</code>.
     */
    public void setGMaxMessages(Integer value) {
        set(16, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_max_messages</code>.
     */
    public Integer getGMaxMessages() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_max_mass_pm</code>.
     */
    public void setGMaxMassPm(Integer value) {
        set(17, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_max_mass_pm</code>.
     */
    public Integer getGMaxMassPm() {
        return (Integer) get(17);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_search_flood</code>.
     */
    public void setGSearchFlood(Integer value) {
        set(18, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_search_flood</code>.
     */
    public Integer getGSearchFlood() {
        return (Integer) get(18);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_edit_cutoff</code>.
     */
    public void setGEditCutoff(Integer value) {
        set(19, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_edit_cutoff</code>.
     */
    public Integer getGEditCutoff() {
        return (Integer) get(19);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_photo_max_vars</code>.
     */
    public void setGPhotoMaxVars(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_photo_max_vars</code>.
     */
    public String getGPhotoMaxVars() {
        return (String) get(20);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_dohtml</code>.
     */
    public void setGDohtml(Byte value) {
        set(21, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_dohtml</code>.
     */
    public Byte getGDohtml() {
        return (Byte) get(21);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_bypass_badwords</code>.
     */
    public void setGBypassBadwords(Byte value) {
        set(22, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_bypass_badwords</code>.
     */
    public Byte getGBypassBadwords() {
        return (Byte) get(22);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_can_msg_attach</code>.
     */
    public void setGCanMsgAttach(Byte value) {
        set(23, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_can_msg_attach</code>.
     */
    public Byte getGCanMsgAttach() {
        return (Byte) get(23);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_attach_per_post</code>.
     */
    public void setGAttachPerPost(Integer value) {
        set(24, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_attach_per_post</code>.
     */
    public Integer getGAttachPerPost() {
        return (Integer) get(24);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_dname_changes</code>.
     */
    public void setGDnameChanges(Integer value) {
        set(25, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_dname_changes</code>.
     */
    public Integer getGDnameChanges() {
        return (Integer) get(25);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_dname_date</code>.
     */
    public void setGDnameDate(Integer value) {
        set(26, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_dname_date</code>.
     */
    public Integer getGDnameDate() {
        return (Integer) get(26);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_mod_preview</code>.
     */
    public void setGModPreview(UByte value) {
        set(27, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_mod_preview</code>.
     */
    public UByte getGModPreview() {
        return (UByte) get(27);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_rep_max_positive</code>.
     */
    public void setGRepMaxPositive(Integer value) {
        set(28, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_rep_max_positive</code>.
     */
    public Integer getGRepMaxPositive() {
        return (Integer) get(28);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_rep_max_negative</code>.
     */
    public void setGRepMaxNegative(UInteger value) {
        set(29, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_rep_max_negative</code>.
     */
    public UInteger getGRepMaxNegative() {
        return (UInteger) get(29);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_signature_limits</code>.
     */
    public void setGSignatureLimits(String value) {
        set(30, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_signature_limits</code>.
     */
    public String getGSignatureLimits() {
        return (String) get(30);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_hide_online_list</code>.
     */
    public void setGHideOnlineList(Byte value) {
        set(31, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_hide_online_list</code>.
     */
    public Byte getGHideOnlineList() {
        return (Byte) get(31);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_bitoptions</code>.
     */
    public void setGBitoptions(UInteger value) {
        set(32, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_bitoptions</code>.
     */
    public UInteger getGBitoptions() {
        return (UInteger) get(32);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_pm_perday</code>.
     */
    public void setGPmPerday(Short value) {
        set(33, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_pm_perday</code>.
     */
    public Short getGPmPerday() {
        return (Short) get(33);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_mod_post_unit</code>.
     */
    public void setGModPostUnit(UInteger value) {
        set(34, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_mod_post_unit</code>.
     */
    public UInteger getGModPostUnit() {
        return (UInteger) get(34);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_ppd_limit</code>.
     */
    public void setGPpdLimit(UInteger value) {
        set(35, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_ppd_limit</code>.
     */
    public UInteger getGPpdLimit() {
        return (UInteger) get(35);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_ppd_unit</code>.
     */
    public void setGPpdUnit(UInteger value) {
        set(36, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_ppd_unit</code>.
     */
    public UInteger getGPpdUnit() {
        return (UInteger) get(36);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_displayname_unit</code>.
     */
    public void setGDisplaynameUnit(UInteger value) {
        set(37, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_displayname_unit</code>.
     */
    public UInteger getGDisplaynameUnit() {
        return (UInteger) get(37);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_sig_unit</code>.
     */
    public void setGSigUnit(UInteger value) {
        set(38, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_sig_unit</code>.
     */
    public UInteger getGSigUnit() {
        return (UInteger) get(38);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_pm_flood_mins</code>.
     */
    public void setGPmFloodMins(Integer value) {
        set(39, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_pm_flood_mins</code>.
     */
    public Integer getGPmFloodMins() {
        return (Integer) get(39);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_max_bgimg_upload</code>.
     */
    public void setGMaxBgimgUpload(Integer value) {
        set(40, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_max_bgimg_upload</code>.
     */
    public Integer getGMaxBgimgUpload() {
        return (Integer) get(40);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_post_polls</code>. Can
     * create polls?
     */
    public void setGPostPolls(UByte value) {
        set(41, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_post_polls</code>. Can
     * create polls?
     */
    public UByte getGPostPolls() {
        return (UByte) get(41);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_vote_polls</code>. Can
     * vote in polls?
     */
    public void setGVotePolls(UByte value) {
        set(42, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_vote_polls</code>. Can
     * vote in polls?
     */
    public UByte getGVotePolls() {
        return (UByte) get(42);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_topic_rate_setting</code>.
     */
    public void setGTopicRateSetting(Short value) {
        set(43, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_topic_rate_setting</code>.
     */
    public Short getGTopicRateSetting() {
        return (Short) get(43);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_bitoptions2</code>.
     */
    public void setGBitoptions2(UInteger value) {
        set(44, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_bitoptions2</code>.
     */
    public UInteger getGBitoptions2() {
        return (UInteger) get(44);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_groups.g_upload_animated_photos</code>.
     */
    public void setGUploadAnimatedPhotos(UByte value) {
        set(45, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_groups.g_upload_animated_photos</code>.
     */
    public UByte getGUploadAnimatedPhotos() {
        return (UByte) get(45);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_groups.g_view_displaynamehistory</code>.
     */
    public void setGViewDisplaynamehistory(Byte value) {
        set(46, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_groups.g_view_displaynamehistory</code>.
     */
    public Byte getGViewDisplaynamehistory() {
        return (Byte) get(46);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_hide_own_posts</code>.
     */
    public void setGHideOwnPosts(String value) {
        set(47, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_hide_own_posts</code>.
     */
    public String getGHideOwnPosts() {
        return (String) get(47);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_lock_unlock_own</code>.
     */
    public void setGLockUnlockOwn(String value) {
        set(48, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_lock_unlock_own</code>.
     */
    public String getGLockUnlockOwn() {
        return (String) get(48);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_can_report</code>.
     */
    public void setGCanReport(String value) {
        set(49, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_can_report</code>.
     */
    public String getGCanReport() {
        return (String) get(49);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_create_clubs</code>. The
     * types of club this group can create
     */
    public void setGCreateClubs(String value) {
        set(50, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_create_clubs</code>. The
     * types of club this group can create
     */
    public String getGCreateClubs() {
        return (String) get(50);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_club_allowed_nodes</code>.
     * Node types that can be created in clubs, or * for all
     */
    public void setGClubAllowedNodes(String value) {
        set(51, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_club_allowed_nodes</code>.
     * Node types that can be created in clubs, or * for all
     */
    public String getGClubAllowedNodes() {
        return (String) get(51);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_close_polls</code>. Can
     * close own polls?
     */
    public void setGClosePolls(Byte value) {
        set(52, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_close_polls</code>. Can
     * close own polls?
     */
    public Byte getGClosePolls() {
        return (Byte) get(52);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_promote_exclude</code>.
     * Exclude members in this group from group promotions
     */
    public void setGPromoteExclude(Byte value) {
        set(53, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_promote_exclude</code>.
     * Exclude members in this group from group promotions
     */
    public Byte getGPromoteExclude() {
        return (Byte) get(53);
    }

    /**
     * Setter for <code>paradise_forums.core_groups.g_club_limit</code>. Maximum
     * number of clubs, NULL for unlimited
     */
    public void setGClubLimit(UInteger value) {
        set(54, value);
    }

    /**
     * Getter for <code>paradise_forums.core_groups.g_club_limit</code>. Maximum
     * number of clubs, NULL for unlimited
     */
    public UInteger getGClubLimit() {
        return (UInteger) get(54);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreGroupsRecord
     */
    public CoreGroupsRecord() {
        super(CoreGroups.CORE_GROUPS);
    }

    /**
     * Create a detached, initialised CoreGroupsRecord
     */
    public CoreGroupsRecord(UInteger gId, Byte gViewBoard, Byte gMemInfo, Byte gUseSearch, Byte gEditProfile, String gEditPosts, String gDeleteOwnPosts, Byte gUsePm, Byte gAppendEdit, Byte gAccessOffline, Byte gAvoidQ, Byte gAvoidFlood, String gIcon, Long gAttachMax, String prefix, String suffix, Integer gMaxMessages, Integer gMaxMassPm, Integer gSearchFlood, Integer gEditCutoff, String gPhotoMaxVars, Byte gDohtml, Byte gBypassBadwords, Byte gCanMsgAttach, Integer gAttachPerPost, Integer gDnameChanges, Integer gDnameDate, UByte gModPreview, Integer gRepMaxPositive, UInteger gRepMaxNegative, String gSignatureLimits, Byte gHideOnlineList, UInteger gBitoptions, Short gPmPerday, UInteger gModPostUnit, UInteger gPpdLimit, UInteger gPpdUnit, UInteger gDisplaynameUnit, UInteger gSigUnit, Integer gPmFloodMins, Integer gMaxBgimgUpload, UByte gPostPolls, UByte gVotePolls, Short gTopicRateSetting, UInteger gBitoptions2, UByte gUploadAnimatedPhotos, Byte gViewDisplaynamehistory, String gHideOwnPosts, String gLockUnlockOwn, String gCanReport, String gCreateClubs, String gClubAllowedNodes, Byte gClosePolls, Byte gPromoteExclude, UInteger gClubLimit) {
        super(CoreGroups.CORE_GROUPS);

        setGId(gId);
        setGViewBoard(gViewBoard);
        setGMemInfo(gMemInfo);
        setGUseSearch(gUseSearch);
        setGEditProfile(gEditProfile);
        setGEditPosts(gEditPosts);
        setGDeleteOwnPosts(gDeleteOwnPosts);
        setGUsePm(gUsePm);
        setGAppendEdit(gAppendEdit);
        setGAccessOffline(gAccessOffline);
        setGAvoidQ(gAvoidQ);
        setGAvoidFlood(gAvoidFlood);
        setGIcon(gIcon);
        setGAttachMax(gAttachMax);
        setPrefix(prefix);
        setSuffix(suffix);
        setGMaxMessages(gMaxMessages);
        setGMaxMassPm(gMaxMassPm);
        setGSearchFlood(gSearchFlood);
        setGEditCutoff(gEditCutoff);
        setGPhotoMaxVars(gPhotoMaxVars);
        setGDohtml(gDohtml);
        setGBypassBadwords(gBypassBadwords);
        setGCanMsgAttach(gCanMsgAttach);
        setGAttachPerPost(gAttachPerPost);
        setGDnameChanges(gDnameChanges);
        setGDnameDate(gDnameDate);
        setGModPreview(gModPreview);
        setGRepMaxPositive(gRepMaxPositive);
        setGRepMaxNegative(gRepMaxNegative);
        setGSignatureLimits(gSignatureLimits);
        setGHideOnlineList(gHideOnlineList);
        setGBitoptions(gBitoptions);
        setGPmPerday(gPmPerday);
        setGModPostUnit(gModPostUnit);
        setGPpdLimit(gPpdLimit);
        setGPpdUnit(gPpdUnit);
        setGDisplaynameUnit(gDisplaynameUnit);
        setGSigUnit(gSigUnit);
        setGPmFloodMins(gPmFloodMins);
        setGMaxBgimgUpload(gMaxBgimgUpload);
        setGPostPolls(gPostPolls);
        setGVotePolls(gVotePolls);
        setGTopicRateSetting(gTopicRateSetting);
        setGBitoptions2(gBitoptions2);
        setGUploadAnimatedPhotos(gUploadAnimatedPhotos);
        setGViewDisplaynamehistory(gViewDisplaynamehistory);
        setGHideOwnPosts(gHideOwnPosts);
        setGLockUnlockOwn(gLockUnlockOwn);
        setGCanReport(gCanReport);
        setGCreateClubs(gCreateClubs);
        setGClubAllowedNodes(gClubAllowedNodes);
        setGClosePolls(gClosePolls);
        setGPromoteExclude(gPromoteExclude);
        setGClubLimit(gClubLimit);
    }
}
