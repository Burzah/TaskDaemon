/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSocialPromoteRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row19;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreSocialPromote extends TableImpl<CoreSocialPromoteRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_social_promote</code>
     */
    public static final CoreSocialPromote CORE_SOCIAL_PROMOTE = new CoreSocialPromote();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreSocialPromoteRecord> getRecordType() {
        return CoreSocialPromoteRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_social_promote.promote_id</code>.
     */
    public final TableField<CoreSocialPromoteRecord, Long> PROMOTE_ID = createField(DSL.name("promote_id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.core_social_promote.promote_class</code>. The
     * content class
     */
    public final TableField<CoreSocialPromoteRecord, String> PROMOTE_CLASS = createField(DSL.name("promote_class"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "The content class");

    /**
     * The column
     * <code>paradise_forums.core_social_promote.promote_class_id</code>. The
     * main ID for the content item/comment
     */
    public final TableField<CoreSocialPromoteRecord, Integer> PROMOTE_CLASS_ID = createField(DSL.name("promote_class_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "The main ID for the content item/comment");

    /**
     * The column <code>paradise_forums.core_social_promote.promote_text</code>.
     * JSON array of text for all services
     */
    public final TableField<CoreSocialPromoteRecord, String> PROMOTE_TEXT = createField(DSL.name("promote_text"), SQLDataType.CLOB.nullable(false), this, "JSON array of text for all services");

    /**
     * The column
     * <code>paradise_forums.core_social_promote.promote_short_link</code>.
     */
    public final TableField<CoreSocialPromoteRecord, String> PROMOTE_SHORT_LINK = createField(DSL.name("promote_short_link"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column
     * <code>paradise_forums.core_social_promote.promote_media</code>. JSON
     * array of custom uploads
     */
    public final TableField<CoreSocialPromoteRecord, String> PROMOTE_MEDIA = createField(DSL.name("promote_media"), SQLDataType.CLOB.nullable(false), this, "JSON array of custom uploads");

    /**
     * The column
     * <code>paradise_forums.core_social_promote.promote_added</code>. The date
     * the item was authored or last edited
     */
    public final TableField<CoreSocialPromoteRecord, Integer> PROMOTE_ADDED = createField(DSL.name("promote_added"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "The date the item was authored or last edited");

    /**
     * The column
     * <code>paradise_forums.core_social_promote.promote_scheduled</code>. The
     * date the item is to be sent out
     */
    public final TableField<CoreSocialPromoteRecord, Integer> PROMOTE_SCHEDULED = createField(DSL.name("promote_scheduled"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "The date the item is to be sent out");

    /**
     * The column <code>paradise_forums.core_social_promote.promote_sent</code>.
     * The date the item was sent out
     */
    public final TableField<CoreSocialPromoteRecord, Integer> PROMOTE_SENT = createField(DSL.name("promote_sent"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "The date the item was sent out");

    /**
     * The column
     * <code>paradise_forums.core_social_promote.promote_added_by</code>.
     */
    public final TableField<CoreSocialPromoteRecord, ULong> PROMOTE_ADDED_BY = createField(DSL.name("promote_added_by"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_social_promote.promote_schedule_auto</code>. A
     * flag to note if this has been auto scheduled (1) or manually scheduled
     * (0)
     */
    public final TableField<CoreSocialPromoteRecord, UInteger> PROMOTE_SCHEDULE_AUTO = createField(DSL.name("promote_schedule_auto"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "A flag to note if this has been auto scheduled (1) or manually scheduled (0)");

    /**
     * The column
     * <code>paradise_forums.core_social_promote.promote_share_to</code>. JSON
     * array of share service names (facebook, twitter)
     */
    public final TableField<CoreSocialPromoteRecord, String> PROMOTE_SHARE_TO = createField(DSL.name("promote_share_to"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "JSON array of share service names (facebook, twitter)");

    /**
     * The column
     * <code>paradise_forums.core_social_promote.promote_images</code>. JSON
     * array of file locations (container/file.jpg)
     */
    public final TableField<CoreSocialPromoteRecord, String> PROMOTE_IMAGES = createField(DSL.name("promote_images"), SQLDataType.CLOB.nullable(false), this, "JSON array of file locations (container/file.jpg)");

    /**
     * The column
     * <code>paradise_forums.core_social_promote.promote_returned</code>. JSON
     * array of data returned from the post
     */
    public final TableField<CoreSocialPromoteRecord, String> PROMOTE_RETURNED = createField(DSL.name("promote_returned"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "JSON array of data returned from the post");

    /**
     * The column
     * <code>paradise_forums.core_social_promote.promote_failed</code>. The
     * number of times this has failed to send
     */
    public final TableField<CoreSocialPromoteRecord, UInteger> PROMOTE_FAILED = createField(DSL.name("promote_failed"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "The number of times this has failed to send");

    /**
     * The column
     * <code>paradise_forums.core_social_promote.promote_internal</code>. Has
     * this been shared internally?
     */
    public final TableField<CoreSocialPromoteRecord, UByte> PROMOTE_INTERNAL = createField(DSL.name("promote_internal"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "Has this been shared internally?");

    /**
     * The column
     * <code>paradise_forums.core_social_promote.promote_form_data</code>.
     */
    public final TableField<CoreSocialPromoteRecord, String> PROMOTE_FORM_DATA = createField(DSL.name("promote_form_data"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>paradise_forums.core_social_promote.promote_hide</code>.
     * Allows rows to not be shown in our picks
     */
    public final TableField<CoreSocialPromoteRecord, UByte> PROMOTE_HIDE = createField(DSL.name("promote_hide"), SQLDataType.TINYINTUNSIGNED.defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "Allows rows to not be shown in our picks");

    /**
     * The column
     * <code>paradise_forums.core_social_promote.promote_author_id</code>.
     */
    public final TableField<CoreSocialPromoteRecord, UInteger> PROMOTE_AUTHOR_ID = createField(DSL.name("promote_author_id"), SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    private CoreSocialPromote(Name alias, Table<CoreSocialPromoteRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreSocialPromote(Name alias, Table<CoreSocialPromoteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_social_promote</code> table
     * reference
     */
    public CoreSocialPromote(String alias) {
        this(DSL.name(alias), CORE_SOCIAL_PROMOTE);
    }

    /**
     * Create an aliased <code>paradise_forums.core_social_promote</code> table
     * reference
     */
    public CoreSocialPromote(Name alias) {
        this(alias, CORE_SOCIAL_PROMOTE);
    }

    /**
     * Create a <code>paradise_forums.core_social_promote</code> table reference
     */
    public CoreSocialPromote() {
        this(DSL.name("core_social_promote"), null);
    }

    public <O extends Record> CoreSocialPromote(Table<O> child, ForeignKey<O, CoreSocialPromoteRecord> key) {
        super(child, key, CORE_SOCIAL_PROMOTE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_SOCIAL_PROMOTE_OUR_PICKS, Indexes.CORE_SOCIAL_PROMOTE_PROMOTE_ACHIEVEMENTS, Indexes.CORE_SOCIAL_PROMOTE_PROMOTE_LOOKUP, Indexes.CORE_SOCIAL_PROMOTE_PROMOTE_SENT);
    }

    @Override
    public Identity<CoreSocialPromoteRecord, Long> getIdentity() {
        return (Identity<CoreSocialPromoteRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreSocialPromoteRecord> getPrimaryKey() {
        return Keys.KEY_CORE_SOCIAL_PROMOTE_PRIMARY;
    }

    @Override
    public CoreSocialPromote as(String alias) {
        return new CoreSocialPromote(DSL.name(alias), this);
    }

    @Override
    public CoreSocialPromote as(Name alias) {
        return new CoreSocialPromote(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreSocialPromote rename(String name) {
        return new CoreSocialPromote(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreSocialPromote rename(Name name) {
        return new CoreSocialPromote(name, null);
    }

    // -------------------------------------------------------------------------
    // Row19 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row19<Long, String, Integer, String, String, String, Integer, Integer, Integer, ULong, UInteger, String, String, String, UInteger, UByte, String, UByte, UInteger> fieldsRow() {
        return (Row19) super.fieldsRow();
    }
}
