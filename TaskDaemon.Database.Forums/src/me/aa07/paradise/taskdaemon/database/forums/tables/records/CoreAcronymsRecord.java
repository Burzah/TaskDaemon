/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.enums.CoreAcronymsAType;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreAcronyms;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreAcronymsRecord extends UpdatableRecordImpl<CoreAcronymsRecord> implements Record5<UInteger, String, String, Byte, CoreAcronymsAType> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_acronyms.a_id</code>.
     */
    public void setAId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_acronyms.a_id</code>.
     */
    public UInteger getAId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_acronyms.a_short</code>.
     */
    public void setAShort(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_acronyms.a_short</code>.
     */
    public String getAShort() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_acronyms.a_long</code>.
     */
    public void setALong(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_acronyms.a_long</code>.
     */
    public String getALong() {
        return (String) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_acronyms.a_casesensitive</code>.
     */
    public void setACasesensitive(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_acronyms.a_casesensitive</code>.
     */
    public Byte getACasesensitive() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_acronyms.a_type</code>.
     */
    public void setAType(CoreAcronymsAType value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_acronyms.a_type</code>.
     */
    public CoreAcronymsAType getAType() {
        return (CoreAcronymsAType) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UInteger, String, String, Byte, CoreAcronymsAType> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UInteger, String, String, Byte, CoreAcronymsAType> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return CoreAcronyms.CORE_ACRONYMS.A_ID;
    }

    @Override
    public Field<String> field2() {
        return CoreAcronyms.CORE_ACRONYMS.A_SHORT;
    }

    @Override
    public Field<String> field3() {
        return CoreAcronyms.CORE_ACRONYMS.A_LONG;
    }

    @Override
    public Field<Byte> field4() {
        return CoreAcronyms.CORE_ACRONYMS.A_CASESENSITIVE;
    }

    @Override
    public Field<CoreAcronymsAType> field5() {
        return CoreAcronyms.CORE_ACRONYMS.A_TYPE;
    }

    @Override
    public UInteger component1() {
        return getAId();
    }

    @Override
    public String component2() {
        return getAShort();
    }

    @Override
    public String component3() {
        return getALong();
    }

    @Override
    public Byte component4() {
        return getACasesensitive();
    }

    @Override
    public CoreAcronymsAType component5() {
        return getAType();
    }

    @Override
    public UInteger value1() {
        return getAId();
    }

    @Override
    public String value2() {
        return getAShort();
    }

    @Override
    public String value3() {
        return getALong();
    }

    @Override
    public Byte value4() {
        return getACasesensitive();
    }

    @Override
    public CoreAcronymsAType value5() {
        return getAType();
    }

    @Override
    public CoreAcronymsRecord value1(UInteger value) {
        setAId(value);
        return this;
    }

    @Override
    public CoreAcronymsRecord value2(String value) {
        setAShort(value);
        return this;
    }

    @Override
    public CoreAcronymsRecord value3(String value) {
        setALong(value);
        return this;
    }

    @Override
    public CoreAcronymsRecord value4(Byte value) {
        setACasesensitive(value);
        return this;
    }

    @Override
    public CoreAcronymsRecord value5(CoreAcronymsAType value) {
        setAType(value);
        return this;
    }

    @Override
    public CoreAcronymsRecord values(UInteger value1, String value2, String value3, Byte value4, CoreAcronymsAType value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreAcronymsRecord
     */
    public CoreAcronymsRecord() {
        super(CoreAcronyms.CORE_ACRONYMS);
    }

    /**
     * Create a detached, initialised CoreAcronymsRecord
     */
    public CoreAcronymsRecord(UInteger aId, String aShort, String aLong, Byte aCasesensitive, CoreAcronymsAType aType) {
        super(CoreAcronyms.CORE_ACRONYMS);

        setAId(aId);
        setAShort(aShort);
        setALong(aLong);
        setACasesensitive(aCasesensitive);
        setAType(aType);
    }
}
