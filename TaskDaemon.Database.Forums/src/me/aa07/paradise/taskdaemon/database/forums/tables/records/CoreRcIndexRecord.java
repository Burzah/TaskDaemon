/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.enums.CoreRcIndexStatus;
import me.aa07.paradise.taskdaemon.database.forums.tables.CoreRcIndex;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreRcIndexRecord extends UpdatableRecordImpl<CoreRcIndexRecord> implements Record14<ULong, String, ULong, ULong, CoreRcIndexStatus, UInteger, UInteger, ULong, Integer, Integer, ULong, UInteger, UInteger, UInteger> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_rc_index.id</code>. ID Number
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_rc_index.id</code>. ID Number
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_rc_index.class</code>. Indicates
     * the type of content that was reported
     */
    public void setClass_(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_rc_index.class</code>. Indicates
     * the type of content that was reported
     */
    public String getClass_() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_rc_index.content_id</code>. The ID
     * number of the content that was reported.
     */
    public void setContentId(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_rc_index.content_id</code>. The ID
     * number of the content that was reported.
     */
    public ULong getContentId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_rc_index.perm_id</code>. The ID
     * number from the core_permission_index table which indicates who can view
     * this report.
     */
    public void setPermId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_rc_index.perm_id</code>. The ID
     * number from the core_permission_index table which indicates who can view
     * this report.
     */
    public ULong getPermId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_rc_index.status</code>. 1 = New
     * report. 2 = Under Review. 3 = Complete. 4 = Closed.
     */
    public void setStatus(CoreRcIndexStatus value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_rc_index.status</code>. 1 = New
     * report. 2 = Under Review. 3 = Complete. 4 = Closed.
     */
    public CoreRcIndexStatus getStatus() {
        return (CoreRcIndexStatus) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_rc_index.num_reports</code>. Number
     * of reports received.
     */
    public void setNumReports(UInteger value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_rc_index.num_reports</code>. Number
     * of reports received.
     */
    public UInteger getNumReports() {
        return (UInteger) get(5);
    }

    /**
     * Setter for <code>paradise_forums.core_rc_index.num_comments</code>.
     * Number of comments moderators have made on this report.
     */
    public void setNumComments(UInteger value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.core_rc_index.num_comments</code>.
     * Number of comments moderators have made on this report.
     */
    public UInteger getNumComments() {
        return (UInteger) get(6);
    }

    /**
     * Setter for <code>paradise_forums.core_rc_index.first_report_by</code>.
     * The ID number of the member who submitted the first report.
     */
    public void setFirstReportBy(ULong value) {
        set(7, value);
    }

    /**
     * Getter for <code>paradise_forums.core_rc_index.first_report_by</code>.
     * The ID number of the member who submitted the first report.
     */
    public ULong getFirstReportBy() {
        return (ULong) get(7);
    }

    /**
     * Setter for <code>paradise_forums.core_rc_index.first_report_date</code>.
     * Unix timestamp of when the first report was submitted.
     */
    public void setFirstReportDate(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>paradise_forums.core_rc_index.first_report_date</code>.
     * Unix timestamp of when the first report was submitted.
     */
    public Integer getFirstReportDate() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>paradise_forums.core_rc_index.last_updated</code>. Unix
     * timestamp of the last time a comment or report was made (for read/unread
     * marking)
     */
    public void setLastUpdated(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>paradise_forums.core_rc_index.last_updated</code>. Unix
     * timestamp of the last time a comment or report was made (for read/unread
     * marking)
     */
    public Integer getLastUpdated() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>paradise_forums.core_rc_index.author</code>. The ID
     * number of the user who submitted the reported content.
     */
    public void setAuthor(ULong value) {
        set(10, value);
    }

    /**
     * Getter for <code>paradise_forums.core_rc_index.author</code>. The ID
     * number of the user who submitted the reported content.
     */
    public ULong getAuthor() {
        return (ULong) get(10);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_rc_index.auto_moderation_exempt</code>.
     */
    public void setAutoModerationExempt(UInteger value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_rc_index.auto_moderation_exempt</code>.
     */
    public UInteger getAutoModerationExempt() {
        return (UInteger) get(11);
    }

    /**
     * Setter for <code>paradise_forums.core_rc_index.item_id</code>.
     */
    public void setItemId(UInteger value) {
        set(12, value);
    }

    /**
     * Getter for <code>paradise_forums.core_rc_index.item_id</code>.
     */
    public UInteger getItemId() {
        return (UInteger) get(12);
    }

    /**
     * Setter for <code>paradise_forums.core_rc_index.node_id</code>.
     */
    public void setNodeId(UInteger value) {
        set(13, value);
    }

    /**
     * Getter for <code>paradise_forums.core_rc_index.node_id</code>.
     */
    public UInteger getNodeId() {
        return (UInteger) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<ULong, String, ULong, ULong, CoreRcIndexStatus, UInteger, UInteger, ULong, Integer, Integer, ULong, UInteger, UInteger, UInteger> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<ULong, String, ULong, ULong, CoreRcIndexStatus, UInteger, UInteger, ULong, Integer, Integer, ULong, UInteger, UInteger, UInteger> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CoreRcIndex.CORE_RC_INDEX.ID;
    }

    @Override
    public Field<String> field2() {
        return CoreRcIndex.CORE_RC_INDEX.CLASS;
    }

    @Override
    public Field<ULong> field3() {
        return CoreRcIndex.CORE_RC_INDEX.CONTENT_ID;
    }

    @Override
    public Field<ULong> field4() {
        return CoreRcIndex.CORE_RC_INDEX.PERM_ID;
    }

    @Override
    public Field<CoreRcIndexStatus> field5() {
        return CoreRcIndex.CORE_RC_INDEX.STATUS;
    }

    @Override
    public Field<UInteger> field6() {
        return CoreRcIndex.CORE_RC_INDEX.NUM_REPORTS;
    }

    @Override
    public Field<UInteger> field7() {
        return CoreRcIndex.CORE_RC_INDEX.NUM_COMMENTS;
    }

    @Override
    public Field<ULong> field8() {
        return CoreRcIndex.CORE_RC_INDEX.FIRST_REPORT_BY;
    }

    @Override
    public Field<Integer> field9() {
        return CoreRcIndex.CORE_RC_INDEX.FIRST_REPORT_DATE;
    }

    @Override
    public Field<Integer> field10() {
        return CoreRcIndex.CORE_RC_INDEX.LAST_UPDATED;
    }

    @Override
    public Field<ULong> field11() {
        return CoreRcIndex.CORE_RC_INDEX.AUTHOR;
    }

    @Override
    public Field<UInteger> field12() {
        return CoreRcIndex.CORE_RC_INDEX.AUTO_MODERATION_EXEMPT;
    }

    @Override
    public Field<UInteger> field13() {
        return CoreRcIndex.CORE_RC_INDEX.ITEM_ID;
    }

    @Override
    public Field<UInteger> field14() {
        return CoreRcIndex.CORE_RC_INDEX.NODE_ID;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getClass_();
    }

    @Override
    public ULong component3() {
        return getContentId();
    }

    @Override
    public ULong component4() {
        return getPermId();
    }

    @Override
    public CoreRcIndexStatus component5() {
        return getStatus();
    }

    @Override
    public UInteger component6() {
        return getNumReports();
    }

    @Override
    public UInteger component7() {
        return getNumComments();
    }

    @Override
    public ULong component8() {
        return getFirstReportBy();
    }

    @Override
    public Integer component9() {
        return getFirstReportDate();
    }

    @Override
    public Integer component10() {
        return getLastUpdated();
    }

    @Override
    public ULong component11() {
        return getAuthor();
    }

    @Override
    public UInteger component12() {
        return getAutoModerationExempt();
    }

    @Override
    public UInteger component13() {
        return getItemId();
    }

    @Override
    public UInteger component14() {
        return getNodeId();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getClass_();
    }

    @Override
    public ULong value3() {
        return getContentId();
    }

    @Override
    public ULong value4() {
        return getPermId();
    }

    @Override
    public CoreRcIndexStatus value5() {
        return getStatus();
    }

    @Override
    public UInteger value6() {
        return getNumReports();
    }

    @Override
    public UInteger value7() {
        return getNumComments();
    }

    @Override
    public ULong value8() {
        return getFirstReportBy();
    }

    @Override
    public Integer value9() {
        return getFirstReportDate();
    }

    @Override
    public Integer value10() {
        return getLastUpdated();
    }

    @Override
    public ULong value11() {
        return getAuthor();
    }

    @Override
    public UInteger value12() {
        return getAutoModerationExempt();
    }

    @Override
    public UInteger value13() {
        return getItemId();
    }

    @Override
    public UInteger value14() {
        return getNodeId();
    }

    @Override
    public CoreRcIndexRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public CoreRcIndexRecord value2(String value) {
        setClass_(value);
        return this;
    }

    @Override
    public CoreRcIndexRecord value3(ULong value) {
        setContentId(value);
        return this;
    }

    @Override
    public CoreRcIndexRecord value4(ULong value) {
        setPermId(value);
        return this;
    }

    @Override
    public CoreRcIndexRecord value5(CoreRcIndexStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public CoreRcIndexRecord value6(UInteger value) {
        setNumReports(value);
        return this;
    }

    @Override
    public CoreRcIndexRecord value7(UInteger value) {
        setNumComments(value);
        return this;
    }

    @Override
    public CoreRcIndexRecord value8(ULong value) {
        setFirstReportBy(value);
        return this;
    }

    @Override
    public CoreRcIndexRecord value9(Integer value) {
        setFirstReportDate(value);
        return this;
    }

    @Override
    public CoreRcIndexRecord value10(Integer value) {
        setLastUpdated(value);
        return this;
    }

    @Override
    public CoreRcIndexRecord value11(ULong value) {
        setAuthor(value);
        return this;
    }

    @Override
    public CoreRcIndexRecord value12(UInteger value) {
        setAutoModerationExempt(value);
        return this;
    }

    @Override
    public CoreRcIndexRecord value13(UInteger value) {
        setItemId(value);
        return this;
    }

    @Override
    public CoreRcIndexRecord value14(UInteger value) {
        setNodeId(value);
        return this;
    }

    @Override
    public CoreRcIndexRecord values(ULong value1, String value2, ULong value3, ULong value4, CoreRcIndexStatus value5, UInteger value6, UInteger value7, ULong value8, Integer value9, Integer value10, ULong value11, UInteger value12, UInteger value13, UInteger value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreRcIndexRecord
     */
    public CoreRcIndexRecord() {
        super(CoreRcIndex.CORE_RC_INDEX);
    }

    /**
     * Create a detached, initialised CoreRcIndexRecord
     */
    public CoreRcIndexRecord(ULong id, String class_, ULong contentId, ULong permId, CoreRcIndexStatus status, UInteger numReports, UInteger numComments, ULong firstReportBy, Integer firstReportDate, Integer lastUpdated, ULong author, UInteger autoModerationExempt, UInteger itemId, UInteger nodeId) {
        super(CoreRcIndex.CORE_RC_INDEX);

        setId(id);
        setClass_(class_);
        setContentId(contentId);
        setPermId(permId);
        setStatus(status);
        setNumReports(numReports);
        setNumComments(numComments);
        setFirstReportBy(firstReportBy);
        setFirstReportDate(firstReportDate);
        setLastUpdated(lastUpdated);
        setAuthor(author);
        setAutoModerationExempt(autoModerationExempt);
        setItemId(itemId);
        setNodeId(nodeId);
    }
}
