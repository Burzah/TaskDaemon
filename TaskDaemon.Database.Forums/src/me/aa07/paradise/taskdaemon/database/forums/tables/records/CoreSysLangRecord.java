/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSysLang;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreSysLangRecord extends UpdatableRecordImpl<CoreSysLangRecord> implements Record15<UInteger, String, String, UByte, UByte, Byte, UInteger, Boolean, String, Long, String, Integer, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_sys_lang.lang_id</code>.
     */
    public void setLangId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sys_lang.lang_id</code>.
     */
    public UInteger getLangId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_sys_lang.lang_short</code>.
     */
    public void setLangShort(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sys_lang.lang_short</code>.
     */
    public String getLangShort() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_sys_lang.lang_title</code>.
     */
    public void setLangTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sys_lang.lang_title</code>.
     */
    public String getLangTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_sys_lang.lang_default</code>.
     */
    public void setLangDefault(UByte value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sys_lang.lang_default</code>.
     */
    public UByte getLangDefault() {
        return (UByte) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_sys_lang.lang_isrtl</code>.
     */
    public void setLangIsrtl(UByte value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sys_lang.lang_isrtl</code>.
     */
    public UByte getLangIsrtl() {
        return (UByte) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_sys_lang.lang_protected</code>.
     */
    public void setLangProtected(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sys_lang.lang_protected</code>.
     */
    public Byte getLangProtected() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>paradise_forums.core_sys_lang.lang_order</code>.
     */
    public void setLangOrder(UInteger value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sys_lang.lang_order</code>.
     */
    public UInteger getLangOrder() {
        return (UInteger) get(6);
    }

    /**
     * Setter for <code>paradise_forums.core_sys_lang.lang_enabled</code>.
     * Indicates if the language is enabled
     */
    public void setLangEnabled(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sys_lang.lang_enabled</code>.
     * Indicates if the language is enabled
     */
    public Boolean getLangEnabled() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>paradise_forums.core_sys_lang.lang_update_url</code>.
     */
    public void setLangUpdateUrl(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sys_lang.lang_update_url</code>.
     */
    public String getLangUpdateUrl() {
        return (String) get(8);
    }

    /**
     * Setter for <code>paradise_forums.core_sys_lang.lang_update_check</code>.
     */
    public void setLangUpdateCheck(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sys_lang.lang_update_check</code>.
     */
    public Long getLangUpdateCheck() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>paradise_forums.core_sys_lang.lang_version</code>.
     */
    public void setLangVersion(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sys_lang.lang_version</code>.
     */
    public String getLangVersion() {
        return (String) get(10);
    }

    /**
     * Setter for <code>paradise_forums.core_sys_lang.lang_version_long</code>.
     */
    public void setLangVersionLong(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sys_lang.lang_version_long</code>.
     */
    public Integer getLangVersionLong() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>paradise_forums.core_sys_lang.lang_update_data</code>.
     */
    public void setLangUpdateData(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sys_lang.lang_update_data</code>.
     */
    public String getLangUpdateData() {
        return (String) get(12);
    }

    /**
     * Setter for <code>paradise_forums.core_sys_lang.lang_author_name</code>.
     */
    public void setLangAuthorName(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sys_lang.lang_author_name</code>.
     */
    public String getLangAuthorName() {
        return (String) get(13);
    }

    /**
     * Setter for <code>paradise_forums.core_sys_lang.lang_author_url</code>.
     */
    public void setLangAuthorUrl(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>paradise_forums.core_sys_lang.lang_author_url</code>.
     */
    public String getLangAuthorUrl() {
        return (String) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row15<UInteger, String, String, UByte, UByte, Byte, UInteger, Boolean, String, Long, String, Integer, String, String, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    @Override
    public Row15<UInteger, String, String, UByte, UByte, Byte, UInteger, Boolean, String, Long, String, Integer, String, String, String> valuesRow() {
        return (Row15) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return CoreSysLang.CORE_SYS_LANG.LANG_ID;
    }

    @Override
    public Field<String> field2() {
        return CoreSysLang.CORE_SYS_LANG.LANG_SHORT;
    }

    @Override
    public Field<String> field3() {
        return CoreSysLang.CORE_SYS_LANG.LANG_TITLE;
    }

    @Override
    public Field<UByte> field4() {
        return CoreSysLang.CORE_SYS_LANG.LANG_DEFAULT;
    }

    @Override
    public Field<UByte> field5() {
        return CoreSysLang.CORE_SYS_LANG.LANG_ISRTL;
    }

    @Override
    public Field<Byte> field6() {
        return CoreSysLang.CORE_SYS_LANG.LANG_PROTECTED;
    }

    @Override
    public Field<UInteger> field7() {
        return CoreSysLang.CORE_SYS_LANG.LANG_ORDER;
    }

    @Override
    public Field<Boolean> field8() {
        return CoreSysLang.CORE_SYS_LANG.LANG_ENABLED;
    }

    @Override
    public Field<String> field9() {
        return CoreSysLang.CORE_SYS_LANG.LANG_UPDATE_URL;
    }

    @Override
    public Field<Long> field10() {
        return CoreSysLang.CORE_SYS_LANG.LANG_UPDATE_CHECK;
    }

    @Override
    public Field<String> field11() {
        return CoreSysLang.CORE_SYS_LANG.LANG_VERSION;
    }

    @Override
    public Field<Integer> field12() {
        return CoreSysLang.CORE_SYS_LANG.LANG_VERSION_LONG;
    }

    @Override
    public Field<String> field13() {
        return CoreSysLang.CORE_SYS_LANG.LANG_UPDATE_DATA;
    }

    @Override
    public Field<String> field14() {
        return CoreSysLang.CORE_SYS_LANG.LANG_AUTHOR_NAME;
    }

    @Override
    public Field<String> field15() {
        return CoreSysLang.CORE_SYS_LANG.LANG_AUTHOR_URL;
    }

    @Override
    public UInteger component1() {
        return getLangId();
    }

    @Override
    public String component2() {
        return getLangShort();
    }

    @Override
    public String component3() {
        return getLangTitle();
    }

    @Override
    public UByte component4() {
        return getLangDefault();
    }

    @Override
    public UByte component5() {
        return getLangIsrtl();
    }

    @Override
    public Byte component6() {
        return getLangProtected();
    }

    @Override
    public UInteger component7() {
        return getLangOrder();
    }

    @Override
    public Boolean component8() {
        return getLangEnabled();
    }

    @Override
    public String component9() {
        return getLangUpdateUrl();
    }

    @Override
    public Long component10() {
        return getLangUpdateCheck();
    }

    @Override
    public String component11() {
        return getLangVersion();
    }

    @Override
    public Integer component12() {
        return getLangVersionLong();
    }

    @Override
    public String component13() {
        return getLangUpdateData();
    }

    @Override
    public String component14() {
        return getLangAuthorName();
    }

    @Override
    public String component15() {
        return getLangAuthorUrl();
    }

    @Override
    public UInteger value1() {
        return getLangId();
    }

    @Override
    public String value2() {
        return getLangShort();
    }

    @Override
    public String value3() {
        return getLangTitle();
    }

    @Override
    public UByte value4() {
        return getLangDefault();
    }

    @Override
    public UByte value5() {
        return getLangIsrtl();
    }

    @Override
    public Byte value6() {
        return getLangProtected();
    }

    @Override
    public UInteger value7() {
        return getLangOrder();
    }

    @Override
    public Boolean value8() {
        return getLangEnabled();
    }

    @Override
    public String value9() {
        return getLangUpdateUrl();
    }

    @Override
    public Long value10() {
        return getLangUpdateCheck();
    }

    @Override
    public String value11() {
        return getLangVersion();
    }

    @Override
    public Integer value12() {
        return getLangVersionLong();
    }

    @Override
    public String value13() {
        return getLangUpdateData();
    }

    @Override
    public String value14() {
        return getLangAuthorName();
    }

    @Override
    public String value15() {
        return getLangAuthorUrl();
    }

    @Override
    public CoreSysLangRecord value1(UInteger value) {
        setLangId(value);
        return this;
    }

    @Override
    public CoreSysLangRecord value2(String value) {
        setLangShort(value);
        return this;
    }

    @Override
    public CoreSysLangRecord value3(String value) {
        setLangTitle(value);
        return this;
    }

    @Override
    public CoreSysLangRecord value4(UByte value) {
        setLangDefault(value);
        return this;
    }

    @Override
    public CoreSysLangRecord value5(UByte value) {
        setLangIsrtl(value);
        return this;
    }

    @Override
    public CoreSysLangRecord value6(Byte value) {
        setLangProtected(value);
        return this;
    }

    @Override
    public CoreSysLangRecord value7(UInteger value) {
        setLangOrder(value);
        return this;
    }

    @Override
    public CoreSysLangRecord value8(Boolean value) {
        setLangEnabled(value);
        return this;
    }

    @Override
    public CoreSysLangRecord value9(String value) {
        setLangUpdateUrl(value);
        return this;
    }

    @Override
    public CoreSysLangRecord value10(Long value) {
        setLangUpdateCheck(value);
        return this;
    }

    @Override
    public CoreSysLangRecord value11(String value) {
        setLangVersion(value);
        return this;
    }

    @Override
    public CoreSysLangRecord value12(Integer value) {
        setLangVersionLong(value);
        return this;
    }

    @Override
    public CoreSysLangRecord value13(String value) {
        setLangUpdateData(value);
        return this;
    }

    @Override
    public CoreSysLangRecord value14(String value) {
        setLangAuthorName(value);
        return this;
    }

    @Override
    public CoreSysLangRecord value15(String value) {
        setLangAuthorUrl(value);
        return this;
    }

    @Override
    public CoreSysLangRecord values(UInteger value1, String value2, String value3, UByte value4, UByte value5, Byte value6, UInteger value7, Boolean value8, String value9, Long value10, String value11, Integer value12, String value13, String value14, String value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreSysLangRecord
     */
    public CoreSysLangRecord() {
        super(CoreSysLang.CORE_SYS_LANG);
    }

    /**
     * Create a detached, initialised CoreSysLangRecord
     */
    public CoreSysLangRecord(UInteger langId, String langShort, String langTitle, UByte langDefault, UByte langIsrtl, Byte langProtected, UInteger langOrder, Boolean langEnabled, String langUpdateUrl, Long langUpdateCheck, String langVersion, Integer langVersionLong, String langUpdateData, String langAuthorName, String langAuthorUrl) {
        super(CoreSysLang.CORE_SYS_LANG);

        setLangId(langId);
        setLangShort(langShort);
        setLangTitle(langTitle);
        setLangDefault(langDefault);
        setLangIsrtl(langIsrtl);
        setLangProtected(langProtected);
        setLangOrder(langOrder);
        setLangEnabled(langEnabled);
        setLangUpdateUrl(langUpdateUrl);
        setLangUpdateCheck(langUpdateCheck);
        setLangVersion(langVersion);
        setLangVersionLong(langVersionLong);
        setLangUpdateData(langUpdateData);
        setLangAuthorName(langAuthorName);
        setLangAuthorUrl(langAuthorUrl);
    }
}
