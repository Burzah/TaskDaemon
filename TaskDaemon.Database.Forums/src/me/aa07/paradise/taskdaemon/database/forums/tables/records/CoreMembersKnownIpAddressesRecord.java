/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMembersKnownIpAddresses;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreMembersKnownIpAddressesRecord extends UpdatableRecordImpl<CoreMembersKnownIpAddressesRecord> implements Record4<String, ULong, String, UInteger> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>paradise_forums.core_members_known_ip_addresses.device_key</code>.
     * The device key as stored in core_members_known_devices.device_key
     */
    public void setDeviceKey(String value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_members_known_ip_addresses.device_key</code>.
     * The device key as stored in core_members_known_devices.device_key
     */
    public String getDeviceKey() {
        return (String) get(0);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_members_known_ip_addresses.member_id</code>.
     * The  member ID
     */
    public void setMemberId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_members_known_ip_addresses.member_id</code>.
     * The  member ID
     */
    public ULong getMemberId() {
        return (ULong) get(1);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_members_known_ip_addresses.ip_address</code>.
     * The IP address
     */
    public void setIpAddress(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_members_known_ip_addresses.ip_address</code>.
     * The IP address
     */
    public String getIpAddress() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_members_known_ip_addresses.last_seen</code>. A
     * unix timestamp of when the device was last used on this IP address.
     * Updated at session start, not on every click
     */
    public void setLastSeen(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_members_known_ip_addresses.last_seen</code>. A
     * unix timestamp of when the device was last used on this IP address.
     * Updated at session start, not on every click
     */
    public UInteger getLastSeen() {
        return (UInteger) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<String, ULong, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, ULong, String, UInteger> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, ULong, String, UInteger> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return CoreMembersKnownIpAddresses.CORE_MEMBERS_KNOWN_IP_ADDRESSES.DEVICE_KEY;
    }

    @Override
    public Field<ULong> field2() {
        return CoreMembersKnownIpAddresses.CORE_MEMBERS_KNOWN_IP_ADDRESSES.MEMBER_ID;
    }

    @Override
    public Field<String> field3() {
        return CoreMembersKnownIpAddresses.CORE_MEMBERS_KNOWN_IP_ADDRESSES.IP_ADDRESS;
    }

    @Override
    public Field<UInteger> field4() {
        return CoreMembersKnownIpAddresses.CORE_MEMBERS_KNOWN_IP_ADDRESSES.LAST_SEEN;
    }

    @Override
    public String component1() {
        return getDeviceKey();
    }

    @Override
    public ULong component2() {
        return getMemberId();
    }

    @Override
    public String component3() {
        return getIpAddress();
    }

    @Override
    public UInteger component4() {
        return getLastSeen();
    }

    @Override
    public String value1() {
        return getDeviceKey();
    }

    @Override
    public ULong value2() {
        return getMemberId();
    }

    @Override
    public String value3() {
        return getIpAddress();
    }

    @Override
    public UInteger value4() {
        return getLastSeen();
    }

    @Override
    public CoreMembersKnownIpAddressesRecord value1(String value) {
        setDeviceKey(value);
        return this;
    }

    @Override
    public CoreMembersKnownIpAddressesRecord value2(ULong value) {
        setMemberId(value);
        return this;
    }

    @Override
    public CoreMembersKnownIpAddressesRecord value3(String value) {
        setIpAddress(value);
        return this;
    }

    @Override
    public CoreMembersKnownIpAddressesRecord value4(UInteger value) {
        setLastSeen(value);
        return this;
    }

    @Override
    public CoreMembersKnownIpAddressesRecord values(String value1, ULong value2, String value3, UInteger value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreMembersKnownIpAddressesRecord
     */
    public CoreMembersKnownIpAddressesRecord() {
        super(CoreMembersKnownIpAddresses.CORE_MEMBERS_KNOWN_IP_ADDRESSES);
    }

    /**
     * Create a detached, initialised CoreMembersKnownIpAddressesRecord
     */
    public CoreMembersKnownIpAddressesRecord(String deviceKey, ULong memberId, String ipAddress, UInteger lastSeen) {
        super(CoreMembersKnownIpAddresses.CORE_MEMBERS_KNOWN_IP_ADDRESSES);

        setDeviceKey(deviceKey);
        setMemberId(memberId);
        setIpAddress(ipAddress);
        setLastSeen(lastSeen);
    }
}
