/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.PatreonintegrationUserRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PatreonintegrationUser extends TableImpl<PatreonintegrationUserRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.patreonintegration_user</code>
     */
    public static final PatreonintegrationUser PATREONINTEGRATION_USER = new PatreonintegrationUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PatreonintegrationUserRecord> getRecordType() {
        return PatreonintegrationUserRecord.class;
    }

    /**
     * The column <code>paradise_forums.patreonintegration_user.updated</code>.
     */
    public final TableField<PatreonintegrationUserRecord, Integer> UPDATED = createField(DSL.name("updated"), SQLDataType.INTEGER.defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.patreonintegration_user.access_token</code>.
     */
    public final TableField<PatreonintegrationUserRecord, String> ACCESS_TOKEN = createField(DSL.name("access_token"), SQLDataType.VARCHAR(191).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.patreonintegration_user.refresh_token</code>.
     */
    public final TableField<PatreonintegrationUserRecord, String> REFRESH_TOKEN = createField(DSL.name("refresh_token"), SQLDataType.VARCHAR(191).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.patreonintegration_user.expires_in</code>.
     */
    public final TableField<PatreonintegrationUserRecord, Integer> EXPIRES_IN = createField(DSL.name("expires_in"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>paradise_forums.patreonintegration_user.scope</code>.
     */
    public final TableField<PatreonintegrationUserRecord, String> SCOPE = createField(DSL.name("scope"), SQLDataType.VARCHAR(191).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.patreonintegration_user.token_type</code>.
     */
    public final TableField<PatreonintegrationUserRecord, String> TOKEN_TYPE = createField(DSL.name("token_type"), SQLDataType.VARCHAR(191).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.patreonintegration_user.first_name</code>.
     */
    public final TableField<PatreonintegrationUserRecord, String> FIRST_NAME = createField(DSL.name("first_name"), SQLDataType.VARCHAR(191).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.patreonintegration_user.full_name</code>.
     */
    public final TableField<PatreonintegrationUserRecord, String> FULL_NAME = createField(DSL.name("full_name"), SQLDataType.VARCHAR(191).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.patreonintegration_user.image_url</code>.
     */
    public final TableField<PatreonintegrationUserRecord, String> IMAGE_URL = createField(DSL.name("image_url"), SQLDataType.VARCHAR(1024).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.patreonintegration_user.thumb_url</code>.
     */
    public final TableField<PatreonintegrationUserRecord, String> THUMB_URL = createField(DSL.name("thumb_url"), SQLDataType.VARCHAR(1024).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.patreonintegration_user.url</code>.
     */
    public final TableField<PatreonintegrationUserRecord, String> URL = createField(DSL.name("url"), SQLDataType.VARCHAR(1024).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.patreonintegration_user.tier_id</code>.
     */
    public final TableField<PatreonintegrationUserRecord, Integer> TIER_ID = createField(DSL.name("tier_id"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.patreonintegration_user.pledge_amount</code>.
     */
    public final TableField<PatreonintegrationUserRecord, Integer> PLEDGE_AMOUNT = createField(DSL.name("pledge_amount"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.patreonintegration_user.member_id</code>.
     */
    public final TableField<PatreonintegrationUserRecord, Integer> MEMBER_ID = createField(DSL.name("member_id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.patreonintegration_user.patreon_id</code>.
     */
    public final TableField<PatreonintegrationUserRecord, Integer> PATREON_ID = createField(DSL.name("patreon_id"), SQLDataType.INTEGER.defaultValue(DSL.inline("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.patreonintegration_user.pledge_time</code>.
     */
    public final TableField<PatreonintegrationUserRecord, Integer> PLEDGE_TIME = createField(DSL.name("pledge_time"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>paradise_forums.patreonintegration_user.tier_usergroups</code>.
     */
    public final TableField<PatreonintegrationUserRecord, String> TIER_USERGROUPS = createField(DSL.name("tier_usergroups"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.patreonintegration_user.update_status</code>.
     */
    public final TableField<PatreonintegrationUserRecord, String> UPDATE_STATUS = createField(DSL.name("update_status"), SQLDataType.VARCHAR(80).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    private PatreonintegrationUser(Name alias, Table<PatreonintegrationUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private PatreonintegrationUser(Name alias, Table<PatreonintegrationUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.patreonintegration_user</code>
     * table reference
     */
    public PatreonintegrationUser(String alias) {
        this(DSL.name(alias), PATREONINTEGRATION_USER);
    }

    /**
     * Create an aliased <code>paradise_forums.patreonintegration_user</code>
     * table reference
     */
    public PatreonintegrationUser(Name alias) {
        this(alias, PATREONINTEGRATION_USER);
    }

    /**
     * Create a <code>paradise_forums.patreonintegration_user</code> table
     * reference
     */
    public PatreonintegrationUser() {
        this(DSL.name("patreonintegration_user"), null);
    }

    public <O extends Record> PatreonintegrationUser(Table<O> child, ForeignKey<O, PatreonintegrationUserRecord> key) {
        super(child, key, PATREONINTEGRATION_USER);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<UniqueKey<PatreonintegrationUserRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_PATREONINTEGRATION_USER_UNIQUE_USER_ID, Keys.KEY_PATREONINTEGRATION_USER_UNIQUE_PATREON_ID);
    }

    @Override
    public PatreonintegrationUser as(String alias) {
        return new PatreonintegrationUser(DSL.name(alias), this);
    }

    @Override
    public PatreonintegrationUser as(Name alias) {
        return new PatreonintegrationUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PatreonintegrationUser rename(String name) {
        return new PatreonintegrationUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PatreonintegrationUser rename(Name name) {
        return new PatreonintegrationUser(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<Integer, String, String, Integer, String, String, String, String, String, String, String, Integer, Integer, Integer, Integer, Integer, String, String> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
