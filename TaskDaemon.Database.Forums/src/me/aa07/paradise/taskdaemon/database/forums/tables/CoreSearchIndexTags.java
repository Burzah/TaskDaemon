/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreSearchIndexTagsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreSearchIndexTags extends TableImpl<CoreSearchIndexTagsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_search_index_tags</code>
     */
    public static final CoreSearchIndexTags CORE_SEARCH_INDEX_TAGS = new CoreSearchIndexTags();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreSearchIndexTagsRecord> getRecordType() {
        return CoreSearchIndexTagsRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_search_index_tags.index_id</code>.
     * Related rows index ID from core_search_index
     */
    public final TableField<CoreSearchIndexTagsRecord, ULong> INDEX_ID = createField(DSL.name("index_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "Related rows index ID from core_search_index");

    /**
     * The column <code>paradise_forums.core_search_index_tags.index_tag</code>.
     */
    public final TableField<CoreSearchIndexTagsRecord, String> INDEX_TAG = createField(DSL.name("index_tag"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_search_index_tags.index_is_prefix</code>.
     * Signifies if this tag is the item prefix
     */
    public final TableField<CoreSearchIndexTagsRecord, UByte> INDEX_IS_PREFIX = createField(DSL.name("index_is_prefix"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "Signifies if this tag is the item prefix");

    private CoreSearchIndexTags(Name alias, Table<CoreSearchIndexTagsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreSearchIndexTags(Name alias, Table<CoreSearchIndexTagsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_search_index_tags</code>
     * table reference
     */
    public CoreSearchIndexTags(String alias) {
        this(DSL.name(alias), CORE_SEARCH_INDEX_TAGS);
    }

    /**
     * Create an aliased <code>paradise_forums.core_search_index_tags</code>
     * table reference
     */
    public CoreSearchIndexTags(Name alias) {
        this(alias, CORE_SEARCH_INDEX_TAGS);
    }

    /**
     * Create a <code>paradise_forums.core_search_index_tags</code> table
     * reference
     */
    public CoreSearchIndexTags() {
        this(DSL.name("core_search_index_tags"), null);
    }

    public <O extends Record> CoreSearchIndexTags(Table<O> child, ForeignKey<O, CoreSearchIndexTagsRecord> key) {
        super(child, key, CORE_SEARCH_INDEX_TAGS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_SEARCH_INDEX_TAGS_INDEX_ID, Indexes.CORE_SEARCH_INDEX_TAGS_INDEX_TAG);
    }

    @Override
    public CoreSearchIndexTags as(String alias) {
        return new CoreSearchIndexTags(DSL.name(alias), this);
    }

    @Override
    public CoreSearchIndexTags as(Name alias) {
        return new CoreSearchIndexTags(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreSearchIndexTags rename(String name) {
        return new CoreSearchIndexTags(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreSearchIndexTags rename(Name name) {
        return new CoreSearchIndexTags(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<ULong, String, UByte> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
