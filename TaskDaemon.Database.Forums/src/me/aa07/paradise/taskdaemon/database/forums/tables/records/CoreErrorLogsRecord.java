/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreErrorLogs;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreErrorLogsRecord extends UpdatableRecordImpl<CoreErrorLogsRecord> implements Record7<Integer, ULong, Integer, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_error_logs.log_id</code>.
     */
    public void setLogId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_error_logs.log_id</code>.
     */
    public Integer getLogId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_error_logs.log_member</code>.
     */
    public void setLogMember(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_error_logs.log_member</code>.
     */
    public ULong getLogMember() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_error_logs.log_date</code>.
     */
    public void setLogDate(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_error_logs.log_date</code>.
     */
    public Integer getLogDate() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_error_logs.log_error</code>.
     */
    public void setLogError(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_error_logs.log_error</code>.
     */
    public String getLogError() {
        return (String) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_error_logs.log_error_code</code>.
     */
    public void setLogErrorCode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_error_logs.log_error_code</code>.
     */
    public String getLogErrorCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_error_logs.log_ip_address</code>.
     */
    public void setLogIpAddress(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_error_logs.log_ip_address</code>.
     */
    public String getLogIpAddress() {
        return (String) get(5);
    }

    /**
     * Setter for <code>paradise_forums.core_error_logs.log_request_uri</code>.
     */
    public void setLogRequestUri(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>paradise_forums.core_error_logs.log_request_uri</code>.
     */
    public String getLogRequestUri() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, ULong, Integer, String, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, ULong, Integer, String, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CoreErrorLogs.CORE_ERROR_LOGS.LOG_ID;
    }

    @Override
    public Field<ULong> field2() {
        return CoreErrorLogs.CORE_ERROR_LOGS.LOG_MEMBER;
    }

    @Override
    public Field<Integer> field3() {
        return CoreErrorLogs.CORE_ERROR_LOGS.LOG_DATE;
    }

    @Override
    public Field<String> field4() {
        return CoreErrorLogs.CORE_ERROR_LOGS.LOG_ERROR;
    }

    @Override
    public Field<String> field5() {
        return CoreErrorLogs.CORE_ERROR_LOGS.LOG_ERROR_CODE;
    }

    @Override
    public Field<String> field6() {
        return CoreErrorLogs.CORE_ERROR_LOGS.LOG_IP_ADDRESS;
    }

    @Override
    public Field<String> field7() {
        return CoreErrorLogs.CORE_ERROR_LOGS.LOG_REQUEST_URI;
    }

    @Override
    public Integer component1() {
        return getLogId();
    }

    @Override
    public ULong component2() {
        return getLogMember();
    }

    @Override
    public Integer component3() {
        return getLogDate();
    }

    @Override
    public String component4() {
        return getLogError();
    }

    @Override
    public String component5() {
        return getLogErrorCode();
    }

    @Override
    public String component6() {
        return getLogIpAddress();
    }

    @Override
    public String component7() {
        return getLogRequestUri();
    }

    @Override
    public Integer value1() {
        return getLogId();
    }

    @Override
    public ULong value2() {
        return getLogMember();
    }

    @Override
    public Integer value3() {
        return getLogDate();
    }

    @Override
    public String value4() {
        return getLogError();
    }

    @Override
    public String value5() {
        return getLogErrorCode();
    }

    @Override
    public String value6() {
        return getLogIpAddress();
    }

    @Override
    public String value7() {
        return getLogRequestUri();
    }

    @Override
    public CoreErrorLogsRecord value1(Integer value) {
        setLogId(value);
        return this;
    }

    @Override
    public CoreErrorLogsRecord value2(ULong value) {
        setLogMember(value);
        return this;
    }

    @Override
    public CoreErrorLogsRecord value3(Integer value) {
        setLogDate(value);
        return this;
    }

    @Override
    public CoreErrorLogsRecord value4(String value) {
        setLogError(value);
        return this;
    }

    @Override
    public CoreErrorLogsRecord value5(String value) {
        setLogErrorCode(value);
        return this;
    }

    @Override
    public CoreErrorLogsRecord value6(String value) {
        setLogIpAddress(value);
        return this;
    }

    @Override
    public CoreErrorLogsRecord value7(String value) {
        setLogRequestUri(value);
        return this;
    }

    @Override
    public CoreErrorLogsRecord values(Integer value1, ULong value2, Integer value3, String value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreErrorLogsRecord
     */
    public CoreErrorLogsRecord() {
        super(CoreErrorLogs.CORE_ERROR_LOGS);
    }

    /**
     * Create a detached, initialised CoreErrorLogsRecord
     */
    public CoreErrorLogsRecord(Integer logId, ULong logMember, Integer logDate, String logError, String logErrorCode, String logIpAddress, String logRequestUri) {
        super(CoreErrorLogs.CORE_ERROR_LOGS);

        setLogId(logId);
        setLogMember(logMember);
        setLogDate(logDate);
        setLogError(logError);
        setLogErrorCode(logErrorCode);
        setLogIpAddress(logIpAddress);
        setLogRequestUri(logRequestUri);
    }
}
