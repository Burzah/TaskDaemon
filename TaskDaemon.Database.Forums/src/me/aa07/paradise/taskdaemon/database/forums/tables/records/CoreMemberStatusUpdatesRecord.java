/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreMemberStatusUpdates;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreMemberStatusUpdatesRecord extends UpdatableRecordImpl<CoreMemberStatusUpdatesRecord> implements Record13<Integer, ULong, UInteger, String, UInteger, String, Integer, Integer, String, Integer, Integer, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>paradise_forums.core_member_status_updates.status_id</code>.
     */
    public void setStatusId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_member_status_updates.status_id</code>.
     */
    public Integer getStatusId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_member_status_updates.status_member_id</code>.
     */
    public void setStatusMemberId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_member_status_updates.status_member_id</code>.
     */
    public ULong getStatusMemberId() {
        return (ULong) get(1);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_member_status_updates.status_date</code>.
     */
    public void setStatusDate(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_member_status_updates.status_date</code>.
     */
    public UInteger getStatusDate() {
        return (UInteger) get(2);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_member_status_updates.status_content</code>.
     */
    public void setStatusContent(String value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_member_status_updates.status_content</code>.
     */
    public String getStatusContent() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_member_status_updates.status_replies</code>.
     */
    public void setStatusReplies(UInteger value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_member_status_updates.status_replies</code>.
     */
    public UInteger getStatusReplies() {
        return (UInteger) get(4);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_member_status_updates.status_last_ids</code>.
     */
    public void setStatusLastIds(String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_member_status_updates.status_last_ids</code>.
     */
    public String getStatusLastIds() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_member_status_updates.status_is_latest</code>.
     */
    public void setStatusIsLatest(Integer value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_member_status_updates.status_is_latest</code>.
     */
    public Integer getStatusIsLatest() {
        return (Integer) get(6);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_member_status_updates.status_is_locked</code>.
     */
    public void setStatusIsLocked(Integer value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_member_status_updates.status_is_locked</code>.
     */
    public Integer getStatusIsLocked() {
        return (Integer) get(7);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_member_status_updates.status_hash</code>.
     */
    public void setStatusHash(String value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_member_status_updates.status_hash</code>.
     */
    public String getStatusHash() {
        return (String) get(8);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_member_status_updates.status_imported</code>.
     */
    public void setStatusImported(Integer value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_member_status_updates.status_imported</code>.
     */
    public Integer getStatusImported() {
        return (Integer) get(9);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_member_status_updates.status_author_id</code>.
     */
    public void setStatusAuthorId(Integer value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_member_status_updates.status_author_id</code>.
     */
    public Integer getStatusAuthorId() {
        return (Integer) get(10);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_member_status_updates.status_author_ip</code>.
     */
    public void setStatusAuthorIp(String value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_member_status_updates.status_author_ip</code>.
     */
    public String getStatusAuthorIp() {
        return (String) get(11);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_member_status_updates.status_approved</code>.
     */
    public void setStatusApproved(Integer value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_member_status_updates.status_approved</code>.
     */
    public Integer getStatusApproved() {
        return (Integer) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, ULong, UInteger, String, UInteger, String, Integer, Integer, String, Integer, Integer, String, Integer> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Integer, ULong, UInteger, String, UInteger, String, Integer, Integer, String, Integer, Integer, String, Integer> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES.STATUS_ID;
    }

    @Override
    public Field<ULong> field2() {
        return CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES.STATUS_MEMBER_ID;
    }

    @Override
    public Field<UInteger> field3() {
        return CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES.STATUS_DATE;
    }

    @Override
    public Field<String> field4() {
        return CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES.STATUS_CONTENT;
    }

    @Override
    public Field<UInteger> field5() {
        return CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES.STATUS_REPLIES;
    }

    @Override
    public Field<String> field6() {
        return CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES.STATUS_LAST_IDS;
    }

    @Override
    public Field<Integer> field7() {
        return CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES.STATUS_IS_LATEST;
    }

    @Override
    public Field<Integer> field8() {
        return CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES.STATUS_IS_LOCKED;
    }

    @Override
    public Field<String> field9() {
        return CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES.STATUS_HASH;
    }

    @Override
    public Field<Integer> field10() {
        return CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES.STATUS_IMPORTED;
    }

    @Override
    public Field<Integer> field11() {
        return CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES.STATUS_AUTHOR_ID;
    }

    @Override
    public Field<String> field12() {
        return CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES.STATUS_AUTHOR_IP;
    }

    @Override
    public Field<Integer> field13() {
        return CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES.STATUS_APPROVED;
    }

    @Override
    public Integer component1() {
        return getStatusId();
    }

    @Override
    public ULong component2() {
        return getStatusMemberId();
    }

    @Override
    public UInteger component3() {
        return getStatusDate();
    }

    @Override
    public String component4() {
        return getStatusContent();
    }

    @Override
    public UInteger component5() {
        return getStatusReplies();
    }

    @Override
    public String component6() {
        return getStatusLastIds();
    }

    @Override
    public Integer component7() {
        return getStatusIsLatest();
    }

    @Override
    public Integer component8() {
        return getStatusIsLocked();
    }

    @Override
    public String component9() {
        return getStatusHash();
    }

    @Override
    public Integer component10() {
        return getStatusImported();
    }

    @Override
    public Integer component11() {
        return getStatusAuthorId();
    }

    @Override
    public String component12() {
        return getStatusAuthorIp();
    }

    @Override
    public Integer component13() {
        return getStatusApproved();
    }

    @Override
    public Integer value1() {
        return getStatusId();
    }

    @Override
    public ULong value2() {
        return getStatusMemberId();
    }

    @Override
    public UInteger value3() {
        return getStatusDate();
    }

    @Override
    public String value4() {
        return getStatusContent();
    }

    @Override
    public UInteger value5() {
        return getStatusReplies();
    }

    @Override
    public String value6() {
        return getStatusLastIds();
    }

    @Override
    public Integer value7() {
        return getStatusIsLatest();
    }

    @Override
    public Integer value8() {
        return getStatusIsLocked();
    }

    @Override
    public String value9() {
        return getStatusHash();
    }

    @Override
    public Integer value10() {
        return getStatusImported();
    }

    @Override
    public Integer value11() {
        return getStatusAuthorId();
    }

    @Override
    public String value12() {
        return getStatusAuthorIp();
    }

    @Override
    public Integer value13() {
        return getStatusApproved();
    }

    @Override
    public CoreMemberStatusUpdatesRecord value1(Integer value) {
        setStatusId(value);
        return this;
    }

    @Override
    public CoreMemberStatusUpdatesRecord value2(ULong value) {
        setStatusMemberId(value);
        return this;
    }

    @Override
    public CoreMemberStatusUpdatesRecord value3(UInteger value) {
        setStatusDate(value);
        return this;
    }

    @Override
    public CoreMemberStatusUpdatesRecord value4(String value) {
        setStatusContent(value);
        return this;
    }

    @Override
    public CoreMemberStatusUpdatesRecord value5(UInteger value) {
        setStatusReplies(value);
        return this;
    }

    @Override
    public CoreMemberStatusUpdatesRecord value6(String value) {
        setStatusLastIds(value);
        return this;
    }

    @Override
    public CoreMemberStatusUpdatesRecord value7(Integer value) {
        setStatusIsLatest(value);
        return this;
    }

    @Override
    public CoreMemberStatusUpdatesRecord value8(Integer value) {
        setStatusIsLocked(value);
        return this;
    }

    @Override
    public CoreMemberStatusUpdatesRecord value9(String value) {
        setStatusHash(value);
        return this;
    }

    @Override
    public CoreMemberStatusUpdatesRecord value10(Integer value) {
        setStatusImported(value);
        return this;
    }

    @Override
    public CoreMemberStatusUpdatesRecord value11(Integer value) {
        setStatusAuthorId(value);
        return this;
    }

    @Override
    public CoreMemberStatusUpdatesRecord value12(String value) {
        setStatusAuthorIp(value);
        return this;
    }

    @Override
    public CoreMemberStatusUpdatesRecord value13(Integer value) {
        setStatusApproved(value);
        return this;
    }

    @Override
    public CoreMemberStatusUpdatesRecord values(Integer value1, ULong value2, UInteger value3, String value4, UInteger value5, String value6, Integer value7, Integer value8, String value9, Integer value10, Integer value11, String value12, Integer value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreMemberStatusUpdatesRecord
     */
    public CoreMemberStatusUpdatesRecord() {
        super(CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES);
    }

    /**
     * Create a detached, initialised CoreMemberStatusUpdatesRecord
     */
    public CoreMemberStatusUpdatesRecord(Integer statusId, ULong statusMemberId, UInteger statusDate, String statusContent, UInteger statusReplies, String statusLastIds, Integer statusIsLatest, Integer statusIsLocked, String statusHash, Integer statusImported, Integer statusAuthorId, String statusAuthorIp, Integer statusApproved) {
        super(CoreMemberStatusUpdates.CORE_MEMBER_STATUS_UPDATES);

        setStatusId(statusId);
        setStatusMemberId(statusMemberId);
        setStatusDate(statusDate);
        setStatusContent(statusContent);
        setStatusReplies(statusReplies);
        setStatusLastIds(statusLastIds);
        setStatusIsLatest(statusIsLatest);
        setStatusIsLocked(statusIsLocked);
        setStatusHash(statusHash);
        setStatusImported(statusImported);
        setStatusAuthorId(statusAuthorId);
        setStatusAuthorIp(statusAuthorIp);
        setStatusApproved(statusApproved);
    }
}
