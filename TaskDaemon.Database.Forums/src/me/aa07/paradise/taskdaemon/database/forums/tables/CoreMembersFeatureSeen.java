/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreMembersFeatureSeenRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreMembersFeatureSeen extends TableImpl<CoreMembersFeatureSeenRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.core_members_feature_seen</code>
     */
    public static final CoreMembersFeatureSeen CORE_MEMBERS_FEATURE_SEEN = new CoreMembersFeatureSeen();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreMembersFeatureSeenRecord> getRecordType() {
        return CoreMembersFeatureSeenRecord.class;
    }

    /**
     * The column
     * <code>paradise_forums.core_members_feature_seen.member_id</code>. Member
     * ID
     */
    public final TableField<CoreMembersFeatureSeenRecord, ULong> MEMBER_ID = createField(DSL.name("member_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "Member ID");

    /**
     * The column
     * <code>paradise_forums.core_members_feature_seen.feature_id</code>.
     */
    public final TableField<CoreMembersFeatureSeenRecord, ULong> FEATURE_ID = createField(DSL.name("feature_id"), SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINTUNSIGNED)), this, "");

    private CoreMembersFeatureSeen(Name alias, Table<CoreMembersFeatureSeenRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreMembersFeatureSeen(Name alias, Table<CoreMembersFeatureSeenRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_members_feature_seen</code>
     * table reference
     */
    public CoreMembersFeatureSeen(String alias) {
        this(DSL.name(alias), CORE_MEMBERS_FEATURE_SEEN);
    }

    /**
     * Create an aliased <code>paradise_forums.core_members_feature_seen</code>
     * table reference
     */
    public CoreMembersFeatureSeen(Name alias) {
        this(alias, CORE_MEMBERS_FEATURE_SEEN);
    }

    /**
     * Create a <code>paradise_forums.core_members_feature_seen</code> table
     * reference
     */
    public CoreMembersFeatureSeen() {
        this(DSL.name("core_members_feature_seen"), null);
    }

    public <O extends Record> CoreMembersFeatureSeen(Table<O> child, ForeignKey<O, CoreMembersFeatureSeenRecord> key) {
        super(child, key, CORE_MEMBERS_FEATURE_SEEN);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public UniqueKey<CoreMembersFeatureSeenRecord> getPrimaryKey() {
        return Keys.KEY_CORE_MEMBERS_FEATURE_SEEN_PRIMARY;
    }

    @Override
    public CoreMembersFeatureSeen as(String alias) {
        return new CoreMembersFeatureSeen(DSL.name(alias), this);
    }

    @Override
    public CoreMembersFeatureSeen as(Name alias) {
        return new CoreMembersFeatureSeen(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMembersFeatureSeen rename(String name) {
        return new CoreMembersFeatureSeen(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreMembersFeatureSeen rename(Name name) {
        return new CoreMembersFeatureSeen(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<ULong, ULong> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
