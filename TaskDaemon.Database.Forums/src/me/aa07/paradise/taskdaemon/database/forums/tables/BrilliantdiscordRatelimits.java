/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.BrilliantdiscordRatelimitsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BrilliantdiscordRatelimits extends TableImpl<BrilliantdiscordRatelimitsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>paradise_forums.brilliantdiscord_ratelimits</code>
     */
    public static final BrilliantdiscordRatelimits BRILLIANTDISCORD_RATELIMITS = new BrilliantdiscordRatelimits();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BrilliantdiscordRatelimitsRecord> getRecordType() {
        return BrilliantdiscordRatelimitsRecord.class;
    }

    /**
     * The column <code>paradise_forums.brilliantdiscord_ratelimits.id</code>.
     */
    public final TableField<BrilliantdiscordRatelimitsRecord, ULong> ID = createField(DSL.name("id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_ratelimits.endpoint</code>.
     */
    public final TableField<BrilliantdiscordRatelimitsRecord, String> ENDPOINT = createField(DSL.name("endpoint"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_ratelimits.major_param</code>.
     */
    public final TableField<BrilliantdiscordRatelimitsRecord, String> MAJOR_PARAM = createField(DSL.name("major_param"), SQLDataType.VARCHAR(255).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_ratelimits.limit</code>.
     */
    public final TableField<BrilliantdiscordRatelimitsRecord, Long> LIMIT = createField(DSL.name("limit"), SQLDataType.BIGINT.defaultValue(DSL.inline("NULL", SQLDataType.BIGINT)), this, "");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_ratelimits.reset_time</code>.
     */
    public final TableField<BrilliantdiscordRatelimitsRecord, Long> RESET_TIME = createField(DSL.name("reset_time"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_ratelimits.remaining</code>.
     */
    public final TableField<BrilliantdiscordRatelimitsRecord, Long> REMAINING = createField(DSL.name("remaining"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column
     * <code>paradise_forums.brilliantdiscord_ratelimits.identifier</code>.
     */
    public final TableField<BrilliantdiscordRatelimitsRecord, String> IDENTIFIER = createField(DSL.name("identifier"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    private BrilliantdiscordRatelimits(Name alias, Table<BrilliantdiscordRatelimitsRecord> aliased) {
        this(alias, aliased, null);
    }

    private BrilliantdiscordRatelimits(Name alias, Table<BrilliantdiscordRatelimitsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased
     * <code>paradise_forums.brilliantdiscord_ratelimits</code> table reference
     */
    public BrilliantdiscordRatelimits(String alias) {
        this(DSL.name(alias), BRILLIANTDISCORD_RATELIMITS);
    }

    /**
     * Create an aliased
     * <code>paradise_forums.brilliantdiscord_ratelimits</code> table reference
     */
    public BrilliantdiscordRatelimits(Name alias) {
        this(alias, BRILLIANTDISCORD_RATELIMITS);
    }

    /**
     * Create a <code>paradise_forums.brilliantdiscord_ratelimits</code> table
     * reference
     */
    public BrilliantdiscordRatelimits() {
        this(DSL.name("brilliantdiscord_ratelimits"), null);
    }

    public <O extends Record> BrilliantdiscordRatelimits(Table<O> child, ForeignKey<O, BrilliantdiscordRatelimitsRecord> key) {
        super(child, key, BRILLIANTDISCORD_RATELIMITS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.BRILLIANTDISCORD_RATELIMITS_ENDPOINT, Indexes.BRILLIANTDISCORD_RATELIMITS_IDENTIFIER, Indexes.BRILLIANTDISCORD_RATELIMITS_PARAM);
    }

    @Override
    public Identity<BrilliantdiscordRatelimitsRecord, ULong> getIdentity() {
        return (Identity<BrilliantdiscordRatelimitsRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<BrilliantdiscordRatelimitsRecord> getPrimaryKey() {
        return Keys.KEY_BRILLIANTDISCORD_RATELIMITS_PRIMARY;
    }

    @Override
    public BrilliantdiscordRatelimits as(String alias) {
        return new BrilliantdiscordRatelimits(DSL.name(alias), this);
    }

    @Override
    public BrilliantdiscordRatelimits as(Name alias) {
        return new BrilliantdiscordRatelimits(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BrilliantdiscordRatelimits rename(String name) {
        return new BrilliantdiscordRatelimits(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BrilliantdiscordRatelimits rename(Name name) {
        return new BrilliantdiscordRatelimits(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<ULong, String, String, Long, Long, Long, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
