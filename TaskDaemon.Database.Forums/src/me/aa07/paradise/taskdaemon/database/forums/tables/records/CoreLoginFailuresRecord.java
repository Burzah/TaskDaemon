/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreLoginFailures;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreLoginFailuresRecord extends UpdatableRecordImpl<CoreLoginFailuresRecord> implements Record5<ULong, Long, Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_login_failures.login_id</code>. ID
     * Number
     */
    public void setLoginId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_login_failures.login_id</code>. ID
     * Number
     */
    public ULong getLoginId() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_login_failures.login_member_id</code>.
     */
    public void setLoginMemberId(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_login_failures.login_member_id</code>.
     */
    public Long getLoginMemberId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_login_failures.login_date</code>.
     */
    public void setLoginDate(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_login_failures.login_date</code>.
     */
    public Integer getLoginDate() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_login_failures.login_email</code>.
     */
    public void setLoginEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_login_failures.login_email</code>.
     */
    public String getLoginEmail() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_login_failures.login_ip_address</code>.
     */
    public void setLoginIpAddress(String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_login_failures.login_ip_address</code>.
     */
    public String getLoginIpAddress() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<ULong, Long, Integer, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<ULong, Long, Integer, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CoreLoginFailures.CORE_LOGIN_FAILURES.LOGIN_ID;
    }

    @Override
    public Field<Long> field2() {
        return CoreLoginFailures.CORE_LOGIN_FAILURES.LOGIN_MEMBER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return CoreLoginFailures.CORE_LOGIN_FAILURES.LOGIN_DATE;
    }

    @Override
    public Field<String> field4() {
        return CoreLoginFailures.CORE_LOGIN_FAILURES.LOGIN_EMAIL;
    }

    @Override
    public Field<String> field5() {
        return CoreLoginFailures.CORE_LOGIN_FAILURES.LOGIN_IP_ADDRESS;
    }

    @Override
    public ULong component1() {
        return getLoginId();
    }

    @Override
    public Long component2() {
        return getLoginMemberId();
    }

    @Override
    public Integer component3() {
        return getLoginDate();
    }

    @Override
    public String component4() {
        return getLoginEmail();
    }

    @Override
    public String component5() {
        return getLoginIpAddress();
    }

    @Override
    public ULong value1() {
        return getLoginId();
    }

    @Override
    public Long value2() {
        return getLoginMemberId();
    }

    @Override
    public Integer value3() {
        return getLoginDate();
    }

    @Override
    public String value4() {
        return getLoginEmail();
    }

    @Override
    public String value5() {
        return getLoginIpAddress();
    }

    @Override
    public CoreLoginFailuresRecord value1(ULong value) {
        setLoginId(value);
        return this;
    }

    @Override
    public CoreLoginFailuresRecord value2(Long value) {
        setLoginMemberId(value);
        return this;
    }

    @Override
    public CoreLoginFailuresRecord value3(Integer value) {
        setLoginDate(value);
        return this;
    }

    @Override
    public CoreLoginFailuresRecord value4(String value) {
        setLoginEmail(value);
        return this;
    }

    @Override
    public CoreLoginFailuresRecord value5(String value) {
        setLoginIpAddress(value);
        return this;
    }

    @Override
    public CoreLoginFailuresRecord values(ULong value1, Long value2, Integer value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreLoginFailuresRecord
     */
    public CoreLoginFailuresRecord() {
        super(CoreLoginFailures.CORE_LOGIN_FAILURES);
    }

    /**
     * Create a detached, initialised CoreLoginFailuresRecord
     */
    public CoreLoginFailuresRecord(ULong loginId, Long loginMemberId, Integer loginDate, String loginEmail, String loginIpAddress) {
        super(CoreLoginFailures.CORE_LOGIN_FAILURES);

        setLoginId(loginId);
        setLoginMemberId(loginMemberId);
        setLoginDate(loginDate);
        setLoginEmail(loginEmail);
        setLoginIpAddress(loginIpAddress);
    }
}
