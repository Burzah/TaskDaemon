/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreSearchIndexTags;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreSearchIndexTagsRecord extends TableRecordImpl<CoreSearchIndexTagsRecord> implements Record3<ULong, String, UByte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_search_index_tags.index_id</code>.
     * Related rows index ID from core_search_index
     */
    public void setIndexId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_search_index_tags.index_id</code>.
     * Related rows index ID from core_search_index
     */
    public ULong getIndexId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_search_index_tags.index_tag</code>.
     */
    public void setIndexTag(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_search_index_tags.index_tag</code>.
     */
    public String getIndexTag() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>paradise_forums.core_search_index_tags.index_is_prefix</code>.
     * Signifies if this tag is the item prefix
     */
    public void setIndexIsPrefix(UByte value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>paradise_forums.core_search_index_tags.index_is_prefix</code>.
     * Signifies if this tag is the item prefix
     */
    public UByte getIndexIsPrefix() {
        return (UByte) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<ULong, String, UByte> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<ULong, String, UByte> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return CoreSearchIndexTags.CORE_SEARCH_INDEX_TAGS.INDEX_ID;
    }

    @Override
    public Field<String> field2() {
        return CoreSearchIndexTags.CORE_SEARCH_INDEX_TAGS.INDEX_TAG;
    }

    @Override
    public Field<UByte> field3() {
        return CoreSearchIndexTags.CORE_SEARCH_INDEX_TAGS.INDEX_IS_PREFIX;
    }

    @Override
    public ULong component1() {
        return getIndexId();
    }

    @Override
    public String component2() {
        return getIndexTag();
    }

    @Override
    public UByte component3() {
        return getIndexIsPrefix();
    }

    @Override
    public ULong value1() {
        return getIndexId();
    }

    @Override
    public String value2() {
        return getIndexTag();
    }

    @Override
    public UByte value3() {
        return getIndexIsPrefix();
    }

    @Override
    public CoreSearchIndexTagsRecord value1(ULong value) {
        setIndexId(value);
        return this;
    }

    @Override
    public CoreSearchIndexTagsRecord value2(String value) {
        setIndexTag(value);
        return this;
    }

    @Override
    public CoreSearchIndexTagsRecord value3(UByte value) {
        setIndexIsPrefix(value);
        return this;
    }

    @Override
    public CoreSearchIndexTagsRecord values(ULong value1, String value2, UByte value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreSearchIndexTagsRecord
     */
    public CoreSearchIndexTagsRecord() {
        super(CoreSearchIndexTags.CORE_SEARCH_INDEX_TAGS);
    }

    /**
     * Create a detached, initialised CoreSearchIndexTagsRecord
     */
    public CoreSearchIndexTagsRecord(ULong indexId, String indexTag, UByte indexIsPrefix) {
        super(CoreSearchIndexTags.CORE_SEARCH_INDEX_TAGS);

        setIndexId(indexId);
        setIndexTag(indexTag);
        setIndexIsPrefix(indexIsPrefix);
    }
}
