/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables.records;


import me.aa07.paradise.taskdaemon.database.forums.tables.CoreProfanityFilters;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreProfanityFiltersRecord extends UpdatableRecordImpl<CoreProfanityFiltersRecord> implements Record6<Integer, String, String, Byte, String, UShort> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_forums.core_profanity_filters.wid</code>.
     */
    public void setWid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_forums.core_profanity_filters.wid</code>.
     */
    public Integer getWid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>paradise_forums.core_profanity_filters.type</code>.
     */
    public void setType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_forums.core_profanity_filters.type</code>.
     */
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>paradise_forums.core_profanity_filters.swop</code>.
     */
    public void setSwop(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>paradise_forums.core_profanity_filters.swop</code>.
     */
    public String getSwop() {
        return (String) get(2);
    }

    /**
     * Setter for <code>paradise_forums.core_profanity_filters.m_exact</code>.
     */
    public void setMExact(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_forums.core_profanity_filters.m_exact</code>.
     */
    public Byte getMExact() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>paradise_forums.core_profanity_filters.action</code>.
     */
    public void setAction(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_forums.core_profanity_filters.action</code>.
     */
    public String getAction() {
        return (String) get(4);
    }

    /**
     * Setter for <code>paradise_forums.core_profanity_filters.min_posts</code>.
     */
    public void setMinPosts(UShort value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_forums.core_profanity_filters.min_posts</code>.
     */
    public UShort getMinPosts() {
        return (UShort) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, Byte, String, UShort> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, Byte, String, UShort> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CoreProfanityFilters.CORE_PROFANITY_FILTERS.WID;
    }

    @Override
    public Field<String> field2() {
        return CoreProfanityFilters.CORE_PROFANITY_FILTERS.TYPE;
    }

    @Override
    public Field<String> field3() {
        return CoreProfanityFilters.CORE_PROFANITY_FILTERS.SWOP;
    }

    @Override
    public Field<Byte> field4() {
        return CoreProfanityFilters.CORE_PROFANITY_FILTERS.M_EXACT;
    }

    @Override
    public Field<String> field5() {
        return CoreProfanityFilters.CORE_PROFANITY_FILTERS.ACTION;
    }

    @Override
    public Field<UShort> field6() {
        return CoreProfanityFilters.CORE_PROFANITY_FILTERS.MIN_POSTS;
    }

    @Override
    public Integer component1() {
        return getWid();
    }

    @Override
    public String component2() {
        return getType();
    }

    @Override
    public String component3() {
        return getSwop();
    }

    @Override
    public Byte component4() {
        return getMExact();
    }

    @Override
    public String component5() {
        return getAction();
    }

    @Override
    public UShort component6() {
        return getMinPosts();
    }

    @Override
    public Integer value1() {
        return getWid();
    }

    @Override
    public String value2() {
        return getType();
    }

    @Override
    public String value3() {
        return getSwop();
    }

    @Override
    public Byte value4() {
        return getMExact();
    }

    @Override
    public String value5() {
        return getAction();
    }

    @Override
    public UShort value6() {
        return getMinPosts();
    }

    @Override
    public CoreProfanityFiltersRecord value1(Integer value) {
        setWid(value);
        return this;
    }

    @Override
    public CoreProfanityFiltersRecord value2(String value) {
        setType(value);
        return this;
    }

    @Override
    public CoreProfanityFiltersRecord value3(String value) {
        setSwop(value);
        return this;
    }

    @Override
    public CoreProfanityFiltersRecord value4(Byte value) {
        setMExact(value);
        return this;
    }

    @Override
    public CoreProfanityFiltersRecord value5(String value) {
        setAction(value);
        return this;
    }

    @Override
    public CoreProfanityFiltersRecord value6(UShort value) {
        setMinPosts(value);
        return this;
    }

    @Override
    public CoreProfanityFiltersRecord values(Integer value1, String value2, String value3, Byte value4, String value5, UShort value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreProfanityFiltersRecord
     */
    public CoreProfanityFiltersRecord() {
        super(CoreProfanityFilters.CORE_PROFANITY_FILTERS);
    }

    /**
     * Create a detached, initialised CoreProfanityFiltersRecord
     */
    public CoreProfanityFiltersRecord(Integer wid, String type, String swop, Byte mExact, String action, UShort minPosts) {
        super(CoreProfanityFilters.CORE_PROFANITY_FILTERS);

        setWid(wid);
        setType(type);
        setSwop(swop);
        setMExact(mExact);
        setAction(action);
        setMinPosts(minPosts);
    }
}
