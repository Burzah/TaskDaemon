/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.forums.tables;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.forums.Indexes;
import me.aa07.paradise.taskdaemon.database.forums.Keys;
import me.aa07.paradise.taskdaemon.database.forums.ParadiseForums;
import me.aa07.paradise.taskdaemon.database.forums.tables.records.CoreJavascriptRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoreJavascript extends TableImpl<CoreJavascriptRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>paradise_forums.core_javascript</code>
     */
    public static final CoreJavascript CORE_JAVASCRIPT = new CoreJavascript();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CoreJavascriptRecord> getRecordType() {
        return CoreJavascriptRecord.class;
    }

    /**
     * The column <code>paradise_forums.core_javascript.javascript_id</code>.
     */
    public final TableField<CoreJavascriptRecord, Integer> JAVASCRIPT_ID = createField(DSL.name("javascript_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>paradise_forums.core_javascript.javascript_app</code>.
     */
    public final TableField<CoreJavascriptRecord, String> JAVASCRIPT_APP = createField(DSL.name("javascript_app"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_javascript.javascript_location</code>.
     */
    public final TableField<CoreJavascriptRecord, String> JAVASCRIPT_LOCATION = createField(DSL.name("javascript_location"), SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_javascript.javascript_plugin</code>.
     */
    public final TableField<CoreJavascriptRecord, String> JAVASCRIPT_PLUGIN = createField(DSL.name("javascript_plugin"), SQLDataType.VARCHAR(100).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_javascript.javascript_path</code>.
     */
    public final TableField<CoreJavascriptRecord, String> JAVASCRIPT_PATH = createField(DSL.name("javascript_path"), SQLDataType.VARCHAR(100).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_javascript.javascript_name</code>.
     */
    public final TableField<CoreJavascriptRecord, String> JAVASCRIPT_NAME = createField(DSL.name("javascript_name"), SQLDataType.VARCHAR(150).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>paradise_forums.core_javascript.javascript_type</code>.
     */
    public final TableField<CoreJavascriptRecord, String> JAVASCRIPT_TYPE = createField(DSL.name("javascript_type"), SQLDataType.VARCHAR(100).nullable(false).defaultValue(DSL.inline("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_javascript.javascript_content</code>.
     */
    public final TableField<CoreJavascriptRecord, String> JAVASCRIPT_CONTENT = createField(DSL.name("javascript_content"), SQLDataType.CLOB.defaultValue(DSL.inline("NULL", SQLDataType.CLOB)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_javascript.javascript_version</code>.
     */
    public final TableField<CoreJavascriptRecord, String> JAVASCRIPT_VERSION = createField(DSL.name("javascript_version"), SQLDataType.VARCHAR(10).nullable(false).defaultValue(DSL.inline("'0'", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>paradise_forums.core_javascript.javascript_position</code>.
     */
    public final TableField<CoreJavascriptRecord, UInteger> JAVASCRIPT_POSITION = createField(DSL.name("javascript_position"), SQLDataType.INTEGERUNSIGNED.defaultValue(DSL.inline("0", SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>paradise_forums.core_javascript.javascript_key</code>.
     * Look up key 
     */
    public final TableField<CoreJavascriptRecord, String> JAVASCRIPT_KEY = createField(DSL.name("javascript_key"), SQLDataType.CHAR(32).nullable(false).defaultValue(DSL.inline("''", SQLDataType.CHAR)), this, "Look up key ");

    private CoreJavascript(Name alias, Table<CoreJavascriptRecord> aliased) {
        this(alias, aliased, null);
    }

    private CoreJavascript(Name alias, Table<CoreJavascriptRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>paradise_forums.core_javascript</code> table
     * reference
     */
    public CoreJavascript(String alias) {
        this(DSL.name(alias), CORE_JAVASCRIPT);
    }

    /**
     * Create an aliased <code>paradise_forums.core_javascript</code> table
     * reference
     */
    public CoreJavascript(Name alias) {
        this(alias, CORE_JAVASCRIPT);
    }

    /**
     * Create a <code>paradise_forums.core_javascript</code> table reference
     */
    public CoreJavascript() {
        this(DSL.name("core_javascript"), null);
    }

    public <O extends Record> CoreJavascript(Table<O> child, ForeignKey<O, CoreJavascriptRecord> key) {
        super(child, key, CORE_JAVASCRIPT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ParadiseForums.PARADISE_FORUMS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CORE_JAVASCRIPT_LOOK_UP_KEY);
    }

    @Override
    public Identity<CoreJavascriptRecord, Integer> getIdentity() {
        return (Identity<CoreJavascriptRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CoreJavascriptRecord> getPrimaryKey() {
        return Keys.KEY_CORE_JAVASCRIPT_PRIMARY;
    }

    @Override
    public List<UniqueKey<CoreJavascriptRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_CORE_JAVASCRIPT_JAVASCRIPT_LOOKUP);
    }

    @Override
    public CoreJavascript as(String alias) {
        return new CoreJavascript(DSL.name(alias), this);
    }

    @Override
    public CoreJavascript as(Name alias) {
        return new CoreJavascript(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreJavascript rename(String name) {
        return new CoreJavascript(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CoreJavascript rename(Name name) {
        return new CoreJavascript(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, String, String, String, String, String, String, String, String, UInteger, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
