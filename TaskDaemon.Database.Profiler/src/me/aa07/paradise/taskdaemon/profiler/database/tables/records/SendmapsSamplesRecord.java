/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.profiler.database.tables.records;


import java.time.LocalDateTime;

import me.aa07.paradise.taskdaemon.profiler.database.tables.SendmapsSamples;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SendmapsSamplesRecord extends UpdatableRecordImpl<SendmapsSamplesRecord> implements Record6<Long, Integer, LocalDateTime, Long, Double, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>paradise_profilerdaemon.sendmaps_samples.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>paradise_profilerdaemon.sendmaps_samples.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>paradise_profilerdaemon.sendmaps_samples.roundId</code>.
     */
    public void setRoundid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>paradise_profilerdaemon.sendmaps_samples.roundId</code>.
     */
    public Integer getRoundid() {
        return (Integer) get(1);
    }

    /**
     * Setter for
     * <code>paradise_profilerdaemon.sendmaps_samples.sampleTime</code>.
     */
    public void setSampletime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>paradise_profilerdaemon.sendmaps_samples.sampleTime</code>.
     */
    public LocalDateTime getSampletime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>paradise_profilerdaemon.sendmaps_samples.procId</code>.
     */
    public void setProcid(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>paradise_profilerdaemon.sendmaps_samples.procId</code>.
     */
    public Long getProcid() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>paradise_profilerdaemon.sendmaps_samples.value</code>.
     */
    public void setValue(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>paradise_profilerdaemon.sendmaps_samples.value</code>.
     */
    public Double getValue() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>paradise_profilerdaemon.sendmaps_samples.calls</code>.
     */
    public void setCalls(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>paradise_profilerdaemon.sendmaps_samples.calls</code>.
     */
    public Integer getCalls() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Integer, LocalDateTime, Long, Double, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Integer, LocalDateTime, Long, Double, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SendmapsSamples.SENDMAPS_SAMPLES.ID;
    }

    @Override
    public Field<Integer> field2() {
        return SendmapsSamples.SENDMAPS_SAMPLES.ROUNDID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return SendmapsSamples.SENDMAPS_SAMPLES.SAMPLETIME;
    }

    @Override
    public Field<Long> field4() {
        return SendmapsSamples.SENDMAPS_SAMPLES.PROCID;
    }

    @Override
    public Field<Double> field5() {
        return SendmapsSamples.SENDMAPS_SAMPLES.VALUE;
    }

    @Override
    public Field<Integer> field6() {
        return SendmapsSamples.SENDMAPS_SAMPLES.CALLS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getRoundid();
    }

    @Override
    public LocalDateTime component3() {
        return getSampletime();
    }

    @Override
    public Long component4() {
        return getProcid();
    }

    @Override
    public Double component5() {
        return getValue();
    }

    @Override
    public Integer component6() {
        return getCalls();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getRoundid();
    }

    @Override
    public LocalDateTime value3() {
        return getSampletime();
    }

    @Override
    public Long value4() {
        return getProcid();
    }

    @Override
    public Double value5() {
        return getValue();
    }

    @Override
    public Integer value6() {
        return getCalls();
    }

    @Override
    public SendmapsSamplesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SendmapsSamplesRecord value2(Integer value) {
        setRoundid(value);
        return this;
    }

    @Override
    public SendmapsSamplesRecord value3(LocalDateTime value) {
        setSampletime(value);
        return this;
    }

    @Override
    public SendmapsSamplesRecord value4(Long value) {
        setProcid(value);
        return this;
    }

    @Override
    public SendmapsSamplesRecord value5(Double value) {
        setValue(value);
        return this;
    }

    @Override
    public SendmapsSamplesRecord value6(Integer value) {
        setCalls(value);
        return this;
    }

    @Override
    public SendmapsSamplesRecord values(Long value1, Integer value2, LocalDateTime value3, Long value4, Double value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SendmapsSamplesRecord
     */
    public SendmapsSamplesRecord() {
        super(SendmapsSamples.SENDMAPS_SAMPLES);
    }

    /**
     * Create a detached, initialised SendmapsSamplesRecord
     */
    public SendmapsSamplesRecord(Long id, Integer roundid, LocalDateTime sampletime, Long procid, Double value, Integer calls) {
        super(SendmapsSamples.SENDMAPS_SAMPLES);

        setId(id);
        setRoundid(roundid);
        setSampletime(sampletime);
        setProcid(procid);
        setValue(value);
        setCalls(calls);
    }
}
